;; Object policies/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "policies/"
  :tables
  (list
    (semanticdb-table "policy.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_MATH_POLICY_HPP" variable (:constant-flag t) nil [264 285])
            ("boost/mpl/list.hpp" include (:system-flag t) nil [287 316])
            ("boost/mpl/contains.hpp" include (:system-flag t) nil [317 350])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [351 378])
            ("boost/mpl/find_if.hpp" include (:system-flag t) nil [379 411])
            ("boost/mpl/remove_if.hpp" include (:system-flag t) nil [412 446])
            ("boost/mpl/vector.hpp" include (:system-flag t) nil [447 478])
            ("boost/mpl/push_back.hpp" include (:system-flag t) nil [479 513])
            ("boost/mpl/at.hpp" include (:system-flag t) nil [514 541])
            ("boost/mpl/size.hpp" include (:system-flag t) nil [542 571])
            ("boost/mpl/comparison.hpp" include (:system-flag t) nil [572 607])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [608 648])
            ("boost/static_assert.hpp" include (:system-flag t) nil [649 683])
            ("boost/assert.hpp" include (:system-flag t) nil [684 711])
            ("boost/math/tools/config.hpp" include (:system-flag t) nil [712 750])
            ("limits" include (:system-flag t) nil [751 768])
            ("limits.h" include (:system-flag t) nil [857 876])
            ("stdlib.h" include (:system-flag t) nil [877 896])
            ("stddef.h" include (:system-flag t) nil [897 916])
            ("math.h" include (:system-flag t) nil [917 934])
            ("boost" type
               (:members 
                  ( ("math" type
                       (:members 
                          ( ("tools" type
                               (:members 
                                  ( ("digits" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "int"
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1019 1055]))                                          
                                        :prototype-flag t)
                                        (reparse-symbol namespacesubparts) [989 1057])
                                    ("epsilon" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type ("T" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1087 1123]))                                          
                                        :prototype-flag t)
                                        (reparse-symbol namespacesubparts) [1058 1125]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [971 1128])
                            ("policies" type
                               (:members 
                                  ( ("BOOST_MATH_DOMAIN_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1279 1309])
                                    ("BOOST_MATH_POLE_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1377 1405])
                                    ("BOOST_MATH_OVERFLOW_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1477 1509])
                                    ("BOOST_MATH_EVALUATION_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1583 1617])
                                    ("BOOST_MATH_ROUNDING_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1689 1721])
                                    ("BOOST_MATH_UNDERFLOW_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1794 1827])
                                    ("BOOST_MATH_DENORM_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1895 1925])
                                    ("BOOST_MATH_INDETERMINATE_RESULT_ERROR_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2007 2051])
                                    ("BOOST_MATH_DIGITS10_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2115 2141])
                                    ("BOOST_MATH_PROMOTE_FLOAT_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2199 2230])
                                    ("BOOST_MATH_PROMOTE_DOUBLE_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2393 2425])
                                    ("BOOST_MATH_DISCRETE_QUANTILE_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2497 2532])
                                    ("BOOST_MATH_ASSERT_UNDEFINED_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2614 2648])
                                    ("BOOST_MATH_MAX_SERIES_ITERATION_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2716 2754])
                                    ("BOOST_MATH_MAX_ROOT_ITERATION_POLICY" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2823 2859])
                                    ("BOOST_MATH_META_INT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2907 2926])
                                    ("BOOST_MATH_META_BOOL" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3543 3563])
                                    ("error_policy_type" type
                                       (:members 
                                          ( ("throw_on_error" variable
                                               (:constant-flag t
                                                :default-value (5966 5967)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [5949 5967])
                                            ("errno_on_error" variable
                                               (:constant-flag t
                                                :default-value (5989 5990)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [5972 5990])
                                            ("ignore_error" variable
                                               (:constant-flag t
                                                :default-value (6010 6011)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [5995 6011])
                                            ("user_error" variable
                                               (:constant-flag t
                                                :default-value (6029 6030)
                                                :type "int")
                                                (reparse-symbol enumsubparts) [6016 6030]))                                          
                                        :type "enum")
                                        (reparse-symbol namespacesubparts) [5921 6033])
                                    ("domain_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6035 6119])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("domain_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("domain_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6035 6119])
                                    ("pole_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6120 6200])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("pole_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("pole_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6120 6200])
                                    ("overflow_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6201 6289])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("overflow_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("overflow_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6201 6289])
                                    ("underflow_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6290 6380])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("underflow_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("underflow_error" type
                                                             (:template-specifier 
                                                                ( ("ignore_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6290 6380])
                                    ("denorm_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6381 6465])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("denorm_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("denorm_error" type
                                                             (:template-specifier 
                                                                ( ("ignore_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6381 6465])
                                    ("evaluation_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6466 6558])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("evaluation_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("evaluation_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6466 6558])
                                    ("rounding_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6559 6647])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("rounding_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("rounding_error" type
                                                             (:template-specifier 
                                                                ( ("throw_on_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6559 6647])
                                    ("indeterminate_result_error" type
                                       (:template 
                                          ( ("error_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6648 6760])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("error_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("indeterminate_result_error" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("indeterminate_result_error" type
                                                             (:template-specifier 
                                                                ( ("ignore_error" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6648 6760])
                                    ("promote_float" type
                                       (:template 
                                          ( ("bool" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::bool_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6808 6876])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("bool" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("true" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6808 6876])
                                    ("promote_double" type
                                       (:template 
                                          ( ("bool" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::bool_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6877 6947])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("bool" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("true" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6877 6947])
                                    ("assert_undefined" type
                                       (:template 
                                          ( ("bool" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::bool_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6948 7022])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("bool" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("assert_undefined" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("assert_undefined" type
                                                             (:template-specifier 
                                                                ( ("true" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [6948 7022])
                                    ("discrete_quantile_policy_type" type
                                       (:members 
                                          ( ("real" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7109 7114])
                                            ("integer_round_outwards" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7118 7141])
                                            ("integer_round_inwards" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7145 7167])
                                            ("integer_round_down" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7171 7190])
                                            ("integer_round_up" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7194 7211])
                                            ("integer_round_nearest" variable
                                               (:constant-flag t
                                                :type "int")
                                                (reparse-symbol enumsubparts) [7215 7238]))                                          
                                        :type "enum")
                                        (reparse-symbol namespacesubparts) [7069 7239])
                                    ("discrete_quantile" type
                                       (:template 
                                          ( ("discrete_quantile_policy_type" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [7241 7347])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("discrete_quantile_policy_type" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("discrete_quantile" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("discrete_quantile" type
                                                             (:template-specifier 
                                                                ( ("integer_round_outwards" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7241 7347])
                                    ("digits10" type
                                       (:superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [7368 7430])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("int" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits10" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits10" type
                                                             (:template-specifier (("0"))
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7368 7430])
                                    ("digits2" type
                                       (:superclasses 
                                          ( ("boost::mpl::int_" type
                                               (:protection "public"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [7431 7467])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("int" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits2" type
                                                             (:template-specifier 
                                                                ( ("N" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("digits2" type
                                                             (:template-specifier (("0"))
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7431 7467])
                                    ("boost::mpl::int_" variable (:type "int") (reparse-symbol namespacesubparts) [7489 7586])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("unsigned int" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("N" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("max_series_iterations" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7489 7586])
                                    ("boost::mpl::int_" variable (:type "int") (reparse-symbol namespacesubparts) [7587 7680])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_valid_arg" function
                                               (:template 
                                                  ( ("unsigned int" type nil nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("N" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) nil)
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:constant-flag t
                                                        :type "long")
                                                        (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("max_root_iterations" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) nil)
                                            ("_imp" variable (:type "int") (reparse-symbol namespacesubparts) nil))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7587 7680])
                                    ("BOOST_MATH_PARAMETER" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7741 7761])
                                    ("default_policy" type (:type "struct") (reparse-symbol namespacesubparts) [7857 7881])
                                    ("detail" type
                                       (:members 
                                          ( ("precision" type
                                               (:template 
                                                  ( ("Digits10" type (:type "class") nil nil)
                                                    ("Digits2" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("digits2_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8215 8233])
                                                    ("public" label nil (reparse-symbol classsubparts) [8234 8241])
                                                    ("type" type
                                                       (:typedef ("mpl::if_c::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8451 8565]))                                                  )
                                                (reparse-symbol namespacesubparts) [7970 8575])
                                            ("select_result" type
                                               (:template 
                                                  ( ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil)
                                                    ("bool" type nil nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("A" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8639 8654]))                                                  )
                                                (reparse-symbol namespacesubparts) [8577 8657])
                                            ("select_result" type
                                               (:template 
                                                  ( ("A" type (:type "class") nil nil)
                                                    ("B" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("mpl::deref::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8725 8767]))                                                  
                                                :template-specifier 
                                                  ( ("A" type nil nil nil)
                                                    ("B" type nil nil nil)
                                                    ("false" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [8658 8770])
                                            ("find_arg" type
                                               (:template 
                                                  ( ("Seq" type (:type "class") nil nil)
                                                    ("Pred" type (:type "class") nil nil)
                                                    ("DefaultType" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("private" label nil (reparse-symbol classsubparts) [8842 8850])
                                                    ("iter" type
                                                       (:typedef ("mpl::find_if::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8854 8906])
                                                    ("end_type" type
                                                       (:typedef ("mpl::end::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [8910 8956])
                                                    ("public" label nil (reparse-symbol classsubparts) [8957 8964])
                                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9073 9083]))                                                  )
                                                (reparse-symbol namespacesubparts) [8772 9086])
                                            ("test_is_valid_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [9113 9117]))                                                  
                                                :type "double")
                                                (reparse-symbol namespacesubparts) [9088 9118])
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [9146 9150]))                                                  
                                                :type "double")
                                                (reparse-symbol namespacesubparts) [9119 9151])
                                            ("test_is_valid_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("default_policy" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [9175 9197]))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) [9152 9198])
                                            ("test_is_default_arg" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("default_policy" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [9224 9246]))                                                  
                                                :type "char")
                                                (reparse-symbol namespacesubparts) [9199 9247])
                                            ("is_valid_policy_imp" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("BOOST_STATIC_CONSTANT" function
                                                       (:prototype-flag t
                                                        :arguments 
                                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [9323 9328])
                                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9329 9336]))                                                          
                                                        :type "int")
                                                        (reparse-symbol classsubparts) [9301 9422]))                                                  )
                                                (reparse-symbol namespacesubparts) [9249 9425])
                                            ("is_default_policy_imp" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("BOOST_STATIC_CONSTANT" function
                                                       (:prototype-flag t
                                                        :arguments 
                                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [9502 9507])
                                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9508 9515]))                                                          
                                                        :type "int")
                                                        (reparse-symbol classsubparts) [9480 9603]))                                                  )
                                                (reparse-symbol namespacesubparts) [9427 9606])
                                            ("append_N" type
                                               (:template 
                                                  ( ("Seq" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil)
                                                    ("int" type nil nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("new_seq" type
                                                       (:typedef ("mpl::push_back::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10035 10089])
                                                    ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10137 10147]))                                                  )
                                                (reparse-symbol namespacesubparts) [9977 10150])
                                            ("append_N" type
                                               (:template 
                                                  ( ("Seq" type (:type "class") nil nil)
                                                    ("T" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("Seq" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10214 10231]))                                                  
                                                :template-specifier 
                                                  ( ("Seq" type nil nil nil)
                                                    ("T" type nil nil nil)
                                                    ("0"))                                                  )
                                                (reparse-symbol namespacesubparts) [10152 10234])
                                            ("default_args" type
                                               (:template 
                                                  ( ("bool" type nil nil nil)
                                                    ("bool" type nil nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10416 10450])
                                                    ("arg2" type
                                                       (:typedef ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10454 10489]))                                                  )
                                                (reparse-symbol namespacesubparts) [10365 10492])
                                            ("default_args" type
                                               (:type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10545 10573])
                                                    ("arg2" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10577 10605]))                                                  
                                                :template-specifier 
                                                  ( ("false" type nil nil nil)
                                                    ("false" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [10494 10608])
                                            ("default_args" type
                                               (:type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("promote_float" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10660 10694])
                                                    ("arg2" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10698 10726]))                                                  
                                                :template-specifier 
                                                  ( ("true" type nil nil nil)
                                                    ("false" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [10610 10729])
                                            ("default_args" type
                                               (:type "struct"
                                                :members 
                                                  ( ("arg1" type
                                                       (:typedef ("promote_double" type
                                                             (:template-specifier 
                                                                ( ("false" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10781 10816])
                                                    ("arg2" type
                                                       (:typedef ("default_policy" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [10820 10848]))                                                  
                                                :template-specifier 
                                                  ( ("false" type nil nil nil)
                                                    ("true" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [10731 10851])
                                            ("forwarding_arg1" variable (:type ("arg1" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [10942 10963])
                                            ("forwarding_arg2" variable (:type ("arg2" type (:type "class") nil nil)) (reparse-symbol namespacesubparts) [11053 11074]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7883 11077])
                                    ("policy" type
                                       (:template 
                                          ( ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil)
                                            ("A10" type (:type "class") nil nil)
                                            ("A11" type (:type "class") nil nil)
                                            ("A12" type (:type "class") nil nil)
                                            ("A13" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [11680 11688])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11760 11818]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11738 11819])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11845 11903]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11823 11904])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11930 11988]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11908 11989])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12015 12073]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11993 12074])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12100 12158]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12078 12159])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12185 12243]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12163 12244])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12270 12328]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12248 12329])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12355 12413]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12333 12414])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12440 12498]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12418 12499])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12525 12584]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12503 12585])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12611 12670]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12589 12671])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12697 12756]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12675 12757])
                                            ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("boost::math::policies::detail::is_valid_policy::value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12783 12842]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12761 12843])
                                            ("arg_list" type
                                               (:typedef ("mpl::list" type
                                                     (:template-specifier 
                                                        ( ("A1" type nil nil nil)
                                                          ("A2" type nil nil nil)
                                                          ("A3" type nil nil nil)
                                                          ("A4" type nil nil nil)
                                                          ("A5" type nil nil nil)
                                                          ("A6" type nil nil nil)
                                                          ("A7" type nil nil nil)
                                                          ("A8" type nil nil nil)
                                                          ("A9" type nil nil nil)
                                                          ("A10" type nil nil nil)
                                                          ("A11" type nil nil nil)
                                                          ("A12" type nil nil nil)
                                                          ("A13" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12892 12963])
                                            ("public" label nil (reparse-symbol classsubparts) [12965 12972])
                                            ("domain_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12976 13087])
                                            ("pole_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13091 13196])
                                            ("overflow_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13200 13317])
                                            ("underflow_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13321 13441])
                                            ("denorm_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13445 13556])
                                            ("evaluation_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13560 13683])
                                            ("rounding_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13687 13804])
                                            ("indeterminate_result_error_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13808 13961])
                                            ("private" label nil (reparse-symbol classsubparts) [13962 13970])
                                            ("digits10_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14020 14119])
                                            ("bits_precision_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14123 14226])
                                            ("public" label nil (reparse-symbol classsubparts) [14227 14234])
                                            ("precision_type" type
                                               (:typedef ("detail::precision::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14238 14330])
                                            ("promote_float_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14372 14486])
                                            ("promote_double_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14490 14607])
                                            ("discrete_quantile_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14649 14775])
                                            ("assert_undefined_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14834 14957])
                                            ("max_series_iterations_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14995 15133])
                                            ("max_root_iterations_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15137 15269]))                                          )
                                        (reparse-symbol namespacesubparts) [11177 15272])
                                    ("policy" type
                                       (:type "struct"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [15685 15692])
                                            ("domain_error_type" type
                                               (:typedef ("domain_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15696 15737])
                                            ("pole_error_type" type
                                               (:typedef ("pole_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15741 15778])
                                            ("overflow_error_type" type
                                               (:typedef ("overflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15782 15827])
                                            ("underflow_error_type" type
                                               (:typedef ("underflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15831 15878])
                                            ("denorm_error_type" type
                                               (:typedef ("denorm_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15882 15923])
                                            ("evaluation_error_type" type
                                               (:typedef ("evaluation_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15927 15976])
                                            ("rounding_error_type" type
                                               (:typedef ("rounding_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [15980 16025])
                                            ("indeterminate_result_error_type" type
                                               (:typedef ("indeterminate_result_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16029 16098])
                                            ("precision_type" type
                                               (:typedef ("digits2" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16138 16171])
                                            ("promote_float_type" type
                                               (:typedef ("promote_float" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16263 16306])
                                            ("promote_double_type" type
                                               (:typedef ("promote_double" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16310 16355])
                                            ("discrete_quantile_type" type
                                               (:typedef ("discrete_quantile" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16359 16410])
                                            ("assert_undefined_type" type
                                               (:typedef ("assert_undefined" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16414 16463])
                                            ("max_series_iterations_type" type
                                               (:typedef ("max_series_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16467 16526])
                                            ("max_root_iterations_type" type
                                               (:typedef ("max_root_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16530 16585]))                                          
                                        :template-specifier 
                                          ( ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [15481 16588])
                                    ("policy" type
                                       (:type "struct"
                                        :members 
                                          ( ("public" label nil (reparse-symbol classsubparts) [16812 16819])
                                            ("domain_error_type" type
                                               (:typedef ("domain_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16823 16864])
                                            ("pole_error_type" type
                                               (:typedef ("pole_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16868 16905])
                                            ("overflow_error_type" type
                                               (:typedef ("overflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16909 16954])
                                            ("underflow_error_type" type
                                               (:typedef ("underflow_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [16958 17005])
                                            ("denorm_error_type" type
                                               (:typedef ("denorm_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17009 17050])
                                            ("evaluation_error_type" type
                                               (:typedef ("evaluation_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17054 17103])
                                            ("rounding_error_type" type
                                               (:typedef ("rounding_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17107 17152])
                                            ("indeterminate_result_error_type" type
                                               (:typedef ("indeterminate_result_error" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17156 17225])
                                            ("precision_type" type
                                               (:typedef ("digits2" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17265 17298])
                                            ("promote_float_type" type
                                               (:typedef ("promote_float" type
                                                     (:template-specifier 
                                                        ( ("false" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17390 17438])
                                            ("promote_double_type" type
                                               (:typedef ("promote_double" type
                                                     (:template-specifier 
                                                        ( ("false" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17442 17492])
                                            ("discrete_quantile_type" type
                                               (:typedef ("discrete_quantile" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17496 17547])
                                            ("assert_undefined_type" type
                                               (:typedef ("assert_undefined" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17551 17600])
                                            ("max_series_iterations_type" type
                                               (:typedef ("max_series_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17604 17663])
                                            ("max_root_iterations_type" type
                                               (:typedef ("max_root_iterations" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17667 17722]))                                          
                                        :template-specifier 
                                          ( ("detail::forwarding_arg1" type nil nil nil)
                                            ("detail::forwarding_arg2" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [16590 17725])
                                    ("normalise" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil)
                                            ("A1" type (:type "class") nil nil)
                                            ("A2" type (:type "class") nil nil)
                                            ("A3" type (:type "class") nil nil)
                                            ("A4" type (:type "class") nil nil)
                                            ("A5" type (:type "class") nil nil)
                                            ("A6" type (:type "class") nil nil)
                                            ("A7" type (:type "class") nil nil)
                                            ("A8" type (:type "class") nil nil)
                                            ("A9" type (:type "class") nil nil)
                                            ("A10" type (:type "class") nil nil)
                                            ("A11" type (:type "class") nil nil)
                                            ("A12" type (:type "class") nil nil)
                                            ("A13" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [18258 18266])
                                            ("arg_list" type
                                               (:typedef ("mpl::list" type
                                                     (:template-specifier 
                                                        ( ("A1" type nil nil nil)
                                                          ("A2" type nil nil nil)
                                                          ("A3" type nil nil nil)
                                                          ("A4" type nil nil nil)
                                                          ("A5" type nil nil nil)
                                                          ("A6" type nil nil nil)
                                                          ("A7" type nil nil nil)
                                                          ("A8" type nil nil nil)
                                                          ("A9" type nil nil nil)
                                                          ("A10" type nil nil nil)
                                                          ("A11" type nil nil nil)
                                                          ("A12" type nil nil nil)
                                                          ("A13" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [18270 18341])
                                            ("domain_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18453 18476])
                                            ("pole_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18584 18605])
                                            ("overflow_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18721 18746])
                                            ("underflow_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [18864 18890])
                                            ("denorm_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19002 19025])
                                            ("evaluation_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19145 19172])
                                            ("rounding_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19288 19313])
                                            ("indeterminate_result_error_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19453 19490])
                                            ("digits10_type" type
                                               (:typedef ("detail::find_arg::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [19540 19639])
                                            ("bits_precision_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [19743 19768])
                                            ("precision_type" type
                                               (:typedef ("detail::precision::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [19772 19864])
                                            ("promote_float_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20016 20040])
                                            ("promote_double_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20156 20181])
                                            ("discrete_quantile_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20341 20369])
                                            ("assert_undefined_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20544 20571])
                                            ("max_series_iterations_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20734 20766])
                                            ("max_root_iterations_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [20891 20921])
                                            ("result_list" type
                                               (:typedef ("mpl::vector" type
                                                     (:template-specifier 
                                                        ( ("domain_error_type" type nil nil nil)
                                                          ("pole_error_type" type nil nil nil)
                                                          ("overflow_error_type" type nil nil nil)
                                                          ("underflow_error_type" type nil nil nil)
                                                          ("denorm_error_type" type nil nil nil)
                                                          ("evaluation_error_type" type nil nil nil)
                                                          ("rounding_error_type" type nil nil nil)
                                                          ("indeterminate_result_error_type" type nil nil nil)
                                                          ("precision_type" type nil nil nil)
                                                          ("promote_float_type" type nil nil nil)
                                                          ("promote_double_type" type nil nil nil)
                                                          ("discrete_quantile_type" type nil nil nil)
                                                          ("assert_undefined_type" type nil nil nil)
                                                          ("max_series_iterations_type" type nil nil nil)
                                                          ("max_root_iterations_type" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [20978 21434])
                                            ("reduced_list" type
                                               (:typedef ("mpl::remove_if::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [21514 21614])
                                            ("result_type" type
                                               (:typedef ("detail::append_N::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [21668 21798])
                                            ("public" label nil (reparse-symbol classsubparts) [21799 21806])
                                            ("type" variable (:type "int") (reparse-symbol classsubparts) [22584 22589]))                                          )
                                        (reparse-symbol namespacesubparts) [17727 22592])
                                    ("normalise" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("policy" type
                                                     (:template-specifier 
                                                        ( ("detail::forwarding_arg1" type nil nil nil)
                                                          ("detail::forwarding_arg2" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [23021 23091]))                                          
                                        :template-specifier 
                                          ( ("policy" type nil nil nil)
                                            ("promote_float" type nil nil nil)
                                            ("promote_double" type nil nil nil)
                                            ("discrete_quantile" type nil nil nil)
                                            ("assert_undefined" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [22666 23094])
                                    ("normalise" type
                                       (:type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("policy" type
                                                     (:template-specifier 
                                                        ( ("detail::forwarding_arg1" type nil nil nil)
                                                          ("detail::forwarding_arg2" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [23496 23566]))                                          
                                        :template-specifier 
                                          ( ("policy" type nil nil nil)
                                            ("promote_float" type nil nil nil)
                                            ("promote_double" type nil nil nil)
                                            ("discrete_quantile" type nil nil nil)
                                            ("assert_undefined" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil)
                                            ("default_policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [23096 23569])
                                    ("make_policy" function
                                       (:typemodifiers ("inline")
                                        :type ("policy" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [23571 23623])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23703 23713]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [23686 23807])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23901 23911])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [23912 23922]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [23884 24020])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24128 24138])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24139 24149])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24150 24160]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24111 24262])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24384 24394])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24395 24405])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24406 24416])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24417 24427]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24367 24533])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24669 24679])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24680 24690])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24691 24701])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24702 24712])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24713 24723]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24652 24833])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24983 24993])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [24994 25004])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25005 25015])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25016 25026])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25027 25037])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25038 25048]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [24966 25162])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25326 25336])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25337 25347])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25348 25358])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25359 25369])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25370 25380])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25381 25391])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25392 25402]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [25309 25520])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25698 25708])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25709 25719])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25720 25730])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25731 25741])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25742 25752])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25753 25763])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25764 25774])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [25775 25785]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [25681 25907])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26099 26109])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26110 26120])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26121 26131])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26132 26142])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26143 26153])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26154 26164])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26165 26175])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26176 26186])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26187 26197]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [26082 26323])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26531 26541])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26542 26552])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26553 26563])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26564 26574])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26575 26585])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26586 26596])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26597 26607])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26608 26618])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26619 26629])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A10" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26630 26641]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [26514 26772])
                                    ("make_policy" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [26996 27006])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27007 27017])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A3" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27018 27028])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A4" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27029 27039])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A5" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27040 27050])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A6" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27051 27061])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A7" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27062 27072])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A8" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27073 27083])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A9" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27084 27094])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A10" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27095 27106])
                                            ("" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A11" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [27107 27118]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [26979 27252])
                                    ("evaluation" type
                                       (:template 
                                          ( ("Real" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("Real" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [27365 27383]))                                          )
                                        (reparse-symbol namespacesubparts) [27306 27386])
                                    ("evaluation" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27529 27539]))                                          
                                        :template-specifier 
                                          ( ("float" type nil nil nil)
                                            ("Policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [27388 27542])
                                    ("evaluation" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [27693 27703]))                                          
                                        :template-specifier 
                                          ( ("double" type nil nil nil)
                                            ("Policy" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [27544 27706])
                                    ("precision" type
                                       (:template 
                                          ( ("Real" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :type "int")
                                                (reparse-symbol classsubparts) [29134 29299])
                                            ("precision_type" type
                                               (:typedef ("Policy::precision_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [29324 29379])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [29921 29931]))                                          )
                                        (reparse-symbol namespacesubparts) [29076 30674])
                                    ("detail" type
                                       (:members 
                                          ( ("digits_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type "int"
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::true_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [30911 30929]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [30856 31216])
                                            ("digits_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type "int"
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::false_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [31273 31292]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [31218 31326]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [30837 31329])
                                    ("digits" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type "int"
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [31402 31438]))                                          
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [31351 31570])
                                    ("get_max_series_iterations" function
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "unsigned long"
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [31572 31742])
                                    ("get_max_root_iterations" function
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "unsigned long"
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [31744 31910])
                                    ("detail" type
                                       (:members 
                                          ( ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil)
                                                    ("Small" type (:type "class") nil nil)
                                                    ("Default" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32023 32094]))                                                  )
                                                (reparse-symbol namespacesubparts) [31931 32097])
                                            ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32198 32269]))                                                  
                                                :template-specifier 
                                                  ( ("T" type nil nil nil)
                                                    ("Digits" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [32099 32272])
                                            ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32373 32531]))                                                  
                                                :template-specifier 
                                                  ( ("T" type nil nil nil)
                                                    ("Digits" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil)
                                                    ("mpl::false_" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [32273 32534])
                                            ("series_factor_calc" type
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Digits" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("get" function
                                                       (:typemodifiers ("static")
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [32635 32706]))                                                  
                                                :template-specifier 
                                                  ( ("T" type nil nil nil)
                                                    ("Digits" type nil nil nil)
                                                    ("mpl::false_" type nil nil nil)
                                                    ("mpl::true_" type nil nil nil))                                                  )
                                                (reparse-symbol namespacesubparts) [32535 32709])
                                            ("get_epsilon_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type ("T" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::true_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [32769 32787]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [32711 33430])
                                            ("get_epsilon_imp" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil)
                                                    ("Policy" type (:type "class") nil nil))                                                  
                                                :type ("T" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("mpl::false_" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [33490 33509]))                                                  
                                                :typemodifiers ("inline"))
                                                (reparse-symbol namespacesubparts) [33432 33544]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [31912 33547])
                                    ("get_epsilon" function
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Policy" type (:type "class") nil nil))                                          
                                        :type ("T" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("" variable (:type ("BOOST_MATH_EXPLICIT_TEMPLATE_TYPE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [33623 33659]))                                          
                                        :typemodifiers ("inline"))
                                        (reparse-symbol namespacesubparts) [33569 33838])
                                    ("detail" type
                                       (:members 
                                          ( ("test_is_policy" function
                                               (:template 
                                                  ( ("A1" type (:type "class") nil nil)
                                                    ("A2" type (:type "class") nil nil)
                                                    ("A3" type (:type "class") nil nil)
                                                    ("A4" type (:type "class") nil nil)
                                                    ("A5" type (:type "class") nil nil)
                                                    ("A6" type (:type "class") nil nil)
                                                    ("A7" type (:type "class") nil nil)
                                                    ("A8" type (:type "class") nil nil)
                                                    ("A9" type (:type "class") nil nil)
                                                    ("A10" type (:type "class") nil nil)
                                                    ("A11" type (:type "class") nil nil))                                                  
                                                :type "char"
                                                :arguments 
                                                  ( ("" variable
                                                       (:pointer 1
                                                        :constant-flag t
                                                        :type ("policy" type
                                                             (:template-specifier 
                                                                ( ("A1" type nil nil nil)
                                                                  ("A2" type nil nil nil)
                                                                  ("A3" type nil nil nil)
                                                                  ("A4" type nil nil nil)
                                                                  ("A5" type nil nil nil)
                                                                  ("A6" type nil nil nil)
                                                                  ("A7" type nil nil nil)
                                                                  ("A8" type nil nil nil)
                                                                  ("A9" type nil nil nil)
                                                                  ("A10" type nil nil nil)
                                                                  ("A11" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [34103 34153]))                                                  
                                                :prototype-flag t)
                                                (reparse-symbol namespacesubparts) [33859 34154])
                                            ("test_is_policy" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("..." variable (:type "vararg") (reparse-symbol arg-sub-list) [34177 34181]))                                                  
                                                :type "double")
                                                (reparse-symbol namespacesubparts) [34155 34182])
                                            ("is_policy_imp" type
                                               (:template 
                                                  ( ("P" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("BOOST_STATIC_CONSTANT" function
                                                       (:prototype-flag t
                                                        :arguments 
                                                          ( ("" variable (:type "bool") (reparse-symbol arg-sub-list) [34251 34256])
                                                            ("" variable (:type ("value" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [34257 34347]))                                                          
                                                        :type "int")
                                                        (reparse-symbol classsubparts) [34229 34349]))                                                  )
                                                (reparse-symbol namespacesubparts) [34184 34352]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [33840 34355])
                                    ("constructor_error_check" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("domain_error_type" type
                                               (:typedef ("Policy::domain_error_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [34599 34660])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [34826 34836]))                                          )
                                        (reparse-symbol namespacesubparts) [34539 34839])
                                    ("method_error_check" type
                                       (:template 
                                          ( ("Policy" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("domain_error_type" type
                                               (:typedef ("Policy::domain_error_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [34896 34957])
                                            ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [35123 35133]))                                          )
                                        (reparse-symbol namespacesubparts) [34841 35136]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1130 35139]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [953 35140]))                  
                :type "namespace")
                nil [936 35141]))          
      :file "policy.hpp"
      :pointmax 35192
      :fsize 35191
      :lastmodtime '(21790 57546 0 0)
      :unmatched-syntax '((punctuation 35122 . 35123) (punctuation 35121 . 35122) (punctuation 35120 . 35121) (symbol 35115 . 35120) (punctuation 35114 . 35115) (punctuation 35113 . 35114) (symbol 35110 . 35113) (punctuation 35102 . 35103) (symbol 35096 . 35102) (punctuation 35095 . 35096) (punctuation 35094 . 35095) (symbol 35091 . 35094) (punctuation 35083 . 35084) (semantic-list 35043 . 35083) (punctuation 35041 . 35042) (punctuation 35040 . 35041) (semantic-list 34995 . 35039) (punctuation 34987 . 34988) (symbol 34983 . 34987) (punctuation 34982 . 34983) (punctuation 34981 . 34982) (symbol 34978 . 34981) (TYPENAME 34969 . 34977) (TYPEDEF 34961 . 34968) (punctuation 34825 . 34826) (punctuation 34824 . 34825) (punctuation 34823 . 34824) (symbol 34817 . 34823) (punctuation 34816 . 34817) (punctuation 34815 . 34816) (symbol 34812 . 34815) (punctuation 34804 . 34805) (symbol 34799 . 34804) (punctuation 34798 . 34799) (punctuation 34797 . 34798) (symbol 34794 . 34797) (punctuation 34786 . 34787) (semantic-list 34746 . 34786) (punctuation 34744 . 34745) (punctuation 34743 . 34744) (semantic-list 34698 . 34742) (punctuation 34690 . 34691) (symbol 34686 . 34690) (punctuation 34685 . 34686) (punctuation 34684 . 34685) (symbol 34681 . 34684) (TYPENAME 34672 . 34680) (TYPEDEF 34664 . 34671) (punctuation 34474 . 34475) (semantic-list 34472 . 34474) (punctuation 34470 . 34471) (symbol 34465 . 34470) (punctuation 34464 . 34465) (punctuation 34463 . 34464) (punctuation 34462 . 34463) (symbol 34461 . 34462) (punctuation 34460 . 34461) (symbol 34447 . 34460) (punctuation 34446 . 34447) (punctuation 34445 . 34446) (symbol 34439 . 34445) (punctuation 34438 . 34439) (punctuation 34437 . 34438) (symbol 34429 . 34437) (punctuation 34428 . 34429) (punctuation 34427 . 34428) (symbol 34423 . 34427) (punctuation 34422 . 34423) (punctuation 34421 . 34422) (symbol 34416 . 34421) (punctuation 34415 . 34416) (punctuation 34414 . 34415) (punctuation 34412 . 34413) (symbol 34407 . 34412) (punctuation 34406 . 34407) (punctuation 34405 . 34406) (symbol 34402 . 34405) (PUBLIC 34395 . 34401) (punctuation 34393 . 34394) (symbol 34383 . 34392) (STRUCT 34376 . 34382) (punctuation 34374 . 34375) (symbol 34373 . 34374) (CLASS 34367 . 34372) (punctuation 34366 . 34367) (TEMPLATE 34357 . 34365) (semantic-list 33656 . 33659) (semantic-list 31435 . 31438) (punctuation 29920 . 29921) (punctuation 29919 . 29920) (punctuation 29918 . 29919) (symbol 29910 . 29914) (punctuation 29909 . 29910) (punctuation 29908 . 29909) (punctuation 29907 . 29908) (symbol 29886 . 29900) (punctuation 29836 . 29837) (punctuation 29835 . 29836) (symbol 29829 . 29835) (punctuation 29828 . 29829) (punctuation 29827 . 29828) (punctuation 29826 . 29827) (symbol 29822 . 29826) (punctuation 29821 . 29822) (symbol 29807 . 29821) (punctuation 29806 . 29807) (punctuation 29805 . 29806) (symbol 29802 . 29805) (punctuation 29801 . 29802) (punctuation 29800 . 29801) (punctuation 29798 . 29799) (symbol 29791 . 29798) (punctuation 29725 . 29726) (semantic-list 29611 . 29725) (punctuation 29600 . 29601) (symbol 29596 . 29600) (punctuation 29595 . 29596) (punctuation 29594 . 29595) (symbol 29591 . 29594) (TYPENAME 29582 . 29590) (punctuation 29574 . 29575) (symbol 29560 . 29574) (punctuation 29515 . 29516) (semantic-list 29417 . 29515) (punctuation 29409 . 29410) (symbol 29405 . 29409) (punctuation 29404 . 29405) (punctuation 29403 . 29404) (symbol 29400 . 29403) (TYPENAME 29391 . 29399) (TYPEDEF 29383 . 29390) (semantic-list 29199 . 29297) (punctuation 29197 . 29198) (punctuation 29196 . 29197) (semantic-list 29154 . 29195) (punctuation 27692 . 27693) (punctuation 27691 . 27692) (punctuation 27690 . 27691) (DOUBLE 27684 . 27690) (punctuation 27682 . 27683) (DOUBLE 27676 . 27682) (LONG 27671 . 27675) (punctuation 27669 . 27670) (symbol 27650 . 27669) (punctuation 27649 . 27650) (punctuation 27648 . 27649) (symbol 27642 . 27648) (TYPENAME 27633 . 27641) (punctuation 27632 . 27633) (symbol 27629 . 27632) (punctuation 27628 . 27629) (punctuation 27627 . 27628) (symbol 27624 . 27627) (TYPENAME 27615 . 27623) (TYPEDEF 27607 . 27614) (punctuation 27528 . 27529) (punctuation 27527 . 27528) (punctuation 27526 . 27527) (FLOAT 27521 . 27526) (punctuation 27519 . 27520) (DOUBLE 27513 . 27519) (punctuation 27511 . 27512) (symbol 27493 . 27511) (punctuation 27492 . 27493) (punctuation 27491 . 27492) (symbol 27485 . 27491) (TYPENAME 27476 . 27484) (punctuation 27475 . 27476) (symbol 27472 . 27475) (punctuation 27471 . 27472) (punctuation 27470 . 27471) (symbol 27467 . 27470) (TYPENAME 27458 . 27466) (TYPEDEF 27450 . 27457) (punctuation 26978 . 26979) (punctuation 26977 . 26978) (punctuation 26976 . 26977) (symbol 26973 . 26976) (punctuation 26971 . 26972) (symbol 26968 . 26971) (punctuation 26966 . 26967) (symbol 26964 . 26966) (punctuation 26962 . 26963) (symbol 26960 . 26962) (punctuation 26958 . 26959) (symbol 26956 . 26958) (punctuation 26954 . 26955) (symbol 26952 . 26954) (punctuation 26950 . 26951) (symbol 26948 . 26950) (punctuation 26946 . 26947) (symbol 26944 . 26946) (punctuation 26942 . 26943) (symbol 26940 . 26942) (punctuation 26938 . 26939) (symbol 26936 . 26938) (punctuation 26934 . 26935) (symbol 26932 . 26934) (punctuation 26930 . 26931) (punctuation 26929 . 26930) (punctuation 26928 . 26929) (symbol 26922 . 26928) (punctuation 26921 . 26922) (symbol 26912 . 26921) (TYPENAME 26903 . 26911) (INLINE 26896 . 26902) (punctuation 26894 . 26895) (symbol 26891 . 26894) (CLASS 26885 . 26890) (punctuation 26883 . 26884) (symbol 26880 . 26883) (CLASS 26874 . 26879) (punctuation 26872 . 26873) (symbol 26870 . 26872) (CLASS 26864 . 26869) (punctuation 26862 . 26863) (symbol 26860 . 26862) (CLASS 26854 . 26859) (punctuation 26852 . 26853) (symbol 26850 . 26852) (CLASS 26844 . 26849) (punctuation 26842 . 26843) (symbol 26840 . 26842) (CLASS 26834 . 26839) (punctuation 26832 . 26833) (symbol 26830 . 26832) (CLASS 26824 . 26829) (punctuation 26822 . 26823) (symbol 26820 . 26822) (CLASS 26814 . 26819) (punctuation 26812 . 26813) (symbol 26810 . 26812) (CLASS 26804 . 26809) (punctuation 26802 . 26803) (symbol 26800 . 26802) (CLASS 26794 . 26799) (punctuation 26792 . 26793) (symbol 26790 . 26792) (CLASS 26784 . 26789) (punctuation 26783 . 26784) (TEMPLATE 26774 . 26782) (punctuation 26513 . 26514) (punctuation 26512 . 26513) (punctuation 26511 . 26512) (symbol 26508 . 26511) (punctuation 26506 . 26507) (symbol 26504 . 26506) (punctuation 26502 . 26503) (symbol 26500 . 26502) (punctuation 26498 . 26499) (symbol 26496 . 26498) (punctuation 26494 . 26495) (symbol 26492 . 26494) (punctuation 26490 . 26491) (symbol 26488 . 26490) (punctuation 26486 . 26487) (symbol 26484 . 26486) (punctuation 26482 . 26483) (symbol 26480 . 26482) (punctuation 26478 . 26479) (symbol 26476 . 26478) (punctuation 26474 . 26475) (symbol 26472 . 26474) (punctuation 26470 . 26471) (punctuation 26469 . 26470) (punctuation 26468 . 26469) (symbol 26462 . 26468) (punctuation 26461 . 26462) (symbol 26452 . 26461) (TYPENAME 26443 . 26451) (INLINE 26436 . 26442) (punctuation 26434 . 26435) (symbol 26431 . 26434) (CLASS 26425 . 26430) (punctuation 26423 . 26424) (symbol 26421 . 26423) (CLASS 26415 . 26420) (punctuation 26413 . 26414) (symbol 26411 . 26413) (CLASS 26405 . 26410) (punctuation 26403 . 26404) (symbol 26401 . 26403) (CLASS 26395 . 26400) (punctuation 26393 . 26394) (symbol 26391 . 26393) (CLASS 26385 . 26390) (punctuation 26383 . 26384) (symbol 26381 . 26383) (CLASS 26375 . 26380) (punctuation 26373 . 26374) (symbol 26371 . 26373) (CLASS 26365 . 26370) (punctuation 26363 . 26364) (symbol 26361 . 26363) (CLASS 26355 . 26360) (punctuation 26353 . 26354) (symbol 26351 . 26353) (CLASS 26345 . 26350) (punctuation 26343 . 26344) (symbol 26341 . 26343) (CLASS 26335 . 26340) (punctuation 26334 . 26335) (TEMPLATE 26325 . 26333) (punctuation 26081 . 26082) (punctuation 26080 . 26081) (punctuation 26079 . 26080) (symbol 26077 . 26079) (punctuation 26075 . 26076) (symbol 26073 . 26075) (punctuation 26071 . 26072) (symbol 26069 . 26071) (punctuation 26067 . 26068) (symbol 26065 . 26067) (punctuation 26063 . 26064) (symbol 26061 . 26063) (punctuation 26059 . 26060) (symbol 26057 . 26059) (punctuation 26055 . 26056) (symbol 26053 . 26055) (punctuation 26051 . 26052) (symbol 26049 . 26051) (punctuation 26047 . 26048) (symbol 26045 . 26047) (punctuation 26043 . 26044) (punctuation 26042 . 26043) (punctuation 26041 . 26042) (symbol 26035 . 26041) (punctuation 26034 . 26035) (symbol 26025 . 26034) (TYPENAME 26016 . 26024) (INLINE 26009 . 26015) (punctuation 26007 . 26008) (symbol 26005 . 26007) (CLASS 25999 . 26004) (punctuation 25997 . 25998) (symbol 25995 . 25997) (CLASS 25989 . 25994) (punctuation 25987 . 25988) (symbol 25985 . 25987) (CLASS 25979 . 25984) (punctuation 25977 . 25978) (symbol 25975 . 25977) (CLASS 25969 . 25974) (punctuation 25967 . 25968) (symbol 25965 . 25967) (CLASS 25959 . 25964) (punctuation 25957 . 25958) (symbol 25955 . 25957) (CLASS 25949 . 25954) (punctuation 25947 . 25948) (symbol 25945 . 25947) (CLASS 25939 . 25944) (punctuation 25937 . 25938) (symbol 25935 . 25937) (CLASS 25929 . 25934) (punctuation 25927 . 25928) (symbol 25925 . 25927) (CLASS 25919 . 25924) (punctuation 25918 . 25919) (TEMPLATE 25909 . 25917) (punctuation 25680 . 25681) (punctuation 25679 . 25680) (punctuation 25678 . 25679) (symbol 25676 . 25678) (punctuation 25674 . 25675) (symbol 25672 . 25674) (punctuation 25670 . 25671) (symbol 25668 . 25670) (punctuation 25666 . 25667) (symbol 25664 . 25666) (punctuation 25662 . 25663) (symbol 25660 . 25662) (punctuation 25658 . 25659) (symbol 25656 . 25658) (punctuation 25654 . 25655) (symbol 25652 . 25654) (punctuation 25650 . 25651) (symbol 25648 . 25650) (punctuation 25646 . 25647) (punctuation 25645 . 25646) (punctuation 25644 . 25645) (symbol 25638 . 25644) (punctuation 25637 . 25638) (symbol 25628 . 25637) (TYPENAME 25619 . 25627) (INLINE 25612 . 25618) (punctuation 25610 . 25611) (symbol 25608 . 25610) (CLASS 25602 . 25607) (punctuation 25600 . 25601) (symbol 25598 . 25600) (CLASS 25592 . 25597) (punctuation 25590 . 25591) (symbol 25588 . 25590) (CLASS 25582 . 25587) (punctuation 25580 . 25581) (symbol 25578 . 25580) (CLASS 25572 . 25577) (punctuation 25570 . 25571) (symbol 25568 . 25570) (CLASS 25562 . 25567) (punctuation 25560 . 25561) (symbol 25558 . 25560) (CLASS 25552 . 25557) (punctuation 25550 . 25551) (symbol 25548 . 25550) (CLASS 25542 . 25547) (punctuation 25540 . 25541) (symbol 25538 . 25540) (CLASS 25532 . 25537) (punctuation 25531 . 25532) (TEMPLATE 25522 . 25530) (punctuation 25308 . 25309) (punctuation 25307 . 25308) (punctuation 25306 . 25307) (symbol 25304 . 25306) (punctuation 25302 . 25303) (symbol 25300 . 25302) (punctuation 25298 . 25299) (symbol 25296 . 25298) (punctuation 25294 . 25295) (symbol 25292 . 25294) (punctuation 25290 . 25291) (symbol 25288 . 25290) (punctuation 25286 . 25287) (symbol 25284 . 25286) (punctuation 25282 . 25283) (symbol 25280 . 25282) (punctuation 25278 . 25279) (punctuation 25277 . 25278) (punctuation 25276 . 25277) (symbol 25270 . 25276) (punctuation 25269 . 25270) (symbol 25260 . 25269) (TYPENAME 25251 . 25259) (INLINE 25244 . 25250) (punctuation 25242 . 25243) (symbol 25240 . 25242) (CLASS 25234 . 25239) (punctuation 25232 . 25233) (symbol 25230 . 25232) (CLASS 25224 . 25229) (punctuation 25222 . 25223) (symbol 25220 . 25222) (CLASS 25214 . 25219) (punctuation 25212 . 25213) (symbol 25210 . 25212) (CLASS 25204 . 25209) (punctuation 25202 . 25203) (symbol 25200 . 25202) (CLASS 25194 . 25199) (punctuation 25192 . 25193) (symbol 25190 . 25192) (CLASS 25184 . 25189) (punctuation 25182 . 25183) (symbol 25180 . 25182) (CLASS 25174 . 25179) (punctuation 25173 . 25174) (TEMPLATE 25164 . 25172) (punctuation 24965 . 24966) (punctuation 24964 . 24965) (punctuation 24963 . 24964) (symbol 24961 . 24963) (punctuation 24959 . 24960) (symbol 24957 . 24959) (punctuation 24955 . 24956) (symbol 24953 . 24955) (punctuation 24951 . 24952) (symbol 24949 . 24951) (punctuation 24947 . 24948) (symbol 24945 . 24947) (punctuation 24943 . 24944) (symbol 24941 . 24943) (punctuation 24939 . 24940) (punctuation 24938 . 24939) (punctuation 24937 . 24938) (symbol 24931 . 24937) (punctuation 24930 . 24931) (symbol 24921 . 24930) (TYPENAME 24912 . 24920) (INLINE 24905 . 24911) (punctuation 24903 . 24904) (symbol 24901 . 24903) (CLASS 24895 . 24900) (punctuation 24893 . 24894) (symbol 24891 . 24893) (CLASS 24885 . 24890) (punctuation 24883 . 24884) (symbol 24881 . 24883) (CLASS 24875 . 24880) (punctuation 24873 . 24874) (symbol 24871 . 24873) (CLASS 24865 . 24870) (punctuation 24863 . 24864) (symbol 24861 . 24863) (CLASS 24855 . 24860) (punctuation 24853 . 24854) (symbol 24851 . 24853) (CLASS 24845 . 24850) (punctuation 24844 . 24845) (TEMPLATE 24835 . 24843) (punctuation 24651 . 24652) (punctuation 24650 . 24651) (punctuation 24649 . 24650) (symbol 24647 . 24649) (punctuation 24645 . 24646) (symbol 24643 . 24645) (punctuation 24641 . 24642) (symbol 24639 . 24641) (punctuation 24637 . 24638) (symbol 24635 . 24637) (punctuation 24633 . 24634) (symbol 24631 . 24633) (punctuation 24629 . 24630) (punctuation 24628 . 24629) (punctuation 24627 . 24628) (symbol 24621 . 24627) (punctuation 24620 . 24621) (symbol 24611 . 24620) (TYPENAME 24602 . 24610) (INLINE 24595 . 24601) (punctuation 24593 . 24594) (symbol 24591 . 24593) (CLASS 24585 . 24590) (punctuation 24583 . 24584) (symbol 24581 . 24583) (CLASS 24575 . 24580) (punctuation 24573 . 24574) (symbol 24571 . 24573) (CLASS 24565 . 24570) (punctuation 24563 . 24564) (symbol 24561 . 24563) (CLASS 24555 . 24560) (punctuation 24553 . 24554) (symbol 24551 . 24553) (CLASS 24545 . 24550) (punctuation 24544 . 24545) (TEMPLATE 24535 . 24543) (punctuation 24366 . 24367) (punctuation 24365 . 24366) (punctuation 24364 . 24365) (symbol 24362 . 24364) (punctuation 24360 . 24361) (symbol 24358 . 24360) (punctuation 24356 . 24357) (symbol 24354 . 24356) (punctuation 24352 . 24353) (symbol 24350 . 24352) (punctuation 24348 . 24349) (punctuation 24347 . 24348) (punctuation 24346 . 24347) (symbol 24340 . 24346) (punctuation 24339 . 24340) (symbol 24330 . 24339) (TYPENAME 24321 . 24329) (INLINE 24314 . 24320) (punctuation 24312 . 24313) (symbol 24310 . 24312) (CLASS 24304 . 24309) (punctuation 24302 . 24303) (symbol 24300 . 24302) (CLASS 24294 . 24299) (punctuation 24292 . 24293) (symbol 24290 . 24292) (CLASS 24284 . 24289) (punctuation 24282 . 24283) (symbol 24280 . 24282) (CLASS 24274 . 24279) (punctuation 24273 . 24274) (TEMPLATE 24264 . 24272) (punctuation 24110 . 24111) (punctuation 24109 . 24110) (punctuation 24108 . 24109) (symbol 24106 . 24108) (punctuation 24104 . 24105) (symbol 24102 . 24104) (punctuation 24100 . 24101) (symbol 24098 . 24100) (punctuation 24096 . 24097) (punctuation 24095 . 24096) (punctuation 24094 . 24095) (symbol 24088 . 24094) (punctuation 24087 . 24088) (symbol 24078 . 24087) (TYPENAME 24069 . 24077) (INLINE 24062 . 24068) (punctuation 24060 . 24061) (symbol 24058 . 24060) (CLASS 24052 . 24057) (punctuation 24050 . 24051) (symbol 24048 . 24050) (CLASS 24042 . 24047) (punctuation 24040 . 24041) (symbol 24038 . 24040) (CLASS 24032 . 24037) (punctuation 24031 . 24032) (TEMPLATE 24022 . 24030) (punctuation 23883 . 23884) (punctuation 23882 . 23883) (punctuation 23881 . 23882) (symbol 23879 . 23881) (punctuation 23877 . 23878) (symbol 23875 . 23877) (punctuation 23873 . 23874) (punctuation 23872 . 23873) (punctuation 23871 . 23872) (symbol 23865 . 23871) (punctuation 23864 . 23865) (symbol 23855 . 23864) (TYPENAME 23846 . 23854) (INLINE 23839 . 23845) (punctuation 23837 . 23838) (symbol 23835 . 23837) (CLASS 23829 . 23834) (punctuation 23827 . 23828) (symbol 23825 . 23827) (CLASS 23819 . 23824) (punctuation 23818 . 23819) (TEMPLATE 23809 . 23817) (punctuation 23685 . 23686) (punctuation 23684 . 23685) (punctuation 23683 . 23684) (symbol 23681 . 23683) (punctuation 23679 . 23680) (punctuation 23678 . 23679) (punctuation 23677 . 23678) (symbol 23671 . 23677) (punctuation 23670 . 23671) (symbol 23661 . 23670) (TYPENAME 23652 . 23660) (INLINE 23645 . 23651) (punctuation 23643 . 23644) (symbol 23641 . 23643) (CLASS 23635 . 23640) (punctuation 23634 . 23635) (TEMPLATE 23625 . 23633) (punctuation 22582 . 22583) (symbol 22577 . 22581) (punctuation 22576 . 22577) (punctuation 22575 . 22576) (punctuation 22574 . 22575) (punctuation 22572 . 22573) (number 22570 . 22572) (punctuation 22569 . 22570) (symbol 22565 . 22569) (punctuation 22564 . 22565) (punctuation 22563 . 22564) (symbol 22560 . 22563) (punctuation 22558 . 22559) (symbol 22547 . 22558) (punctuation 22546 . 22547) (symbol 22544 . 22546) (punctuation 22543 . 22544) (punctuation 22542 . 22543) (symbol 22539 . 22542) (TYPENAME 22530 . 22538) (punctuation 22522 . 22523) (symbol 22518 . 22522) (punctuation 22517 . 22518) (punctuation 22516 . 22517) (punctuation 22515 . 22516) (punctuation 22513 . 22514) (number 22511 . 22513) (punctuation 22510 . 22511) (symbol 22506 . 22510) (punctuation 22505 . 22506) (punctuation 22504 . 22505) (symbol 22501 . 22504) (punctuation 22499 . 22500) (symbol 22488 . 22499) (punctuation 22487 . 22488) (symbol 22485 . 22487) (punctuation 22484 . 22485) (punctuation 22483 . 22484) (symbol 22480 . 22483) (TYPENAME 22471 . 22479) (punctuation 22463 . 22464) (symbol 22459 . 22463) (punctuation 22458 . 22459) (punctuation 22457 . 22458) (punctuation 22456 . 22457) (punctuation 22454 . 22455) (number 22452 . 22454) (punctuation 22451 . 22452) (symbol 22447 . 22451) (punctuation 22446 . 22447) (punctuation 22445 . 22446) (symbol 22442 . 22445) (punctuation 22440 . 22441) (symbol 22429 . 22440) (punctuation 22428 . 22429) (symbol 22426 . 22428) (punctuation 22425 . 22426) (punctuation 22424 . 22425) (symbol 22421 . 22424) (TYPENAME 22412 . 22420) (punctuation 22404 . 22405) (symbol 22400 . 22404) (punctuation 22399 . 22400) (punctuation 22398 . 22399) (punctuation 22397 . 22398) (punctuation 22395 . 22396) (number 22394 . 22395) (punctuation 22393 . 22394) (symbol 22389 . 22393) (punctuation 22388 . 22389) (punctuation 22387 . 22388) (symbol 22384 . 22387) (punctuation 22382 . 22383) (symbol 22371 . 22382) (punctuation 22370 . 22371) (symbol 22368 . 22370) (punctuation 22367 . 22368) (punctuation 22366 . 22367) (symbol 22363 . 22366) (TYPENAME 22354 . 22362) (punctuation 22346 . 22347) (symbol 22342 . 22346) (punctuation 22341 . 22342) (punctuation 22340 . 22341) (punctuation 22339 . 22340) (punctuation 22337 . 22338) (number 22336 . 22337) (punctuation 22335 . 22336) (symbol 22331 . 22335) (punctuation 22330 . 22331) (punctuation 22329 . 22330) (symbol 22326 . 22329) (punctuation 22324 . 22325) (symbol 22313 . 22324) (punctuation 22312 . 22313) (symbol 22310 . 22312) (punctuation 22309 . 22310) (punctuation 22308 . 22309) (symbol 22305 . 22308) (TYPENAME 22296 . 22304) (punctuation 22288 . 22289) (symbol 22284 . 22288) (punctuation 22283 . 22284) (punctuation 22282 . 22283) (punctuation 22281 . 22282) (punctuation 22279 . 22280) (number 22278 . 22279) (punctuation 22277 . 22278) (symbol 22273 . 22277) (punctuation 22272 . 22273) (punctuation 22271 . 22272) (symbol 22268 . 22271) (punctuation 22266 . 22267) (symbol 22255 . 22266) (punctuation 22254 . 22255) (symbol 22252 . 22254) (punctuation 22251 . 22252) (punctuation 22250 . 22251) (symbol 22247 . 22250) (TYPENAME 22238 . 22246) (punctuation 22230 . 22231) (symbol 22226 . 22230) (punctuation 22225 . 22226) (punctuation 22224 . 22225) (punctuation 22223 . 22224) (punctuation 22221 . 22222) (number 22220 . 22221) (punctuation 22219 . 22220) (symbol 22215 . 22219) (punctuation 22214 . 22215) (punctuation 22213 . 22214) (symbol 22210 . 22213) (punctuation 22208 . 22209) (symbol 22197 . 22208) (punctuation 22196 . 22197) (symbol 22194 . 22196) (punctuation 22193 . 22194) (punctuation 22192 . 22193) (symbol 22189 . 22192) (TYPENAME 22180 . 22188) (punctuation 22172 . 22173) (symbol 22168 . 22172) (punctuation 22167 . 22168) (punctuation 22166 . 22167) (punctuation 22165 . 22166) (punctuation 22163 . 22164) (number 22162 . 22163) (punctuation 22161 . 22162) (symbol 22157 . 22161) (punctuation 22156 . 22157) (punctuation 22155 . 22156) (symbol 22152 . 22155) (punctuation 22150 . 22151) (symbol 22139 . 22150) (punctuation 22138 . 22139) (symbol 22136 . 22138) (punctuation 22135 . 22136) (punctuation 22134 . 22135) (symbol 22131 . 22134) (TYPENAME 22122 . 22130) (punctuation 22114 . 22115) (symbol 22110 . 22114) (punctuation 22109 . 22110) (punctuation 22108 . 22109) (punctuation 22107 . 22108) (punctuation 22105 . 22106) (number 22104 . 22105) (punctuation 22103 . 22104) (symbol 22099 . 22103) (punctuation 22098 . 22099) (punctuation 22097 . 22098) (symbol 22094 . 22097) (punctuation 22092 . 22093) (symbol 22081 . 22092) (punctuation 22080 . 22081) (symbol 22078 . 22080) (punctuation 22077 . 22078) (punctuation 22076 . 22077) (symbol 22073 . 22076) (TYPENAME 22064 . 22072) (punctuation 22056 . 22057) (symbol 22052 . 22056) (punctuation 22051 . 22052) (punctuation 22050 . 22051) (punctuation 22049 . 22050) (punctuation 22047 . 22048) (number 22046 . 22047) (punctuation 22045 . 22046) (symbol 22041 . 22045) (punctuation 22040 . 22041) (punctuation 22039 . 22040) (symbol 22036 . 22039) (punctuation 22034 . 22035) (symbol 22023 . 22034) (punctuation 22022 . 22023) (symbol 22020 . 22022) (punctuation 22019 . 22020) (punctuation 22018 . 22019) (symbol 22015 . 22018) (TYPENAME 22006 . 22014) (punctuation 21998 . 21999) (symbol 21994 . 21998) (punctuation 21993 . 21994) (punctuation 21992 . 21993) (punctuation 21991 . 21992) (punctuation 21989 . 21990) (number 21988 . 21989) (punctuation 21987 . 21988) (symbol 21983 . 21987) (punctuation 21982 . 21983) (punctuation 21981 . 21982) (symbol 21978 . 21981) (punctuation 21976 . 21977) (symbol 21965 . 21976) (punctuation 21964 . 21965) (symbol 21962 . 21964) (punctuation 21961 . 21962) (punctuation 21960 . 21961) (symbol 21957 . 21960) (TYPENAME 21948 . 21956) (punctuation 21940 . 21941) (symbol 21936 . 21940) (punctuation 21935 . 21936) (punctuation 21934 . 21935) (punctuation 21933 . 21934) (punctuation 21931 . 21932) (number 21930 . 21931) (punctuation 21929 . 21930) (symbol 21925 . 21929) (punctuation 21924 . 21925) (punctuation 21923 . 21924) (symbol 21920 . 21923) (punctuation 21918 . 21919) (symbol 21907 . 21918) (punctuation 21906 . 21907) (symbol 21904 . 21906) (punctuation 21903 . 21904) (punctuation 21902 . 21903) (symbol 21899 . 21902) (TYPENAME 21890 . 21898) (punctuation 21882 . 21883) (symbol 21878 . 21882) (punctuation 21877 . 21878) (punctuation 21876 . 21877) (punctuation 21875 . 21876) (punctuation 21873 . 21874) (number 21872 . 21873) (punctuation 21871 . 21872) (symbol 21867 . 21871) (punctuation 21866 . 21867) (punctuation 21865 . 21866) (symbol 21862 . 21865) (punctuation 21860 . 21861) (symbol 21849 . 21860) (punctuation 21848 . 21849) (symbol 21846 . 21848) (punctuation 21845 . 21846) (punctuation 21844 . 21845) (symbol 21841 . 21844) (TYPENAME 21832 . 21840) (punctuation 21824 . 21825) (symbol 21818 . 21824) (TYPEDEF 21810 . 21817) (punctuation 20890 . 20891) (punctuation 20889 . 20890) (punctuation 20888 . 20889) (symbol 20864 . 20888) (punctuation 20863 . 20864) (punctuation 20862 . 20863) (symbol 20856 . 20862) (TYPENAME 20847 . 20855) (punctuation 20845 . 20846) (punctuation 20844 . 20845) (symbol 20842 . 20844) (punctuation 20841 . 20842) (punctuation 20840 . 20841) (symbol 20837 . 20840) (punctuation 20836 . 20837) (symbol 20814 . 20836) (punctuation 20812 . 20813) (symbol 20804 . 20812) (punctuation 20803 . 20804) (symbol 20795 . 20803) (punctuation 20794 . 20795) (punctuation 20793 . 20794) (symbol 20787 . 20793) (TYPENAME 20778 . 20786) (TYPEDEF 20770 . 20777) (punctuation 20733 . 20734) (punctuation 20732 . 20733) (punctuation 20731 . 20732) (symbol 20705 . 20731) (punctuation 20704 . 20705) (punctuation 20703 . 20704) (symbol 20697 . 20703) (TYPENAME 20688 . 20696) (punctuation 20686 . 20687) (punctuation 20685 . 20686) (symbol 20683 . 20685) (punctuation 20682 . 20683) (punctuation 20681 . 20682) (symbol 20678 . 20681) (punctuation 20677 . 20678) (symbol 20653 . 20677) (punctuation 20651 . 20652) (symbol 20643 . 20651) (punctuation 20642 . 20643) (symbol 20634 . 20642) (punctuation 20633 . 20634) (punctuation 20632 . 20633) (symbol 20626 . 20632) (TYPENAME 20617 . 20625) (TYPEDEF 20609 . 20616) (punctuation 20543 . 20544) (punctuation 20542 . 20543) (punctuation 20541 . 20542) (symbol 20519 . 20540) (punctuation 20518 . 20519) (punctuation 20517 . 20518) (symbol 20511 . 20517) (TYPENAME 20502 . 20510) (punctuation 20500 . 20501) (punctuation 20499 . 20500) (symbol 20497 . 20499) (punctuation 20496 . 20497) (punctuation 20495 . 20496) (symbol 20492 . 20495) (punctuation 20491 . 20492) (symbol 20472 . 20491) (punctuation 20470 . 20471) (symbol 20462 . 20470) (punctuation 20461 . 20462) (symbol 20453 . 20461) (punctuation 20452 . 20453) (punctuation 20451 . 20452) (symbol 20445 . 20451) (TYPENAME 20436 . 20444) (TYPEDEF 20428 . 20435) (punctuation 20340 . 20341) (punctuation 20339 . 20340) (punctuation 20338 . 20339) (symbol 20315 . 20337) (punctuation 20314 . 20315) (punctuation 20313 . 20314) (symbol 20307 . 20313) (TYPENAME 20298 . 20306) (punctuation 20296 . 20297) (punctuation 20295 . 20296) (symbol 20293 . 20295) (punctuation 20292 . 20293) (punctuation 20291 . 20292) (symbol 20288 . 20291) (punctuation 20287 . 20288) (symbol 20267 . 20287) (punctuation 20265 . 20266) (symbol 20257 . 20265) (punctuation 20256 . 20257) (symbol 20248 . 20256) (punctuation 20247 . 20248) (punctuation 20246 . 20247) (symbol 20240 . 20246) (TYPENAME 20231 . 20239) (TYPEDEF 20223 . 20230) (punctuation 20155 . 20156) (punctuation 20154 . 20155) (punctuation 20153 . 20154) (symbol 20133 . 20152) (punctuation 20132 . 20133) (punctuation 20131 . 20132) (symbol 20125 . 20131) (TYPENAME 20116 . 20124) (punctuation 20114 . 20115) (punctuation 20113 . 20114) (symbol 20111 . 20113) (punctuation 20110 . 20111) (punctuation 20109 . 20110) (symbol 20106 . 20109) (punctuation 20105 . 20106) (symbol 20088 . 20105) (punctuation 20086 . 20087) (symbol 20078 . 20086) (punctuation 20077 . 20078) (symbol 20069 . 20077) (punctuation 20068 . 20069) (punctuation 20067 . 20068) (symbol 20061 . 20067) (TYPENAME 20052 . 20060) (TYPEDEF 20044 . 20051) (punctuation 20015 . 20016) (punctuation 20014 . 20015) (punctuation 20013 . 20014) (symbol 19994 . 20012) (punctuation 19993 . 19994) (punctuation 19992 . 19993) (symbol 19986 . 19992) (TYPENAME 19977 . 19985) (punctuation 19975 . 19976) (punctuation 19974 . 19975) (symbol 19972 . 19974) (punctuation 19971 . 19972) (punctuation 19970 . 19971) (symbol 19967 . 19970) (punctuation 19966 . 19967) (symbol 19950 . 19966) (punctuation 19948 . 19949) (symbol 19940 . 19948) (punctuation 19939 . 19940) (symbol 19931 . 19939) (punctuation 19930 . 19931) (punctuation 19929 . 19930) (symbol 19923 . 19929) (TYPENAME 19914 . 19922) (TYPEDEF 19906 . 19913) (punctuation 19742 . 19743) (punctuation 19741 . 19742) (punctuation 19740 . 19741) (symbol 19725 . 19739) (punctuation 19724 . 19725) (punctuation 19723 . 19724) (symbol 19717 . 19723) (TYPENAME 19708 . 19716) (punctuation 19706 . 19707) (punctuation 19705 . 19706) (symbol 19703 . 19705) (punctuation 19702 . 19703) (punctuation 19701 . 19702) (symbol 19698 . 19701) (punctuation 19697 . 19698) (symbol 19687 . 19697) (punctuation 19685 . 19686) (symbol 19677 . 19685) (punctuation 19676 . 19677) (symbol 19668 . 19676) (punctuation 19667 . 19668) (punctuation 19666 . 19667) (symbol 19660 . 19666) (TYPENAME 19651 . 19659) (TYPEDEF 19643 . 19650) (punctuation 19452 . 19453) (punctuation 19451 . 19452) (punctuation 19450 . 19451) (symbol 19418 . 19449) (punctuation 19417 . 19418) (punctuation 19416 . 19417) (symbol 19410 . 19416) (TYPENAME 19401 . 19409) (punctuation 19399 . 19400) (punctuation 19398 . 19399) (symbol 19396 . 19398) (punctuation 19395 . 19396) (punctuation 19394 . 19395) (symbol 19391 . 19394) (punctuation 19390 . 19391) (symbol 19361 . 19390) (punctuation 19359 . 19360) (symbol 19351 . 19359) (punctuation 19350 . 19351) (symbol 19342 . 19350) (punctuation 19341 . 19342) (punctuation 19340 . 19341) (symbol 19334 . 19340) (TYPENAME 19325 . 19333) (TYPEDEF 19317 . 19324) (punctuation 19287 . 19288) (punctuation 19286 . 19287) (punctuation 19285 . 19286) (symbol 19265 . 19284) (punctuation 19264 . 19265) (punctuation 19263 . 19264) (symbol 19257 . 19263) (TYPENAME 19248 . 19256) (punctuation 19246 . 19247) (punctuation 19245 . 19246) (symbol 19243 . 19245) (punctuation 19242 . 19243) (punctuation 19241 . 19242) (symbol 19238 . 19241) (punctuation 19237 . 19238) (symbol 19220 . 19237) (punctuation 19218 . 19219) (symbol 19210 . 19218) (punctuation 19209 . 19210) (symbol 19201 . 19209) (punctuation 19200 . 19201) (punctuation 19199 . 19200) (symbol 19193 . 19199) (TYPENAME 19184 . 19192) (TYPEDEF 19176 . 19183) (punctuation 19144 . 19145) (punctuation 19143 . 19144) (punctuation 19142 . 19143) (symbol 19120 . 19141) (punctuation 19119 . 19120) (punctuation 19118 . 19119) (symbol 19112 . 19118) (TYPENAME 19103 . 19111) (punctuation 19101 . 19102) (punctuation 19100 . 19101) (symbol 19098 . 19100) (punctuation 19097 . 19098) (punctuation 19096 . 19097) (symbol 19093 . 19096) (punctuation 19092 . 19093) (symbol 19073 . 19092) (punctuation 19071 . 19072) (symbol 19063 . 19071) (punctuation 19062 . 19063) (symbol 19054 . 19062) (punctuation 19053 . 19054) (punctuation 19052 . 19053) (symbol 19046 . 19052) (TYPENAME 19037 . 19045) (TYPEDEF 19029 . 19036) (punctuation 19001 . 19002) (punctuation 19000 . 19001) (punctuation 18999 . 19000) (symbol 18981 . 18998) (punctuation 18980 . 18981) (punctuation 18979 . 18980) (symbol 18973 . 18979) (TYPENAME 18964 . 18972) (punctuation 18962 . 18963) (punctuation 18961 . 18962) (symbol 18959 . 18961) (punctuation 18958 . 18959) (punctuation 18957 . 18958) (symbol 18954 . 18957) (punctuation 18953 . 18954) (symbol 18938 . 18953) (punctuation 18936 . 18937) (symbol 18928 . 18936) (punctuation 18927 . 18928) (symbol 18919 . 18927) (punctuation 18918 . 18919) (punctuation 18917 . 18918) (symbol 18911 . 18917) (TYPENAME 18902 . 18910) (TYPEDEF 18894 . 18901) (punctuation 18863 . 18864) (punctuation 18862 . 18863) (punctuation 18861 . 18862) (symbol 18840 . 18860) (punctuation 18839 . 18840) (punctuation 18838 . 18839) (symbol 18832 . 18838) (TYPENAME 18823 . 18831) (punctuation 18821 . 18822) (punctuation 18820 . 18821) (symbol 18818 . 18820) (punctuation 18817 . 18818) (punctuation 18816 . 18817) (symbol 18813 . 18816) (punctuation 18812 . 18813) (symbol 18794 . 18812) (punctuation 18792 . 18793) (symbol 18784 . 18792) (punctuation 18783 . 18784) (symbol 18775 . 18783) (punctuation 18774 . 18775) (punctuation 18773 . 18774) (symbol 18767 . 18773) (TYPENAME 18758 . 18766) (TYPEDEF 18750 . 18757) (punctuation 18720 . 18721) (punctuation 18719 . 18720) (punctuation 18718 . 18719) (symbol 18698 . 18717) (punctuation 18697 . 18698) (punctuation 18696 . 18697) (symbol 18690 . 18696) (TYPENAME 18681 . 18689) (punctuation 18679 . 18680) (punctuation 18678 . 18679) (symbol 18676 . 18678) (punctuation 18675 . 18676) (punctuation 18674 . 18675) (symbol 18671 . 18674) (punctuation 18670 . 18671) (symbol 18653 . 18670) (punctuation 18651 . 18652) (symbol 18643 . 18651) (punctuation 18642 . 18643) (symbol 18634 . 18642) (punctuation 18633 . 18634) (punctuation 18632 . 18633) (symbol 18626 . 18632) (TYPENAME 18617 . 18625) (TYPEDEF 18609 . 18616) (punctuation 18583 . 18584) (punctuation 18582 . 18583) (punctuation 18581 . 18582) (symbol 18565 . 18580) (punctuation 18564 . 18565) (punctuation 18563 . 18564) (symbol 18557 . 18563) (TYPENAME 18548 . 18556) (punctuation 18546 . 18547) (punctuation 18545 . 18546) (symbol 18543 . 18545) (punctuation 18542 . 18543) (punctuation 18541 . 18542) (symbol 18538 . 18541) (punctuation 18537 . 18538) (symbol 18524 . 18537) (punctuation 18522 . 18523) (symbol 18514 . 18522) (punctuation 18513 . 18514) (symbol 18505 . 18513) (punctuation 18504 . 18505) (punctuation 18503 . 18504) (symbol 18497 . 18503) (TYPENAME 18488 . 18496) (TYPEDEF 18480 . 18487) (punctuation 18452 . 18453) (punctuation 18451 . 18452) (punctuation 18450 . 18451) (symbol 18432 . 18449) (punctuation 18431 . 18432) (punctuation 18430 . 18431) (symbol 18424 . 18430) (TYPENAME 18415 . 18423) (punctuation 18413 . 18414) (punctuation 18412 . 18413) (symbol 18410 . 18412) (punctuation 18409 . 18410) (punctuation 18408 . 18409) (symbol 18405 . 18408) (punctuation 18404 . 18405) (symbol 18389 . 18404) (punctuation 18387 . 18388) (symbol 18379 . 18387) (punctuation 18378 . 18379) (symbol 18370 . 18378) (punctuation 18369 . 18370) (punctuation 18368 . 18369) (symbol 18362 . 18368) (TYPENAME 18353 . 18361) (TYPEDEF 18345 . 18352) (punctuation 12782 . 12783) (punctuation 12781 . 12782) (punctuation 12696 . 12697) (punctuation 12695 . 12696) (punctuation 12610 . 12611) (punctuation 12609 . 12610) (punctuation 12524 . 12525) (punctuation 12523 . 12524) (punctuation 12439 . 12440) (punctuation 12438 . 12439) (punctuation 12354 . 12355) (punctuation 12353 . 12354) (punctuation 12269 . 12270) (punctuation 12268 . 12269) (punctuation 12184 . 12185) (punctuation 12183 . 12184) (punctuation 12099 . 12100) (punctuation 12098 . 12099) (punctuation 12014 . 12015) (punctuation 12013 . 12014) (punctuation 11929 . 11930) (punctuation 11928 . 11929) (punctuation 11844 . 11845) (punctuation 11843 . 11844) (punctuation 11759 . 11760) (punctuation 11758 . 11759) (punctuation 11052 . 11053) (punctuation 11051 . 11052) (punctuation 11050 . 11051) (symbol "true" 11018 . 11050) (punctuation 11016 . 11017) (symbol "true" 10985 . 11016) (punctuation 10984 . 10985) (symbol 10972 . 10984) (TYPEDEF 10964 . 10971) (punctuation 10941 . 10942) (punctuation 10940 . 10941) (punctuation 10939 . 10940) (symbol "true" 10907 . 10939) (punctuation 10905 . 10906) (symbol "true" 10874 . 10905) (punctuation 10873 . 10874) (symbol 10861 . 10873) (TYPEDEF 10853 . 10860) (punctuation 10136 . 10137) (punctuation 10135 . 10136) (punctuation 10134 . 10135) (number 10133 . 10134) (punctuation 10132 . 10133) (symbol 10131 . 10132) (punctuation 10129 . 10130) (symbol 10128 . 10129) (punctuation 10126 . 10127) (symbol 10119 . 10126) (punctuation 10118 . 10119) (symbol 10110 . 10118) (TYPENAME 10101 . 10109) (TYPEDEF 10093 . 10100) (punctuation 9974 . 9975) (semantic-list 9881 . 9974) (punctuation 9879 . 9880) (symbol 9874 . 9879) (punctuation 9873 . 9874) (punctuation 9872 . 9873) (punctuation 9871 . 9872) (symbol 9870 . 9871) (punctuation 9869 . 9870) (symbol 9848 . 9869) (punctuation 9847 . 9848) (punctuation 9846 . 9847) (symbol 9840 . 9846) (punctuation 9839 . 9840) (punctuation 9838 . 9839) (symbol 9830 . 9838) (punctuation 9829 . 9830) (punctuation 9828 . 9829) (symbol 9824 . 9828) (punctuation 9823 . 9824) (punctuation 9822 . 9823) (symbol 9817 . 9822) (punctuation 9816 . 9817) (punctuation 9815 . 9816) (punctuation 9809 . 9810) (symbol 9804 . 9809) (punctuation 9803 . 9804) (punctuation 9802 . 9803) (symbol 9799 . 9802) (PUBLIC 9792 . 9798) (punctuation 9790 . 9791) (symbol 9771 . 9788) (STRUCT 9764 . 9770) (punctuation 9762 . 9763) (symbol 9761 . 9762) (CLASS 9755 . 9760) (punctuation 9754 . 9755) (TEMPLATE 9745 . 9753) (punctuation 9742 . 9743) (semantic-list 9740 . 9742) (punctuation 9738 . 9739) (symbol 9733 . 9738) (punctuation 9732 . 9733) (punctuation 9731 . 9732) (punctuation 9730 . 9731) (symbol 9729 . 9730) (punctuation 9728 . 9729) (symbol 9709 . 9728) (punctuation 9708 . 9709) (punctuation 9707 . 9708) (symbol 9701 . 9707) (punctuation 9700 . 9701) (punctuation 9699 . 9700) (symbol 9691 . 9699) (punctuation 9690 . 9691) (punctuation 9689 . 9690) (symbol 9685 . 9689) (punctuation 9684 . 9685) (punctuation 9683 . 9684) (symbol 9678 . 9683) (punctuation 9677 . 9678) (punctuation 9676 . 9677) (punctuation 9670 . 9671) (symbol 9665 . 9670) (punctuation 9664 . 9665) (punctuation 9663 . 9664) (symbol 9660 . 9663) (PUBLIC 9653 . 9659) (punctuation 9651 . 9652) (symbol 9634 . 9649) (STRUCT 9627 . 9633) (punctuation 9625 . 9626) (symbol 9624 . 9625) (CLASS 9618 . 9623) (punctuation 9617 . 9618) (TEMPLATE 9608 . 9616) (number 9600 . 9601) (punctuation 9598 . 9599) (punctuation 9597 . 9598) (semantic-list 9522 . 9596) (SIZEOF 9516 . 9522) (punctuation 9514 . 9515) (number 9419 . 9420) (punctuation 9417 . 9418) (punctuation 9416 . 9417) (semantic-list 9343 . 9415) (SIZEOF 9337 . 9343) (punctuation 9335 . 9336) (punctuation 9072 . 9073) (punctuation 9071 . 9072) (punctuation 9070 . 9071) (symbol 9065 . 9070) (punctuation 9064 . 9065) (punctuation 9063 . 9064) (punctuation 9062 . 9063) (symbol 9054 . 9062) (punctuation 9052 . 9053) (symbol 9048 . 9052) (punctuation 9047 . 9048) (symbol 9040 . 9047) (punctuation 9039 . 9040) (punctuation 9038 . 9039) (symbol 9033 . 9038) (punctuation 9032 . 9033) (punctuation 9031 . 9032) (punctuation 9023 . 9024) (symbol 9019 . 9023) (punctuation 9017 . 9018) (symbol 9006 . 9017) (punctuation 8998 . 8999) (symbol 8985 . 8998) (TYPENAME 8976 . 8984) (TYPEDEF 8968 . 8975) (punctuation 8214 . 8215) (punctuation 8213 . 8214) (punctuation 8212 . 8213) (punctuation 8207 . 8208) (number 8203 . 8207) (punctuation 8201 . 8202) (semantic-list 8169 . 8200) (punctuation 8168 . 8169) (symbol 8161 . 8168) (punctuation 8153 . 8154) (punctuation 8152 . 8153) (number 8151 . 8152) (punctuation 8150 . 8151) (symbol 8143 . 8150) (punctuation 8135 . 8136) (semantic-list 8113 . 8135) (punctuation 8105 . 8106) (symbol 8101 . 8105) (punctuation 8100 . 8101) (punctuation 8099 . 8100) (symbol 8096 . 8099) (TYPENAME 8087 . 8095) (TYPEDEF 8079 . 8086) (punctuation ";" 7587 . 7680) (semantic-list #("{}" 0 1 (macros (("Default" symbol "max_root_iterations" 7622 . 7641) ("name" LONG "long" 7616 . 7620) ("type" UNSIGNED "unsigned" 7607 . 7615)))) 7587 . 7680) (punctuation ">" 7587 . 7680) (symbol "value" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ">" 7587 . 7680) (symbol "T" 7587 . 7680) (punctuation "<" 7587 . 7680) (symbol "is_long_imp" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (symbol "detail" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (symbol "policies" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (symbol "math" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (symbol "boost" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation "<" 7587 . 7680) (symbol "bool_" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (symbol "mpl" 7587 . 7680) (punctuation ":" 7587 . 7680) (punctuation ":" 7587 . 7680) (symbol "boost" 7587 . 7680) (PUBLIC "public" 7587 . 7680) (punctuation ":" 7587 . 7680) (symbol "is_long" 7587 . 7680) (STRUCT "struct" 7587 . 7680) (punctuation ">" 7587 . 7680) (symbol "T" 7587 . 7680) (CLASS "class" 7587 . 7680) (punctuation "<" 7587 . 7680) (TEMPLATE "template" 7587 . 7680) (PUBLIC "public" 7587 . 7680) (punctuation ":" 7587 . 7680) (LONG "long" 7587 . 7680) (STRUCT "struct" 7587 . 7680) (punctuation ">" 7587 . 7680) (symbol "max_root_iterations" 7587 . 7680) (punctuation "=" 7587 . 7680) (symbol "N" 7587 . 7680) (UNSIGNED "unsigned" 7587 . 7680) (punctuation "<" 7587 . 7680) (TEMPLATE "template" 7587 . 7680) (punctuation ";" 7489 . 7586) (semantic-list #("{}" 0 1 (macros (("Default" symbol "max_series_iterations" 7524 . 7545) ("name" LONG "long" 7518 . 7522) ("type" UNSIGNED "unsigned" 7509 . 7517)))) 7489 . 7586) (punctuation ">" 7489 . 7586) (symbol "value" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ">" 7489 . 7586) (symbol "T" 7489 . 7586) (punctuation "<" 7489 . 7586) (symbol "is_long_imp" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (symbol "detail" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (symbol "policies" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (symbol "math" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (symbol "boost" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation "<" 7489 . 7586) (symbol "bool_" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (symbol "mpl" 7489 . 7586) (punctuation ":" 7489 . 7586) (punctuation ":" 7489 . 7586) (symbol "boost" 7489 . 7586) (PUBLIC "public" 7489 . 7586) (punctuation ":" 7489 . 7586) (symbol "is_long" 7489 . 7586) (STRUCT "struct" 7489 . 7586) (punctuation ">" 7489 . 7586) (symbol "T" 7489 . 7586) (CLASS "class" 7489 . 7586) (punctuation "<" 7489 . 7586) (TEMPLATE "template" 7489 . 7586) (PUBLIC "public" 7489 . 7586) (punctuation ":" 7489 . 7586) (LONG "long" 7489 . 7586) (STRUCT "struct" 7489 . 7586) (punctuation ">" 7489 . 7586) (symbol "max_series_iterations" 7489 . 7586) (punctuation "=" 7489 . 7586) (symbol "N" 7489 . 7586) (UNSIGNED "unsigned" 7489 . 7586) (punctuation "<" 7489 . 7586) (TEMPLATE "template" 7489 . 7586) (punctuation ";" 7431 . 7467) (semantic-list #("{}" 0 1 (macros (("Default" number "0" 7465 . 7466) ("name" symbol "digits2" 7456 . 7463) ("type" INT "int" 7451 . 7454)))) 7431 . 7467) (punctuation ">" 7431 . 7467) (symbol "value" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ">" 7431 . 7467) (symbol "T" 7431 . 7467) (punctuation "<" 7431 . 7467) (symbol "is_digits2_imp" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (symbol "detail" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (symbol "policies" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (symbol "math" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (symbol "boost" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation "<" 7431 . 7467) (symbol "bool_" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (symbol "mpl" 7431 . 7467) (punctuation ":" 7431 . 7467) (punctuation ":" 7431 . 7467) (symbol "boost" 7431 . 7467) (PUBLIC "public" 7431 . 7467) (punctuation ":" 7431 . 7467) (symbol "is_digits2" 7431 . 7467) (STRUCT "struct" 7431 . 7467) (punctuation ">" 7431 . 7467) (symbol "T" 7431 . 7467) (CLASS "class" 7431 . 7467) (punctuation "<" 7431 . 7467) (TEMPLATE "template" 7431 . 7467) (punctuation ">" 7431 . 7467) (number "0" 7431 . 7467) (punctuation "=" 7431 . 7467) (symbol "N" 7431 . 7467) (INT "int" 7431 . 7467) (punctuation "<" 7431 . 7467) (TEMPLATE "template" 7431 . 7467) (punctuation ";" 7368 . 7430) (semantic-list #("{}" 0 1 (macros (("Default" number "0" 7403 . 7429) ("name" symbol "digits10" 7393 . 7401) ("type" INT "int" 7388 . 7391)))) 7368 . 7430) (punctuation ">" 7368 . 7430) (symbol "value" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ">" 7368 . 7430) (symbol "T" 7368 . 7430) (punctuation "<" 7368 . 7430) (symbol "is_digits10_imp" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (symbol "detail" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (symbol "policies" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (symbol "math" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (symbol "boost" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation "<" 7368 . 7430) (symbol "bool_" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (symbol "mpl" 7368 . 7430) (punctuation ":" 7368 . 7430) (punctuation ":" 7368 . 7430) (symbol "boost" 7368 . 7430) (PUBLIC "public" 7368 . 7430) (punctuation ":" 7368 . 7430) (symbol "is_digits10" 7368 . 7430) (STRUCT "struct" 7368 . 7430) (punctuation ">" 7368 . 7430) (symbol "T" 7368 . 7430) (CLASS "class" 7368 . 7430) (punctuation "<" 7368 . 7430) (TEMPLATE "template" 7368 . 7430) (punctuation ">" 7368 . 7430) (number "0" 7368 . 7430) (punctuation "=" 7368 . 7430) (symbol "N" 7368 . 7430) (INT "int" 7368 . 7430) (punctuation "<" 7368 . 7430) (TEMPLATE "template" 7368 . 7430) (punctuation ";" 7241 . 7347) (semantic-list #("{}" 0 1 (macros (("Default" symbol "integer_round_outwards" 7311 . 7346) ("name" symbol "discrete_quantile" 7292 . 7309) ("type" symbol "discrete_quantile_policy_type" 7261 . 7290)))) 7241 . 7347) (punctuation ">" 7241 . 7347) (symbol "value" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ">" 7241 . 7347) (symbol "T" 7241 . 7347) (punctuation "<" 7241 . 7347) (symbol "is_discrete_quantile_imp" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (symbol "detail" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (symbol "policies" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (symbol "math" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (symbol "boost" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation "<" 7241 . 7347) (symbol "bool_" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (symbol "mpl" 7241 . 7347) (punctuation ":" 7241 . 7347) (punctuation ":" 7241 . 7347) (symbol "boost" 7241 . 7347) (PUBLIC "public" 7241 . 7347) (punctuation ":" 7241 . 7347) (symbol "is_discrete_quantile" 7241 . 7347) (STRUCT "struct" 7241 . 7347) (punctuation ">" 7241 . 7347) (symbol "T" 7241 . 7347) (CLASS "class" 7241 . 7347) (punctuation "<" 7241 . 7347) (TEMPLATE "template" 7241 . 7347) (punctuation ";" 6948 . 7022) (semantic-list #("{}" 0 1 (macros (("Default" symbol "true" 6987 . 7021) ("name" symbol "assert_undefined" 6969 . 6985)))) 6948 . 7022) (punctuation ">" 6948 . 7022) (symbol "value" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ">" 6948 . 7022) (symbol "T" 6948 . 7022) (punctuation "<" 6948 . 7022) (symbol "is_assert_undefined_imp" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (symbol "detail" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (symbol "policies" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (symbol "math" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (symbol "boost" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation "<" 6948 . 7022) (symbol "bool_" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (symbol "mpl" 6948 . 7022) (punctuation ":" 6948 . 7022) (punctuation ":" 6948 . 7022) (symbol "boost" 6948 . 7022) (PUBLIC "public" 6948 . 7022) (punctuation ":" 6948 . 7022) (symbol "is_assert_undefined" 6948 . 7022) (STRUCT "struct" 6948 . 7022) (punctuation ">" 6948 . 7022) (symbol "T" 6948 . 7022) (CLASS "class" 6948 . 7022) (punctuation "<" 6948 . 7022) (TEMPLATE "template" 6948 . 7022) (punctuation ";" 6877 . 6947) (semantic-list #("{}" 0 1 (macros (("Default" symbol "true" 6914 . 6946) ("name" symbol "promote_double" 6898 . 6912)))) 6877 . 6947) (punctuation ">" 6877 . 6947) (symbol "value" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ">" 6877 . 6947) (symbol "T" 6877 . 6947) (punctuation "<" 6877 . 6947) (symbol "is_promote_double_imp" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (symbol "detail" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (symbol "policies" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (symbol "math" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (symbol "boost" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation "<" 6877 . 6947) (symbol "bool_" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (symbol "mpl" 6877 . 6947) (punctuation ":" 6877 . 6947) (punctuation ":" 6877 . 6947) (symbol "boost" 6877 . 6947) (PUBLIC "public" 6877 . 6947) (punctuation ":" 6877 . 6947) (symbol "is_promote_double" 6877 . 6947) (STRUCT "struct" 6877 . 6947) (punctuation ">" 6877 . 6947) (symbol "T" 6877 . 6947) (CLASS "class" 6877 . 6947) (punctuation "<" 6877 . 6947) (TEMPLATE "template" 6877 . 6947) (punctuation ";" 6808 . 6876) (semantic-list #("{}" 0 1 (macros (("Default" symbol "true" 6844 . 6875) ("name" symbol "promote_float" 6829 . 6842)))) 6808 . 6876) (punctuation ">" 6808 . 6876) (symbol "value" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ">" 6808 . 6876) (symbol "T" 6808 . 6876) (punctuation "<" 6808 . 6876) (symbol "is_promote_float_imp" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (symbol "detail" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (symbol "policies" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (symbol "math" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (symbol "boost" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation "<" 6808 . 6876) (symbol "bool_" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (symbol "mpl" 6808 . 6876) (punctuation ":" 6808 . 6876) (punctuation ":" 6808 . 6876) (symbol "boost" 6808 . 6876) (PUBLIC "public" 6808 . 6876) (punctuation ":" 6808 . 6876) (symbol "is_promote_float" 6808 . 6876) (STRUCT "struct" 6808 . 6876) (punctuation ">" 6808 . 6876) (symbol "T" 6808 . 6876) (CLASS "class" 6808 . 6876) (punctuation "<" 6808 . 6876) (TEMPLATE "template" 6808 . 6876) (punctuation ";" 6648 . 6760) (semantic-list #("{}" 0 1 (macros (("Default" symbol "ignore_error" 6715 . 6759) ("name" symbol "indeterminate_result_error" 6687 . 6713) ("type" symbol "error_policy_type" 6668 . 6685)))) 6648 . 6760) (punctuation ">" 6648 . 6760) (symbol "value" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ">" 6648 . 6760) (symbol "T" 6648 . 6760) (punctuation "<" 6648 . 6760) (symbol "is_indeterminate_result_error_imp" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (symbol "detail" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (symbol "policies" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (symbol "math" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (symbol "boost" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation "<" 6648 . 6760) (symbol "bool_" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (symbol "mpl" 6648 . 6760) (punctuation ":" 6648 . 6760) (punctuation ":" 6648 . 6760) (symbol "boost" 6648 . 6760) (PUBLIC "public" 6648 . 6760) (punctuation ":" 6648 . 6760) (symbol "is_indeterminate_result_error" 6648 . 6760) (STRUCT "struct" 6648 . 6760) (punctuation ">" 6648 . 6760) (symbol "T" 6648 . 6760) (CLASS "class" 6648 . 6760) (punctuation "<" 6648 . 6760) (TEMPLATE "template" 6648 . 6760) (punctuation ";" 6559 . 6647) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6614 . 6646) ("name" symbol "rounding_error" 6598 . 6612) ("type" symbol "error_policy_type" 6579 . 6596)))) 6559 . 6647) (punctuation ">" 6559 . 6647) (symbol "value" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ">" 6559 . 6647) (symbol "T" 6559 . 6647) (punctuation "<" 6559 . 6647) (symbol "is_rounding_error_imp" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (symbol "detail" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (symbol "policies" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (symbol "math" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (symbol "boost" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation "<" 6559 . 6647) (symbol "bool_" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (symbol "mpl" 6559 . 6647) (punctuation ":" 6559 . 6647) (punctuation ":" 6559 . 6647) (symbol "boost" 6559 . 6647) (PUBLIC "public" 6559 . 6647) (punctuation ":" 6559 . 6647) (symbol "is_rounding_error" 6559 . 6647) (STRUCT "struct" 6559 . 6647) (punctuation ">" 6559 . 6647) (symbol "T" 6559 . 6647) (CLASS "class" 6559 . 6647) (punctuation "<" 6559 . 6647) (TEMPLATE "template" 6559 . 6647) (punctuation ";" 6466 . 6558) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6523 . 6557) ("name" symbol "evaluation_error" 6505 . 6521) ("type" symbol "error_policy_type" 6486 . 6503)))) 6466 . 6558) (punctuation ">" 6466 . 6558) (symbol "value" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ">" 6466 . 6558) (symbol "T" 6466 . 6558) (punctuation "<" 6466 . 6558) (symbol "is_evaluation_error_imp" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (symbol "detail" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (symbol "policies" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (symbol "math" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (symbol "boost" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation "<" 6466 . 6558) (symbol "bool_" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (symbol "mpl" 6466 . 6558) (punctuation ":" 6466 . 6558) (punctuation ":" 6466 . 6558) (symbol "boost" 6466 . 6558) (PUBLIC "public" 6466 . 6558) (punctuation ":" 6466 . 6558) (symbol "is_evaluation_error" 6466 . 6558) (STRUCT "struct" 6466 . 6558) (punctuation ">" 6466 . 6558) (symbol "T" 6466 . 6558) (CLASS "class" 6466 . 6558) (punctuation "<" 6466 . 6558) (TEMPLATE "template" 6466 . 6558) (punctuation ";" 6381 . 6465) (semantic-list #("{}" 0 1 (macros (("Default" symbol "ignore_error" 6434 . 6464) ("name" symbol "denorm_error" 6420 . 6432) ("type" symbol "error_policy_type" 6401 . 6418)))) 6381 . 6465) (punctuation ">" 6381 . 6465) (symbol "value" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ">" 6381 . 6465) (symbol "T" 6381 . 6465) (punctuation "<" 6381 . 6465) (symbol "is_denorm_error_imp" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (symbol "detail" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (symbol "policies" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (symbol "math" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (symbol "boost" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation "<" 6381 . 6465) (symbol "bool_" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (symbol "mpl" 6381 . 6465) (punctuation ":" 6381 . 6465) (punctuation ":" 6381 . 6465) (symbol "boost" 6381 . 6465) (PUBLIC "public" 6381 . 6465) (punctuation ":" 6381 . 6465) (symbol "is_denorm_error" 6381 . 6465) (STRUCT "struct" 6381 . 6465) (punctuation ">" 6381 . 6465) (symbol "T" 6381 . 6465) (CLASS "class" 6381 . 6465) (punctuation "<" 6381 . 6465) (TEMPLATE "template" 6381 . 6465) (punctuation ";" 6290 . 6380) (semantic-list #("{}" 0 1 (macros (("Default" symbol "ignore_error" 6346 . 6379) ("name" symbol "underflow_error" 6329 . 6344) ("type" symbol "error_policy_type" 6310 . 6327)))) 6290 . 6380) (punctuation ">" 6290 . 6380) (symbol "value" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ">" 6290 . 6380) (symbol "T" 6290 . 6380) (punctuation "<" 6290 . 6380) (symbol "is_underflow_error_imp" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (symbol "detail" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (symbol "policies" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (symbol "math" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (symbol "boost" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation "<" 6290 . 6380) (symbol "bool_" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (symbol "mpl" 6290 . 6380) (punctuation ":" 6290 . 6380) (punctuation ":" 6290 . 6380) (symbol "boost" 6290 . 6380) (PUBLIC "public" 6290 . 6380) (punctuation ":" 6290 . 6380) (symbol "is_underflow_error" 6290 . 6380) (STRUCT "struct" 6290 . 6380) (punctuation ">" 6290 . 6380) (symbol "T" 6290 . 6380) (CLASS "class" 6290 . 6380) (punctuation "<" 6290 . 6380) (TEMPLATE "template" 6290 . 6380) (punctuation ";" 6201 . 6289) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6256 . 6288) ("name" symbol "overflow_error" 6240 . 6254) ("type" symbol "error_policy_type" 6221 . 6238)))) 6201 . 6289) (punctuation ">" 6201 . 6289) (symbol "value" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ">" 6201 . 6289) (symbol "T" 6201 . 6289) (punctuation "<" 6201 . 6289) (symbol "is_overflow_error_imp" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (symbol "detail" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (symbol "policies" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (symbol "math" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (symbol "boost" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation "<" 6201 . 6289) (symbol "bool_" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (symbol "mpl" 6201 . 6289) (punctuation ":" 6201 . 6289) (punctuation ":" 6201 . 6289) (symbol "boost" 6201 . 6289) (PUBLIC "public" 6201 . 6289) (punctuation ":" 6201 . 6289) (symbol "is_overflow_error" 6201 . 6289) (STRUCT "struct" 6201 . 6289) (punctuation ">" 6201 . 6289) (symbol "T" 6201 . 6289) (CLASS "class" 6201 . 6289) (punctuation "<" 6201 . 6289) (TEMPLATE "template" 6201 . 6289) (punctuation ";" 6120 . 6200) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6171 . 6199) ("name" symbol "pole_error" 6159 . 6169) ("type" symbol "error_policy_type" 6140 . 6157)))) 6120 . 6200) (punctuation ">" 6120 . 6200) (symbol "value" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ">" 6120 . 6200) (symbol "T" 6120 . 6200) (punctuation "<" 6120 . 6200) (symbol "is_pole_error_imp" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (symbol "detail" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (symbol "policies" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (symbol "math" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (symbol "boost" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation "<" 6120 . 6200) (symbol "bool_" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (symbol "mpl" 6120 . 6200) (punctuation ":" 6120 . 6200) (punctuation ":" 6120 . 6200) (symbol "boost" 6120 . 6200) (PUBLIC "public" 6120 . 6200) (punctuation ":" 6120 . 6200) (symbol "is_pole_error" 6120 . 6200) (STRUCT "struct" 6120 . 6200) (punctuation ">" 6120 . 6200) (symbol "T" 6120 . 6200) (CLASS "class" 6120 . 6200) (punctuation "<" 6120 . 6200) (TEMPLATE "template" 6120 . 6200) (punctuation ";" 6035 . 6119) (semantic-list #("{}" 0 1 (macros (("Default" symbol "throw_on_error" 6088 . 6118) ("name" symbol "domain_error" 6074 . 6086) ("type" symbol "error_policy_type" 6055 . 6072)))) 6035 . 6119) (punctuation ">" 6035 . 6119) (symbol "value" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ">" 6035 . 6119) (symbol "T" 6035 . 6119) (punctuation "<" 6035 . 6119) (symbol "is_domain_error_imp" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (symbol "detail" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (symbol "policies" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (symbol "math" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (symbol "boost" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation "<" 6035 . 6119) (symbol "bool_" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (symbol "mpl" 6035 . 6119) (punctuation ":" 6035 . 6119) (punctuation ":" 6035 . 6119) (symbol "boost" 6035 . 6119) (PUBLIC "public" 6035 . 6119) (punctuation ":" 6035 . 6119) (symbol "is_domain_error" 6035 . 6119) (STRUCT "struct" 6035 . 6119) (punctuation ">" 6035 . 6119) (symbol "T" 6035 . 6119) (CLASS "class" 6035 . 6119) (punctuation "<" 6035 . 6119) (TEMPLATE "template" 6035 . 6119) (semantic-list 1120 . 1123) (semantic-list 1052 . 1055))
      :lexical-table 
        '(("BOOST_MATH_DIGITS10_POLICY" . ((number "0" 2142 . 2143)))
          ("BOOST_MATH_META_BOOL" (spp-arg-list ("name" "Default") 3563 . 3578) . 
              ((TEMPLATE "template" 3583 . 3591) (punctuation "<" 3592 . 3593) (BOOL "bool" 3593 . 3597) (symbol "N" 3598 . 3599) (punctuation "=" 3600 . 3601) (symbol "Default" 3602 . 3609) (punctuation ">" 3609 . 3610) (STRUCT "struct" 3611 . 3617) (symbol "name" 3618 . 3622) (punctuation ":" 3623 . 3624) (PUBLIC "public" 3625 . 3631) (symbol "boost" 3632 . 3637) (punctuation ":" 3637 . 3638) (punctuation ":" 3638 . 3639) (symbol "mpl" 3639 . 3642) (punctuation ":" 3642 . 3643) (punctuation ":" 3643 . 3644) (symbol "bool_" 3644 . 3649) (punctuation "<" 3649 . 3650) (symbol "N" 3650 . 3651) (punctuation ">" 3651 . 3652) (semantic-list "{}" 3652 . 3654) (punctuation ";" 3654 . 3655) (NAMESPACE "namespace" 3660 . 3669) (symbol "detail" 3670 . 3676) (semantic-list "{\\
   template <bool N>\\
   char test_is_valid_arg(const name<N>*);\\
   char test_is_default_arg(const name<Default>*);\\
   template <class T> struct is_##name##_imp\\
   {\\
      template <bool N> static char test(const name<N>*);\\
      static double test(...);\\
      BOOST_STATIC_CONSTANT(bool, value = sizeof(test(static_cast<T*>(0))) == 1);\\
   };\\
   }" 3676 . 4034) (TEMPLATE "template" 4039 . 4047) (punctuation "<" 4048 . 4049) (CLASS "class" 4049 . 4054) (symbol "T" 4055 . 4056) (punctuation ">" 4056 . 4057) (STRUCT "struct" 4058 . 4064) (spp-symbol-merge ((symbol "is_" 4065 . 4068) (symbol "name" 4070 . 4074)) 4065 . 4074) (punctuation ":" 4075 . 4076) (PUBLIC "public" 4077 . 4083) (symbol "boost" 4084 . 4089) (punctuation ":" 4089 . 4090) (punctuation ":" 4090 . 4091) (symbol "mpl" 4091 . 4094) (punctuation ":" 4094 . 4095) (punctuation ":" 4095 . 4096) (symbol "bool_" 4096 . 4101) (punctuation "<" 4101 . 4102) (punctuation ":" 4103 . 4104) (punctuation ":" 4104 . 4105) (symbol "boost" 4105 . 4110) (punctuation ":" 4110 . 4111) (punctuation ":" 4111 . 4112) (symbol "math" 4112 . 4116) (punctuation ":" 4116 . 4117) (punctuation ":" 4117 . 4118) (symbol "policies" 4118 . 4126) (punctuation ":" 4126 . 4127) (punctuation ":" 4127 . 4128) (symbol "detail" 4128 . 4134) (punctuation ":" 4134 . 4135) (punctuation ":" 4135 . 4136) (spp-symbol-merge ((spp-symbol-merge ((symbol "is_" 4136 . 4139) (symbol "name" 4141 . 4145)) 4136 . 4145) (symbol "_imp" 4147 . 4151)) 4136 . 4151) (punctuation "<" 4151 . 4152) (symbol "T" 4152 . 4153) (punctuation ">" 4153 . 4154) (punctuation ":" 4154 . 4155) (punctuation ":" 4155 . 4156) (symbol "value" 4156 . 4161) (punctuation ">" 4161 . 4162) (semantic-list "{}" 4162 . 4164) (punctuation ";" 4164 . 4165)))
          ("BOOST_MATH_POLICY_HPP")
          ("BOOST_MATH_POLE_ERROR_POLICY" . ((symbol "throw_on_error" 1406 . 1420)))
          ("BOOST_MATH_MAX_SERIES_ITERATION_POLICY" . ((number "1000000" 2755 . 2762)))
          ("BOOST_MATH_ROUNDING_ERROR_POLICY" . ((symbol "throw_on_error" 1722 . 1736)))
          ("BOOST_MATH_EVALUATION_ERROR_POLICY" . ((symbol "throw_on_error" 1618 . 1632)))
          ("BOOST_MATH_MAX_ROOT_ITERATION_POLICY" . ((number "200" 2860 . 2863)))
          ("BOOST_MATH_PROMOTE_FLOAT_POLICY" . ((symbol "true" 2231 . 2235)))
          ("BOOST_MATH_DISCRETE_QUANTILE_POLICY" . ((symbol "integer_round_outwards" 2533 . 2555)))
          ("BOOST_MATH_DENORM_ERROR_POLICY" . ((symbol "ignore_error" 1926 . 1938)))
          ("BOOST_MATH_OVERFLOW_ERROR_POLICY" . ((symbol "throw_on_error" 1510 . 1524)))
          ("BOOST_MATH_UNDERFLOW_ERROR_POLICY" . ((symbol "ignore_error" 1828 . 1840)))
          ("BOOST_MATH_ASSERT_UNDEFINED_POLICY" . ((symbol "true" 2649 . 2653)))
          ("BOOST_MATH_META_INT" (spp-arg-list ("type" "name" "Default") 2926 . 2947) . 
              ((TEMPLATE "template" 2952 . 2960) (punctuation "<" 2961 . 2962) (symbol "type" 2962 . 2966) (symbol "N" 2967 . 2968) (punctuation "=" 2969 . 2970) (symbol "Default" 2971 . 2978) (punctuation ">" 2978 . 2979) (STRUCT "struct" 2980 . 2986) (symbol "name" 2987 . 2991) (punctuation ":" 2992 . 2993) (PUBLIC "public" 2994 . 3000) (symbol "boost" 3001 . 3006) (punctuation ":" 3006 . 3007) (punctuation ":" 3007 . 3008) (symbol "mpl" 3008 . 3011) (punctuation ":" 3011 . 3012) (punctuation ":" 3012 . 3013) (symbol "int_" 3013 . 3017) (punctuation "<" 3017 . 3018) (symbol "N" 3018 . 3019) (punctuation ">" 3019 . 3020) (semantic-list "{}" 3020 . 3022) (punctuation ";" 3022 . 3023) (NAMESPACE "namespace" 3028 . 3037) (symbol "detail" 3038 . 3044) (semantic-list "{\\
   template <type N>\\
   char test_is_valid_arg(const name<N>*);\\
   char test_is_default_arg(const name<Default>*);\\
   template <class T> struct is_##name##_imp\\
   {\\
      template <type N> static char test(const name<N>*);\\
      static double test(...);\\
      BOOST_STATIC_CONSTANT(bool, value = sizeof(test(static_cast<T*>(0))) == 1);\\
   };\\
   }" 3044 . 3402) (TEMPLATE "template" 3407 . 3415) (punctuation "<" 3416 . 3417) (CLASS "class" 3417 . 3422) (symbol "T" 3423 . 3424) (punctuation ">" 3424 . 3425) (STRUCT "struct" 3426 . 3432) (spp-symbol-merge ((symbol "is_" 3433 . 3436) (symbol "name" 3438 . 3442)) 3433 . 3442) (punctuation ":" 3443 . 3444) (PUBLIC "public" 3445 . 3451) (symbol "boost" 3452 . 3457) (punctuation ":" 3457 . 3458) (punctuation ":" 3458 . 3459) (symbol "mpl" 3459 . 3462) (punctuation ":" 3462 . 3463) (punctuation ":" 3463 . 3464) (symbol "bool_" 3464 . 3469) (punctuation "<" 3469 . 3470) (punctuation ":" 3471 . 3472) (punctuation ":" 3472 . 3473) (symbol "boost" 3473 . 3478) (punctuation ":" 3478 . 3479) (punctuation ":" 3479 . 3480) (symbol "math" 3480 . 3484) (punctuation ":" 3484 . 3485) (punctuation ":" 3485 . 3486) (symbol "policies" 3486 . 3494) (punctuation ":" 3494 . 3495) (punctuation ":" 3495 . 3496) (symbol "detail" 3496 . 3502) (punctuation ":" 3502 . 3503) (punctuation ":" 3503 . 3504) (spp-symbol-merge ((spp-symbol-merge ((symbol "is_" 3504 . 3507) (symbol "name" 3509 . 3513)) 3504 . 3513) (symbol "_imp" 3515 . 3519)) 3504 . 3519) (punctuation "<" 3519 . 3520) (symbol "T" 3520 . 3521) (punctuation ">" 3521 . 3522) (punctuation ":" 3522 . 3523) (punctuation ":" 3523 . 3524) (symbol "value" 3524 . 3529) (punctuation ">" 3529 . 3530) (semantic-list "{}" 3530 . 3532) (punctuation ";" 3532 . 3533)))
          ("BOOST_MATH_PARAMETER" (spp-arg-list ("name") 7761 . 7767) . 
              ((symbol "BOOST_PARAMETER_TEMPLATE_KEYWORD" 7772 . 7804) (semantic-list "(name##_name)" 7804 . 7817) (symbol "BOOST_PARAMETER_NAME" 7822 . 7842) (semantic-list "(name##_name)" 7842 . 7855)))
          ("BOOST_MATH_DOMAIN_ERROR_POLICY" . ((symbol "throw_on_error" 1310 . 1324)))
          ("BOOST_MATH_INDETERMINATE_RESULT_ERROR_POLICY" . ((symbol "ignore_error" 2052 . 2064)))
          ("BOOST_MATH_PROMOTE_DOUBLE_POLICY" . ((symbol "true" 2426 . 2430)))
          )
))
  :file "!usr!include!boost!math!policies!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")

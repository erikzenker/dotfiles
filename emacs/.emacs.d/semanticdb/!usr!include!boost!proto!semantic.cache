;; Object proto/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "proto/"
  :tables
  (list
    (semanticdb-table "core.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_CORE_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [447 482])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [484 520])
            ("boost/proto/args.hpp" include (:system-flag t) nil [521 552])
            ("boost/proto/tags.hpp" include (:system-flag t) nil [553 584])
            ("boost/proto/eval.hpp" include (:system-flag t) nil [585 616])
            ("boost/proto/expr.hpp" include (:system-flag t) nil [617 648])
            ("boost/proto/repeat.hpp" include (:system-flag t) nil [649 682])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [683 716])
            ("boost/proto/domain.hpp" include (:system-flag t) nil [717 750])
            ("boost/proto/fusion.hpp" include (:system-flag t) nil [751 784])
            ("boost/proto/matches.hpp" include (:system-flag t) nil [785 819])
            ("boost/proto/extends.hpp" include (:system-flag t) nil [820 854])
            ("boost/proto/literal.hpp" include (:system-flag t) nil [855 889])
            ("boost/proto/generate.hpp" include (:system-flag t) nil [890 925])
            ("boost/proto/operators.hpp" include (:system-flag t) nil [926 962])
            ("boost/proto/deep_copy.hpp" include (:system-flag t) nil [963 999])
            ("boost/proto/make_expr.hpp" include (:system-flag t) nil [1000 1036]))          
      :file "core.hpp"
      :pointmax 1045
      :fsize 1044
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_PROTO_CORE_HPP_EAN_04_01_2005")
          )
)
    (semanticdb-table "extends.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_EXTENDS_HPP_EAN_11_1_2006" variable (:constant-flag t) nil [416 453])
            ("cstddef" include (:system-flag t) nil [455 473])
            ("boost/config.hpp" include (:system-flag t) nil [490 517])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [518 556])
            ("boost/preprocessor/facilities/empty.hpp" include (:system-flag t) nil [557 607])
            ("boost/preprocessor/tuple/elem.hpp" include (:system-flag t) nil [608 652])
            ("boost/preprocessor/control/if.hpp" include (:system-flag t) nil [653 697])
            ("boost/preprocessor/arithmetic/inc.hpp" include (:system-flag t) nil [698 746])
            ("boost/preprocessor/arithmetic/dec.hpp" include (:system-flag t) nil [747 795])
            ("boost/preprocessor/iteration/local.hpp" include (:system-flag t) nil [796 845])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [846 902])
            ("boost/preprocessor/repetition/repeat_from_to.hpp" include (:system-flag t) nil [903 962])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [963 1026])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [1027 1092])
            ("boost/preprocessor/repetition/enum_trailing_binary_params.hpp" include (:system-flag t) nil [1093 1165])
            ("boost/preprocessor/seq/for_each.hpp" include (:system-flag t) nil [1166 1212])
            ("boost/utility/addressof.hpp" include (:system-flag t) nil [1213 1251])
            ("boost/utility/result_of.hpp" include (:system-flag t) nil [1252 1290])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [1291 1327])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [1328 1361])
            ("boost/proto/expr.hpp" include (:system-flag t) nil [1362 1393])
            ("boost/proto/args.hpp" include (:system-flag t) nil [1394 1425])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [1426 1459])
            ("boost/proto/generate.hpp" include (:system-flag t) nil [1460 1495])
            ("boost/proto/detail/remove_typename.hpp" include (:system-flag t) nil [1496 1545])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("BOOST_PROTO_ADDROF" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1786 1804])
                            ("BOOST_PROTO_OFFSETOF" variable (:constant-flag t) (reparse-symbol namespacesubparts) [1895 1915])
                            ("BOOST_PROTO_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2132 2149])
                            ("BOOST_PROTO_TYPENAME" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2201 2221])
                            ("BOOST_PROTO_TEMPLATE_YES_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2276 2301])
                            ("BOOST_PROTO_TEMPLATE_NO_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2402 2426])
                            ("BOOST_PROTO_DEFINE_FUN_OP_IMPL_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2476 2507])
                            ("BOOST_PROTO_DEFINE_FUN_OP_VARIADIC_IMPL_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [5172 5212])
                            ("BOOST_PROTO_DEFINE_FUN_OP_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [7868 7899])
                            ("BOOST_PROTO_DEFINE_FUN_OP_NON_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8116 8151])
                            ("BOOST_PROTO_DEFINE_FUN_OP" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8364 8389])
                            ("BOOST_PROTO_EXTENDS_CHILD" variable (:constant-flag t) (reparse-symbol namespacesubparts) [8714 8739])
                            ("BOOST_PROTO_BASIC_EXTENDS_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [9136 9162])
                            ("BOOST_PROTO_BASIC_EXTENDS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [13434 13459])
                            ("BOOST_PROTO_EXTENDS_COPY_ASSIGN_IMPL_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [13771 13808])
                            ("BOOST_PROTO_EXTENDS_COPY_ASSIGN_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [17713 17745])
                            ("BOOST_PROTO_EXTENDS_ASSIGN_IMPL_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [17980 18012])
                            ("BOOST_PROTO_EXTENDS_ASSIGN_CONST_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [21364 21397])
                            ("BOOST_PROTO_EXTENDS_ASSIGN_NON_CONST_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [21684 21721])
                            ("BOOST_PROTO_EXTENDS_ASSIGN_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [22004 22031])
                            ("BOOST_PROTO_EXTENDS_ASSIGN_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [22324 22356])
                            ("BOOST_PROTO_EXTENDS_ASSIGN_NON_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [22644 22680])
                            ("BOOST_PROTO_EXTENDS_ASSIGN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [22964 22990])
                            ("BOOST_PROTO_EXTENDS_SUBSCRIPT_IMPL_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [23322 23357])
                            ("BOOST_PROTO_EXTENDS_SUBSCRIPT_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [26706 26741])
                            ("BOOST_PROTO_EXTENDS_SUBSCRIPT_NON_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [27026 27065])
                            ("BOOST_PROTO_EXTENDS_SUBSCRIPT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [27346 27375])
                            ("BOOST_PROTO_EXTENDS_FUNCTION_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [27704 27733])
                            ("BOOST_PROTO_EXTENDS_FUNCTION_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [29400 29434])
                            ("BOOST_PROTO_EXTENDS_FUNCTION_NON_CONST" variable (:constant-flag t) (reparse-symbol namespacesubparts) [29724 29762])
                            ("BOOST_PROTO_EXTENDS_FUNCTION" variable (:constant-flag t) (reparse-symbol namespacesubparts) [30048 30076])
                            ("BOOST_PROTO_EXTENDS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [32992 33011])
                            ("BOOST_PROTO_EXTENDS_USING_ASSIGN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [33516 33548])
                            ("BOOST_PROTO_EXTENDS_USING_ASSIGN_NON_DEPENDENT" variable (:constant-flag t) (reparse-symbol namespacesubparts) [33938 33984])
                            ("exprns_" type
                               (:members 
                                  ( ("is_proto_expr" type (:type "struct") (reparse-symbol namespacesubparts) [35370 35402])
                                    ("extends" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("Derived" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil)
                                            ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("extends" function
                                               (:constructor-flag t
                                                :type ("BOOST_FORCEINLINE" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [35758 35842])
                                            ("extends" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("that" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("extends" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [35894 35914]))                                                  
                                                :type ("BOOST_FORCEINLINE" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [35856 35975])
                                            ("extends" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("expr_" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [36027 36045]))                                                  
                                                :type ("BOOST_FORCEINLINE" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [35989 36095])
                                            ("proto_extends" type
                                               (:typedef ("extends" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36109 36139])
                                            ("proto_expr_" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_base_expr_" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_base_expr" type
                                               (:typedef ("proto_base_expr_::proto_base_expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_domain" variable (:type "int") (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_derived_expr" type
                                               (:typedef ("Derived" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_generator" variable (:type ("proto_generator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_tag" type
                                               (:typedef ("proto_base_expr::proto_tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_args" type
                                               (:typedef ("proto_base_expr::proto_args" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_arity" type
                                               (:typedef ("proto_base_expr::proto_arity" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_grammar" type
                                               (:typedef ("proto_base_expr::proto_grammar" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_address_of_hack_type_" type
                                               (:typedef ("proto_base_expr::address_of_hack_type_" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_is_expr_" type
                                               (:typedef ("void")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_base_expr::proto_arity_c" variable (:type "int") (reparse-symbol classsubparts) [36152 36210])
                                            ("fusion_tag" type
                                               (:typedef ("boost::proto::tag::proto_expr" type
                                                     (:template-specifier 
                                                        ( ("proto_tag" type nil nil nil)
                                                          ("proto_domain" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("make" function
                                               (:typemodifiers ("static")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("proto_derived_expr" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_base" function (:type ("proto_base_expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_base" function (:type ("proto_base_expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [36152 36210])
                                            ("proto_address_of_hack_type_" function (:type "int") (reparse-symbol classsubparts) [36152 36210])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [36223 36256])
                                            ("=" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [36223 36256])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [36271 36306])
                                            ("[]" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [36271 36306]))                                          )
                                        (reparse-symbol namespacesubparts) [35522 36603])
                                    ("extends" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("Derived" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("extends" function
                                               (:constructor-flag t
                                                :type ("BOOST_FORCEINLINE" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [36853 36937])
                                            ("extends" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("that" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("extends" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [36989 37009]))                                                  
                                                :type ("BOOST_FORCEINLINE" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [36951 37070])
                                            ("extends" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("expr_" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [37122 37140]))                                                  
                                                :type ("BOOST_FORCEINLINE" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [37084 37190])
                                            ("proto_extends" type
                                               (:typedef ("extends" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37204 37234])
                                            ("proto_expr_" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_base_expr_" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_base_expr" type
                                               (:typedef ("proto_base_expr_::proto_base_expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_domain" variable (:type "int") (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_derived_expr" type
                                               (:typedef ("Derived" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_generator" variable (:type ("proto_generator" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_tag" type
                                               (:typedef ("proto_base_expr::proto_tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_args" type
                                               (:typedef ("proto_base_expr::proto_args" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_arity" type
                                               (:typedef ("proto_base_expr::proto_arity" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_grammar" type
                                               (:typedef ("proto_base_expr::proto_grammar" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_address_of_hack_type_" type
                                               (:typedef ("proto_base_expr::address_of_hack_type_" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_is_expr_" type
                                               (:typedef ("void")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_base_expr::proto_arity_c" variable (:type "int") (reparse-symbol classsubparts) [37247 37305])
                                            ("fusion_tag" type
                                               (:typedef ("boost::proto::tag::proto_expr" type
                                                     (:template-specifier 
                                                        ( ("proto_tag" type nil nil nil)
                                                          ("proto_domain" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("make" function
                                               (:typemodifiers ("static")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("proto_derived_expr" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_base" function (:type ("proto_base_expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_base" function (:type ("proto_base_expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [37247 37305])
                                            ("proto_address_of_hack_type_" function (:type "int") (reparse-symbol classsubparts) [37247 37305])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [37318 37345])
                                            ("=" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [37318 37345])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [37318 37345])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [37318 37345])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [37360 37389])
                                            ("[]" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [37360 37389])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [37360 37389])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [37360 37389]))                                          
                                        :template-specifier 
                                          ( ("Expr" type nil nil nil)
                                            ("Derived" type nil nil nil)
                                            ("Domain" type nil nil nil)
                                            ("0"))                                          )
                                        (reparse-symbol namespacesubparts) [36723 37680])
                                    ("virtual_member" type
                                       (:template 
                                          ( ("This" type (:type "class") nil nil)
                                            ("Fun" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("proto_domain" type
                                               (:typedef ("Domain" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37835 37863])
                                            ("proto_generator" type
                                               (:typedef ("Domain::proto_generator" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37876 37933])
                                            ("proto_derived_expr" type
                                               (:typedef ("virtual_member" type
                                                     (:template-specifier 
                                                        ( ("This" type nil nil nil)
                                                          ("Fun" type nil nil nil)
                                                          ("Domain" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [37946 38007])
                                            ("proto_tag" type
                                               (:typedef ("tag::member" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38020 38050])
                                            ("proto_args" type
                                               (:typedef ("list2" type
                                                     (:template-specifier 
                                                        ( ("This" type (:reference 1) nil nil)
                                                          ("expr" type
                                                             (:reference 1
                                                              :constant-flag t)
                                                              nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38063 38137])
                                            ("proto_arity" type
                                               (:typedef ("mpl::long_" type
                                                     (:template-specifier (("2"))
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38150 38184])
                                            ("proto_address_of_hack_type_" type
                                               (:typedef ("detail::not_a_valid_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38197 38258])
                                            ("proto_is_expr_" type
                                               (:typedef ("void")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38271 38299])
                                            ("proto_arity_c" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :default-value "2"
                                                :type "long")
                                                (reparse-symbol classsubparts) [38334 38370])
                                            ("fusion_tag" type
                                               (:typedef ("boost::proto::tag::proto_expr" type
                                                     (:template-specifier 
                                                        ( ("proto_tag" type nil nil nil)
                                                          ("Domain" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38383 38451])
                                            ("proto_child0" variable (:type ("This" type (:type "class") nil nil)) (reparse-symbol classsubparts) [38472 38491])
                                            ("proto_child1" variable (:type ("expr" type
                                                 (:template-specifier 
                                                    ( ("tag::terminal" type nil nil nil)
                                                      ("term" type nil nil nil))                                                    
                                                  :type "class")
                                                  nil nil)) (reparse-symbol classsubparts) [38512 38564])
                                            ("proto_base_expr" type
                                               (:typedef ("expr" type
                                                     (:template-specifier 
                                                        ( ("proto_tag" type nil nil nil)
                                                          ("proto_args" type nil nil nil)
                                                          ("proto_arity_c" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38577 38644])
                                            ("proto_grammar" type
                                               (:typedef ("basic_expr" type
                                                     (:template-specifier 
                                                        ( ("proto_tag" type nil nil nil)
                                                          ("proto_args" type nil nil nil)
                                                          ("proto_arity_c" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38657 38728])
                                            ("proto_is_aggregate_" type
                                               (:typedef ("void")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [38741 38774])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [38810 38837])
                                            ("=" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [38810 38837])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [38810 38837])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [38810 38837])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [38852 38881])
                                            ("[]" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("A" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                                    ("" variable (:type ("a" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [38852 38881])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [38852 38881])
                                            ("BOOST_PP_EMPTY" function (:type "int") (reparse-symbol classsubparts) [38852 38881])
                                            ("BOOST_PROTO_NO_WAVE_OUTPUT" variable (:constant-flag t) (reparse-symbol classsubparts) [39122 39148])
                                            ("proto_base" function (:type ("proto_base_expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39298 39468])
                                            ("child0" function (:type ("proto_child0" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39512 39706])
                                            ("child1" function (:type ("proto_child1" type (:type "class") nil nil)) (reparse-symbol classsubparts) [39750 39913]))                                          )
                                        (reparse-symbol namespacesubparts) [37728 39924])
                                    ("BOOST_PROTO_EXTENDS_MEMBER_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [39980 40007])
                                    ("BOOST_PROTO_EXTENDS_MEMBERS_WITH_DOMAIN" variable (:constant-flag t) (reparse-symbol namespacesubparts) [40723 40762])
                                    ("BOOST_PROTO_EXTENDS_MEMBERS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [41466 41493]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [34352 41685]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1705 41688]))                  
                :type "namespace")
                nil [1687 41689]))          
      :file "extends.hpp"
      :pointmax 41750
      :fsize 41749
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((symbol 39720 . 39737) (symbol 39482 . 39499) (symbol 39268 . 39285) (spp-system-include "boost/proto/detail/extends_funop.hpp" 39149 . 39208) (semantic-list 38881 . 38883) (semantic-list "()" 38852 . 38881) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38852 . 38881) (semantic-list #("[]" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38852 . 38881) (OPERATOR "operator" 38852 . 38881) (CONST "const" 38852 . 38881) (symbol "type" 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ">" 38852 . 38881) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38852 . 38881) (symbol "proto_generator" 38852 . 38881) (punctuation "<" 38852 . 38881) (symbol "BOOST_PROTO_RESULT_OF" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (symbol "BOOST_FORCEINLINE" 38852 . 38881) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38852 . 38881) (punctuation ">" 38852 . 38881) (symbol "A" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (punctuation "<" 38852 . 38881) (TEMPLATE "template" 38852 . 38881) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38852 . 38881) (semantic-list #("[]" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38852 . 38881) (OPERATOR "operator" 38852 . 38881) (CONST "const" 38852 . 38881) (symbol "type" 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ">" 38852 . 38881) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38852 . 38881) (symbol "proto_generator" 38852 . 38881) (punctuation "<" 38852 . 38881) (symbol "BOOST_PROTO_RESULT_OF" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (symbol "BOOST_FORCEINLINE" 38852 . 38881) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38852 . 38881) (punctuation ">" 38852 . 38881) (symbol "A" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (punctuation "<" 38852 . 38881) (TEMPLATE "template" 38852 . 38881) (spp-arg-list nil 38852 . 38881) (semantic-list "()" 38852 . 38881) (semantic-list #("{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 0 1 (macros (("ThatConst") ("ThisConst")))) 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ">" 38852 . 38881) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst")))) 38852 . 38881) (symbol "proto_generator" 38852 . 38881) (punctuation "<" 38852 . 38881) (symbol "BOOST_PROTO_RESULT_OF" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (symbol "BOOST_FORCEINLINE" 38852 . 38881) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38852 . 38881) (punctuation ">" 38852 . 38881) (symbol "A" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (punctuation "<" 38852 . 38881) (TEMPLATE "template" 38852 . 38881) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 38852 . 38881) (semantic-list #("[]" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 38852 . 38881) (OPERATOR "operator" 38852 . 38881) (CONST "const" 38852 . 38881) (symbol "type" 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ":" 38852 . 38881) (punctuation ">" 38852 . 38881) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 38852 . 38881) (symbol "proto_generator" 38852 . 38881) (punctuation "<" 38852 . 38881) (symbol "BOOST_PROTO_RESULT_OF" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (symbol "BOOST_FORCEINLINE" 38852 . 38881) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38852 . 38881) (punctuation ">" 38852 . 38881) (symbol "A" 38852 . 38881) (TYPENAME "typename" 38852 . 38881) (punctuation "<" 38852 . 38881) (TEMPLATE "template" 38852 . 38881) (spp-arg-list nil 38852 . 38881) (spp-arg-list nil 38852 . 38881) (semantic-list 38837 . 38839) (semantic-list "()" 38810 . 38837) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38810 . 38837) (punctuation "=" 38810 . 38837) (OPERATOR "operator" 38810 . 38837) (CONST "const" 38810 . 38837) (symbol "type" 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ">" 38810 . 38837) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38810 . 38837) (symbol "proto_generator" 38810 . 38837) (punctuation "<" 38810 . 38837) (symbol "BOOST_PROTO_RESULT_OF" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (symbol "BOOST_FORCEINLINE" 38810 . 38837) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38810 . 38837) (punctuation ">" 38810 . 38837) (symbol "A" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (punctuation "<" 38810 . 38837) (TEMPLATE "template" 38810 . 38837) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38810 . 38837) (punctuation "=" 38810 . 38837) (OPERATOR "operator" 38810 . 38837) (CONST "const" 38810 . 38837) (symbol "type" 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ">" 38810 . 38837) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 38810 . 38837) (symbol "proto_generator" 38810 . 38837) (punctuation "<" 38810 . 38837) (symbol "BOOST_PROTO_RESULT_OF" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (symbol "BOOST_FORCEINLINE" 38810 . 38837) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38810 . 38837) (punctuation ">" 38810 . 38837) (symbol "A" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (punctuation "<" 38810 . 38837) (TEMPLATE "template" 38810 . 38837) (spp-arg-list nil 38810 . 38837) (semantic-list "()" 38810 . 38837) (semantic-list #("{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 0 1 (macros (("ThatConst") ("ThisConst")))) 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ">" 38810 . 38837) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst")))) 38810 . 38837) (symbol "proto_generator" 38810 . 38837) (punctuation "<" 38810 . 38837) (symbol "BOOST_PROTO_RESULT_OF" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (symbol "BOOST_FORCEINLINE" 38810 . 38837) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38810 . 38837) (punctuation ">" 38810 . 38837) (symbol "A" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (punctuation "<" 38810 . 38837) (TEMPLATE "template" 38810 . 38837) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 38810 . 38837) (punctuation "=" 38810 . 38837) (OPERATOR "operator" 38810 . 38837) (CONST "const" 38810 . 38837) (symbol "type" 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ":" 38810 . 38837) (punctuation ">" 38810 . 38837) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 38810 . 38837) (symbol "proto_generator" 38810 . 38837) (punctuation "<" 38810 . 38837) (symbol "BOOST_PROTO_RESULT_OF" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (symbol "BOOST_FORCEINLINE" 38810 . 38837) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 38810 . 38837) (punctuation ">" 38810 . 38837) (symbol "A" 38810 . 38837) (TYPENAME "typename" 38810 . 38837) (punctuation "<" 38810 . 38837) (TEMPLATE "template" 38810 . 38837) (spp-arg-list nil 38810 . 38837) (spp-arg-list nil 38810 . 38837) (TYPEDEF 38504 . 38511) (TYPEDEF 38464 . 38471) (spp-system-include "boost/proto/detail/extends_funop.hpp" 37610 . 37669) (semantic-list 37389 . 37391) (semantic-list "()" 37360 . 37389) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37360 . 37389) (semantic-list #("[]" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37360 . 37389) (OPERATOR "operator" 37360 . 37389) (CONST "const" 37360 . 37389) (symbol "type" 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ">" 37360 . 37389) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37360 . 37389) (symbol "proto_generator" 37360 . 37389) (punctuation "<" 37360 . 37389) (symbol "BOOST_PROTO_RESULT_OF" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (symbol "BOOST_FORCEINLINE" 37360 . 37389) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37360 . 37389) (punctuation ">" 37360 . 37389) (symbol "A" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (punctuation "<" 37360 . 37389) (TEMPLATE "template" 37360 . 37389) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37360 . 37389) (semantic-list #("[]" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37360 . 37389) (OPERATOR "operator" 37360 . 37389) (CONST "const" 37360 . 37389) (symbol "type" 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ">" 37360 . 37389) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37360 . 37389) (symbol "proto_generator" 37360 . 37389) (punctuation "<" 37360 . 37389) (symbol "BOOST_PROTO_RESULT_OF" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (symbol "BOOST_FORCEINLINE" 37360 . 37389) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37360 . 37389) (punctuation ">" 37360 . 37389) (symbol "A" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (punctuation "<" 37360 . 37389) (TEMPLATE "template" 37360 . 37389) (spp-arg-list nil 37360 . 37389) (semantic-list "()" 37360 . 37389) (semantic-list #("{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 0 1 (macros (("ThatConst") ("ThisConst")))) 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ">" 37360 . 37389) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst")))) 37360 . 37389) (symbol "proto_generator" 37360 . 37389) (punctuation "<" 37360 . 37389) (symbol "BOOST_PROTO_RESULT_OF" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (symbol "BOOST_FORCEINLINE" 37360 . 37389) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37360 . 37389) (punctuation ">" 37360 . 37389) (symbol "A" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (punctuation "<" 37360 . 37389) (TEMPLATE "template" 37360 . 37389) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 37360 . 37389) (semantic-list #("[]" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 37360 . 37389) (OPERATOR "operator" 37360 . 37389) (CONST "const" 37360 . 37389) (symbol "type" 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ":" 37360 . 37389) (punctuation ">" 37360 . 37389) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 37360 . 37389) (symbol "proto_generator" 37360 . 37389) (punctuation "<" 37360 . 37389) (symbol "BOOST_PROTO_RESULT_OF" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (symbol "BOOST_FORCEINLINE" 37360 . 37389) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37360 . 37389) (punctuation ">" 37360 . 37389) (symbol "A" 37360 . 37389) (TYPENAME "typename" 37360 . 37389) (punctuation "<" 37360 . 37389) (TEMPLATE "template" 37360 . 37389) (spp-arg-list nil 37360 . 37389) (spp-arg-list nil 37360 . 37389) (semantic-list 37345 . 37347) (semantic-list "()" 37318 . 37345) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37318 . 37345) (punctuation "=" 37318 . 37345) (OPERATOR "operator" 37318 . 37345) (CONST "const" 37318 . 37345) (symbol "type" 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ">" 37318 . 37345) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37318 . 37345) (symbol "proto_generator" 37318 . 37345) (punctuation "<" 37318 . 37345) (symbol "BOOST_PROTO_RESULT_OF" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (symbol "BOOST_FORCEINLINE" 37318 . 37345) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37318 . 37345) (punctuation ">" 37318 . 37345) (symbol "A" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (punctuation "<" 37318 . 37345) (TEMPLATE "template" 37318 . 37345) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37318 . 37345) (punctuation "=" 37318 . 37345) (OPERATOR "operator" 37318 . 37345) (CONST "const" 37318 . 37345) (symbol "type" 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ">" 37318 . 37345) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst" symbol "BOOST_PP_EMPTY" 17 . 31) ("ThisConst" symbol "BOOST_PP_EMPTY" 1 . 15)))) 37318 . 37345) (symbol "proto_generator" 37318 . 37345) (punctuation "<" 37318 . 37345) (symbol "BOOST_PROTO_RESULT_OF" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (symbol "BOOST_FORCEINLINE" 37318 . 37345) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37318 . 37345) (punctuation ">" 37318 . 37345) (symbol "A" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (punctuation "<" 37318 . 37345) (TEMPLATE "template" 37318 . 37345) (spp-arg-list nil 37318 . 37345) (semantic-list "()" 37318 . 37345) (semantic-list #("{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 0 1 (macros (("ThatConst") ("ThisConst")))) 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ">" 37318 . 37345) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst")))) 37318 . 37345) (symbol "proto_generator" 37318 . 37345) (punctuation "<" 37318 . 37345) (symbol "BOOST_PROTO_RESULT_OF" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (symbol "BOOST_FORCEINLINE" 37318 . 37345) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37318 . 37345) (punctuation ">" 37318 . 37345) (symbol "A" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (punctuation "<" 37318 . 37345) (TEMPLATE "template" 37318 . 37345) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 37318 . 37345) (punctuation "=" 37318 . 37345) (OPERATOR "operator" 37318 . 37345) (CONST "const" 37318 . 37345) (symbol "type" 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ":" 37318 . 37345) (punctuation ">" 37318 . 37345) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 37318 . 37345) (symbol "proto_generator" 37318 . 37345) (punctuation "<" 37318 . 37345) (symbol "BOOST_PROTO_RESULT_OF" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (symbol "BOOST_FORCEINLINE" 37318 . 37345) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37318 . 37345) (punctuation ">" 37318 . 37345) (symbol "A" 37318 . 37345) (TYPENAME "typename" 37318 . 37345) (punctuation "<" 37318 . 37345) (TEMPLATE "template" 37318 . 37345) (spp-arg-list nil 37318 . 37345) (spp-arg-list nil 37318 . 37345) (OPERATOR "operator" 37247 . 37305) (symbol "BOOST_FORCEINLINE" 37247 . 37305) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37247 . 37305) (symbol "BOOST_FORCEINLINE" 37247 . 37305) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37247 . 37305) (symbol "BOOST_FORCEINLINE" 37247 . 37305) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37247 . 37305) (symbol "BOOST_FORCEINLINE" 37247 . 37305) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 37247 . 37305) (semantic-list #("(BOOST_PROTO_MAX_ARITY, BOOST_PROTO_EXTENDS_CHILD, ~)" 0 1 (macros (("Domain" TYPENAME "typename" 37289 . 37297) ("Derived" symbol "Derived" 37280 . 37287) ("Expr" symbol "Expr" 37274 . 37278)))) 37247 . 37305) (symbol "BOOST_PP_REPEAT" 37247 . 37305) (punctuation "=" 37247 . 37305) (symbol "proto_arity_c" 37247 . 37305) (LONG "long" 37247 . 37305) (CONST "const" 37247 . 37305) (STATIC "static" 37247 . 37305) (punctuation ":" 37247 . 37305) (punctuation ":" 37247 . 37305) (TYPENAME "typename" 37247 . 37305) (TYPEDEF "typedef" 37247 . 37305) (semantic-list #("(Domain)" 0 1 (macros (("Domain" TYPENAME "typename" 37289 . 37297) ("Derived" symbol "Derived" 37280 . 37287) ("Expr" symbol "Expr" 37274 . 37278)))) 37247 . 37305) (symbol "BOOST_PROTO_REMOVE_TYPENAME" 37247 . 37305) (TYPEDEF "typedef" 37247 . 37305) (spp-system-include "boost/proto/detail/extends_funop_const.hpp" 36527 . 36592) (semantic-list 36306 . 36308) (semantic-list #("{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 0 1 (macros (("ThatConst") ("ThisConst")))) 36271 . 36306) (punctuation ":" 36271 . 36306) (punctuation ":" 36271 . 36306) (punctuation ">" 36271 . 36306) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst")))) 36271 . 36306) (symbol "proto_generator" 36271 . 36306) (punctuation "<" 36271 . 36306) (symbol "BOOST_PROTO_RESULT_OF" 36271 . 36306) (TYPENAME "typename" 36271 . 36306) (symbol "BOOST_FORCEINLINE" 36271 . 36306) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36271 . 36306) (punctuation ">" 36271 . 36306) (symbol "A" 36271 . 36306) (TYPENAME "typename" 36271 . 36306) (punctuation "<" 36271 . 36306) (TEMPLATE "template" 36271 . 36306) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 36271 . 36306) (semantic-list #("[]" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 36271 . 36306) (OPERATOR "operator" 36271 . 36306) (CONST "const" 36271 . 36306) (symbol "type" 36271 . 36306) (punctuation ":" 36271 . 36306) (punctuation ":" 36271 . 36306) (punctuation ">" 36271 . 36306) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 36271 . 36306) (symbol "proto_generator" 36271 . 36306) (punctuation "<" 36271 . 36306) (symbol "BOOST_PROTO_RESULT_OF" 36271 . 36306) (TYPENAME "typename" 36271 . 36306) (symbol "BOOST_FORCEINLINE" 36271 . 36306) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36271 . 36306) (punctuation ">" 36271 . 36306) (symbol "A" 36271 . 36306) (TYPENAME "typename" 36271 . 36306) (punctuation "<" 36271 . 36306) (TEMPLATE "template" 36271 . 36306) (spp-arg-list nil 36271 . 36306) (semantic-list 36256 . 36258) (semantic-list #("{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 0 1 (macros (("ThatConst") ("ThisConst")))) 36223 . 36256) (punctuation ":" 36223 . 36256) (punctuation ":" 36223 . 36256) (punctuation ">" 36223 . 36256) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst")))) 36223 . 36256) (symbol "proto_generator" 36223 . 36256) (punctuation "<" 36223 . 36256) (symbol "BOOST_PROTO_RESULT_OF" 36223 . 36256) (TYPENAME "typename" 36223 . 36256) (symbol "BOOST_FORCEINLINE" 36223 . 36256) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36223 . 36256) (punctuation ">" 36223 . 36256) (symbol "A" 36223 . 36256) (TYPENAME "typename" 36223 . 36256) (punctuation "<" 36223 . 36256) (TEMPLATE "template" 36223 . 36256) (semantic-list #("(A ThatConst() &a)" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 36223 . 36256) (punctuation "=" 36223 . 36256) (OPERATOR "operator" 36223 . 36256) (CONST "const" 36223 . 36256) (symbol "type" 36223 . 36256) (punctuation ":" 36223 . 36256) (punctuation ":" 36223 . 36256) (punctuation ">" 36223 . 36256) (semantic-list #("(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 0 1 (macros (("ThatConst") ("ThisConst" symbol "BOOST_PP_EMPTY" 20 . 34)))) 36223 . 36256) (symbol "proto_generator" 36223 . 36256) (punctuation "<" 36223 . 36256) (symbol "BOOST_PROTO_RESULT_OF" 36223 . 36256) (TYPENAME "typename" 36223 . 36256) (symbol "BOOST_FORCEINLINE" 36223 . 36256) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36223 . 36256) (punctuation ">" 36223 . 36256) (symbol "A" 36223 . 36256) (TYPENAME "typename" 36223 . 36256) (punctuation "<" 36223 . 36256) (TEMPLATE "template" 36223 . 36256) (spp-arg-list nil 36223 . 36256) (OPERATOR "operator" 36152 . 36210) (symbol "BOOST_FORCEINLINE" 36152 . 36210) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36152 . 36210) (symbol "BOOST_FORCEINLINE" 36152 . 36210) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36152 . 36210) (symbol "BOOST_FORCEINLINE" 36152 . 36210) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36152 . 36210) (symbol "BOOST_FORCEINLINE" 36152 . 36210) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 36152 . 36210) (semantic-list #("(BOOST_PROTO_MAX_ARITY, BOOST_PROTO_EXTENDS_CHILD, ~)" 0 1 (macros (("Domain" TYPENAME "typename" 36194 . 36202) ("Derived" symbol "Derived" 36185 . 36192) ("Expr" symbol "Expr" 36179 . 36183)))) 36152 . 36210) (symbol "BOOST_PP_REPEAT" 36152 . 36210) (punctuation "=" 36152 . 36210) (symbol "proto_arity_c" 36152 . 36210) (LONG "long" 36152 . 36210) (CONST "const" 36152 . 36210) (STATIC "static" 36152 . 36210) (punctuation ":" 36152 . 36210) (punctuation ":" 36152 . 36210) (TYPENAME "typename" 36152 . 36210) (TYPEDEF "typedef" 36152 . 36210) (semantic-list #("(Domain)" 0 1 (macros (("Domain" TYPENAME "typename" 36194 . 36202) ("Derived" symbol "Derived" 36185 . 36192) ("Expr" symbol "Expr" 36179 . 36183)))) 36152 . 36210) (symbol "BOOST_PROTO_REMOVE_TYPENAME" 36152 . 36210) (TYPEDEF "typedef" 36152 . 36210))
      :lexical-table 
        '(("BOOST_PROTO_TEMPLATE_NO_" (spp-arg-list ("Z" "N") 2426 . 2432))
          ("BOOST_PROTO_BASIC_EXTENDS" (spp-arg-list ("Expr" "Derived" "Domain") 13459 . 13482) . 
              ((symbol "BOOST_PROTO_BASIC_EXTENDS_" 13532 . 13558) (semantic-list "(Expr, Derived, Domain)" 13558 . 13581) (TYPEDEF "typedef" 13634 . 13641) (VOID "void" 13642 . 13646) (symbol "proto_is_aggregate_" 13647 . 13666) (punctuation ";" 13666 . 13667)))
          ("BOOST_PROTO_EXTENDS_ASSIGN_IMPL_" (spp-arg-list ("ThisConst" "ThatConst") 18012 . 18034) . 
              ((TEMPLATE "template" 18078 . 18086) (punctuation "<" 18086 . 18087) (TYPENAME "typename" 18087 . 18095) (symbol "A" 18096 . 18097) (punctuation ">" 18097 . 18098) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 18180 . 18210) (symbol "BOOST_FORCEINLINE" 18211 . 18228) (TYPENAME "typename" 18282 . 18290) (symbol "BOOST_PROTO_RESULT_OF" 18291 . 18312) (punctuation "<" 18312 . 18313) (symbol "proto_generator" 18388 . 18403) (semantic-list "(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 18403 . 19309) (punctuation ">" 19406 . 19407) (punctuation ":" 19407 . 19408) (punctuation ":" 19408 . 19409) (symbol "type" 19409 . 19413) (CONST "const" 19414 . 19419) (OPERATOR "operator" 19508 . 19516) (punctuation "=" 19517 . 19518) (semantic-list "(A ThatConst() &a)" 19518 . 19536) (symbol "ThisConst" 19537 . 19546) (semantic-list "()" 19546 . 19548) (semantic-list "{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 19610 . 21245)))
          ("BOOST_PROTO_EXTENDS_USING_ASSIGN_NON_DEPENDENT" (spp-arg-list ("Derived") 33984 . 33993) . 
              ((TYPEDEF "typedef" 34036 . 34043) (symbol "Derived" 34044 . 34051) (punctuation ":" 34051 . 34052) (punctuation ":" 34052 . 34053) (symbol "proto_extends" 34053 . 34066) (symbol "proto_extends" 34067 . 34080) (punctuation ";" 34080 . 34081) (USING "using" 34138 . 34143) (symbol "proto_extends" 34144 . 34157) (punctuation ":" 34157 . 34158) (punctuation ":" 34158 . 34159) (OPERATOR "operator" 34159 . 34167) (punctuation "=" 34168 . 34169) (punctuation ";" 34169 . 34170) (symbol "BOOST_PROTO_EXTENDS_COPY_ASSIGN_" 34240 . 34272) (semantic-list "(Derived, BOOST_PP_EMPTY)" 34272 . 34297)))
          ("BOOST_PROTO_DEFINE_FUN_OP" (spp-arg-list ("Z" "N" "DATA") 8389 . 8401) . 
              ((symbol "BOOST_PROTO_DEFINE_FUN_OP_CONST" 8462 . 8493) (semantic-list "(Z, N, DATA)" 8493 . 8505) (symbol "BOOST_PROTO_DEFINE_FUN_OP_NON_CONST" 8564 . 8599) (semantic-list "(Z, N, DATA)" 8599 . 8611)))
          ("BOOST_PROTO_EXTENDS_ASSIGN_NON_CONST_" (spp-arg-list nil 21721 . 21723) . 
              ((symbol "BOOST_PROTO_EXTENDS_ASSIGN_IMPL_" 21782 . 21814) (semantic-list "(BOOST_PP_EMPTY, BOOST_PP_EMPTY)" 21814 . 21846) (symbol "BOOST_PROTO_EXTENDS_ASSIGN_IMPL_" 21884 . 21916) (semantic-list "(BOOST_PP_EMPTY, BOOST_PROTO_CONST)" 21916 . 21951)))
          ("BOOST_PROTO_EXTENDS_SUBSCRIPT_CONST" (spp-arg-list nil 26741 . 26743) . 
              ((symbol "BOOST_PROTO_EXTENDS_SUBSCRIPT_IMPL_" 26804 . 26839) (semantic-list "(BOOST_PROTO_CONST, BOOST_PP_EMPTY)" 26839 . 26874) (symbol "BOOST_PROTO_EXTENDS_SUBSCRIPT_IMPL_" 26906 . 26941) (semantic-list "(BOOST_PROTO_CONST, BOOST_PROTO_CONST)" 26941 . 26979)))
          ("BOOST_PROTO_EXTENDS_FUNCTION_" (spp-arg-list nil 27733 . 27735) . 
              ((TEMPLATE "template" 27802 . 27810) (punctuation "<" 27810 . 27811) (TYPENAME "typename" 27811 . 27819) (symbol "Sig" 27820 . 27823) (punctuation ">" 27823 . 27824) (STRUCT "struct" 27904 . 27910) (symbol "result" 27911 . 27917) (semantic-list "{                                                                                           \\
            typedef                                                                                 \\
                typename BOOST_PROTO_RESULT_OF<                                                     \\
                    proto_generator(                                                                \\
                        typename boost::proto::result_of::funop<                                    \\
                            Sig                                                                     \\
                          , proto_derived_expr                                                      \\
                          , proto_domain                                                            \\
                        >::type                                                                     \\
                    )                                                                               \\
                >::type const                                                                       \\
            type;                                                                                   \\
        }" 28006 . 29231) (punctuation ";" 29231 . 29232)))
          ("BOOST_PROTO_EXTENDS_FUNCTION_CONST" (spp-arg-list nil 29434 . 29436) . 
              ((symbol "BOOST_PROTO_EXTENDS_FUNCTION_" 29498 . 29527) (semantic-list "()" 29527 . 29529) (symbol "BOOST_PROTO_DEFINE_FUN_OP_VARIADIC_IMPL_" 29600 . 29640) (semantic-list "(BOOST_PROTO_CONST)" 29640 . 29659)))
          ("BOOST_PROTO_ADDROF" (spp-arg-list ("x") 1804 . 1807) . ((semantic-list "((char const volatile*)boost::addressof(x))" 1808 . 1851)))
          ("BOOST_PROTO_TYPENAME" (spp-arg-list nil 2221 . 2223) . ((TYPENAME "typename" 2224 . 2232)))
          ("BOOST_PROTO_EXTENDS_ASSIGN_CONST" (spp-arg-list nil 22356 . 22358) . 
              ((symbol "BOOST_PROTO_EXTENDS_COPY_ASSIGN_" 22422 . 22454) (semantic-list "(proto_derived_expr, BOOST_PROTO_TYPENAME)" 22454 . 22496) (symbol "BOOST_PROTO_EXTENDS_ASSIGN_CONST_" 22524 . 22557) (semantic-list "()" 22557 . 22559)))
          ("BOOST_PROTO_EXTENDS_MEMBER_" (spp-arg-list ("R" "DOMAIN" "ELEM") 40007 . 40024) . 
              ((symbol "boost" 40082 . 40087) (punctuation ":" 40087 . 40088) (punctuation ":" 40088 . 40089) (symbol "proto" 40089 . 40094) (punctuation ":" 40094 . 40095) (punctuation ":" 40095 . 40096) (symbol "exprns_" 40096 . 40103) (punctuation ":" 40103 . 40104) (punctuation ":" 40104 . 40105) (symbol "virtual_member" 40105 . 40119) (punctuation "<" 40119 . 40120) (symbol "proto_derived_expr" 40192 . 40210) (punctuation "," 40296 . 40297) (symbol "BOOST_PP_TUPLE_ELEM" 40298 . 40317) (semantic-list "(2, 0, ELEM)" 40317 . 40329) (punctuation "," 40402 . 40403) (symbol "DOMAIN" 40404 . 40410) (punctuation ">" 40506 . 40507) (symbol "BOOST_PP_TUPLE_ELEM" 40508 . 40527) (semantic-list "(2, 1, ELEM)" 40527 . 40539) (punctuation ";" 40539 . 40540)))
          ("BOOST_PROTO_EXTENDS_MEMBERS" (spp-arg-list ("SEQ") 41493 . 41498) . ((symbol "BOOST_PROTO_EXTENDS_MEMBERS_WITH_DOMAIN" 41568 . 41607) (semantic-list "(SEQ, proto_domain)" 41607 . 41626)))
          ("BOOST_PROTO_CONST" (spp-arg-list nil 2149 . 2151) . ((CONST "const" 2152 . 2157)))
          ("BOOST_PROTO_DEFINE_FUN_OP_VARIADIC_IMPL_" (spp-arg-list ("Const") 5212 . 5219) . 
              ((TEMPLATE "template" 5270 . 5278) (punctuation "<" 5278 . 5279) (TYPENAME "typename" 5279 . 5287) (punctuation "." 5287 . 5288) (punctuation "." 5288 . 5289) (punctuation "." 5289 . 5290) (symbol "A" 5291 . 5292) (punctuation ">" 5292 . 5293) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 5372 . 5402) (symbol "BOOST_FORCEINLINE" 5403 . 5420) (TYPENAME "typename" 5474 . 5482) (symbol "BOOST_PROTO_RESULT_OF" 5483 . 5504) (punctuation "<" 5504 . 5505) (symbol "proto_generator" 5580 . 5595) (semantic-list "(                                                                        \\
                typename boost::proto::result_of::funop<                                            \\
                    proto_derived_expr Const()(A const &...)                                        \\
                  , proto_derived_expr                                                              \\
                  , proto_domain                                                                    \\
                >::type                                                                             \\
            )" 5595 . 6193) (punctuation ">" 6290 . 6291) (punctuation ":" 6291 . 6292) (punctuation ":" 6292 . 6293) (symbol "type" 6293 . 6297) (CONST "const" 6298 . 6303) (OPERATOR "operator" 6392 . 6400) (semantic-list "()" 6401 . 6403) (semantic-list "(A const &...a)" 6403 . 6418) (symbol "Const" 6419 . 6424) (semantic-list "()" 6424 . 6426) (semantic-list "{                                                                                           \\
            typedef boost::proto::result_of::funop<                                                 \\
                proto_derived_expr Const()(A const &...)                                            \\
              , proto_derived_expr                                                                  \\
              , proto_domain                                                                        \\
            > funop;                                                                                \\
            return proto_generator()(                                                               \\
                funop::call(                                                                        \\
                    *static_cast<proto_derived_expr Const() *>(this)                                \\
                  , a...                                                                            \\
                )                                                                                   \\
            );                                                                                      \\
        }" 6494 . 7719)))
          ("BOOST_PROTO_DEFINE_FUN_OP_NON_CONST" (spp-arg-list ("Z" "N" "DATA") 8151 . 8163) . ((symbol "BOOST_PROTO_DEFINE_FUN_OP_IMPL_" 8214 . 8245) (semantic-list "(Z, N, DATA, BOOST_PP_EMPTY)" 8245 . 8273)))
          ("BOOST_PROTO_EXTENDS_ASSIGN_" (spp-arg-list nil 22031 . 22033) . 
              ((symbol "BOOST_PROTO_EXTENDS_ASSIGN_CONST_" 22102 . 22135) (semantic-list "()" 22135 . 22137) (symbol "BOOST_PROTO_EXTENDS_ASSIGN_NON_CONST_" 22204 . 22241) (semantic-list "()" 22241 . 22243)))
          ("BOOST_PROTO_EXTENDS_SUBSCRIPT_NON_CONST" (spp-arg-list nil 27065 . 27067) . 
              ((symbol "BOOST_PROTO_EXTENDS_SUBSCRIPT_IMPL_" 27124 . 27159) (semantic-list "(BOOST_PP_EMPTY, BOOST_PP_EMPTY)" 27159 . 27191) (symbol "BOOST_PROTO_EXTENDS_SUBSCRIPT_IMPL_" 27226 . 27261) (semantic-list "(BOOST_PP_EMPTY, BOOST_PROTO_CONST)" 27261 . 27296)))
          ("BOOST_PROTO_EXTENDS_ASSIGN_CONST_" (spp-arg-list nil 21397 . 21399) . 
              ((symbol "BOOST_PROTO_EXTENDS_ASSIGN_IMPL_" 21462 . 21494) (semantic-list "(BOOST_PROTO_CONST, BOOST_PP_EMPTY)" 21494 . 21529) (symbol "BOOST_PROTO_EXTENDS_ASSIGN_IMPL_" 21564 . 21596) (semantic-list "(BOOST_PROTO_CONST, BOOST_PROTO_CONST)" 21596 . 21634)))
          ("BOOST_PROTO_EXTENDS_SUBSCRIPT" (spp-arg-list nil 27375 . 27377) . 
              ((symbol "BOOST_PROTO_EXTENDS_SUBSCRIPT_CONST" 27444 . 27479) (semantic-list "()" 27479 . 27481) (symbol "BOOST_PROTO_EXTENDS_SUBSCRIPT_NON_CONST" 27546 . 27585) (semantic-list "()" 27585 . 27587)))
          ("BOOST_PROTO_EXTENDS_HPP_EAN_11_1_2006")
          ("BOOST_PROTO_EXTENDS_USING_ASSIGN" (spp-arg-list ("Derived") 33548 . 33557) . 
              ((TYPEDEF "typedef" 33614 . 33621) (TYPENAME "typename" 33622 . 33630) (symbol "Derived" 33631 . 33638) (punctuation ":" 33638 . 33639) (punctuation ":" 33639 . 33640) (symbol "proto_extends" 33640 . 33653) (symbol "proto_extends" 33654 . 33667) (punctuation ";" 33667 . 33668) (USING "using" 33716 . 33721) (symbol "proto_extends" 33722 . 33735) (punctuation ":" 33735 . 33736) (punctuation ":" 33736 . 33737) (OPERATOR "operator" 33737 . 33745) (punctuation "=" 33746 . 33747) (punctuation ";" 33747 . 33748) (symbol "BOOST_PROTO_EXTENDS_COPY_ASSIGN_" 33818 . 33850) (semantic-list "(Derived, BOOST_PROTO_TYPENAME)" 33850 . 33881)))
          ("BOOST_PROTO_DEFINE_FUN_OP_IMPL_" (spp-arg-list ("Z" "N" "DATA" "Const") 2507 . 2526) . 
              ((symbol "BOOST_PP_IF" 2574 . 2585) (semantic-list "(N, BOOST_PROTO_TEMPLATE_YES_, BOOST_PROTO_TEMPLATE_NO_)" 2585 . 2641) (semantic-list "(Z, N)" 2641 . 2647) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 2676 . 2706) (symbol "BOOST_FORCEINLINE" 2707 . 2724) (TYPENAME "typename" 2778 . 2786) (symbol "BOOST_PROTO_RESULT_OF" 2787 . 2808) (punctuation "<" 2808 . 2809) (symbol "proto_generator" 2884 . 2899) (semantic-list "(                                                                        \\
                typename boost::proto::result_of::BOOST_PP_CAT(funop, N)<                           \\
                    proto_derived_expr Const()                                                      \\
                  , proto_domain                                                                    \\
                    BOOST_PP_ENUM_TRAILING_PARAMS_Z(Z, N, const A)                                  \\
                >::type                                                                             \\
            )" 2899 . 3497) (punctuation ">" 3594 . 3595) (punctuation ":" 3595 . 3596) (punctuation ":" 3596 . 3597) (symbol "type" 3597 . 3601) (CONST "const" 3602 . 3607) (OPERATOR "operator" 3696 . 3704) (semantic-list "()" 3705 . 3707) (semantic-list "(BOOST_PP_ENUM_BINARY_PARAMS_Z(Z, N, A, const &a))" 3707 . 3757) (symbol "Const" 3758 . 3763) (semantic-list "()" 3763 . 3765) (semantic-list "{                                                                                           \\
            typedef boost::proto::result_of::BOOST_PP_CAT(funop, N)<                                \\
                proto_derived_expr Const()                                                          \\
              , proto_domain                                                                        \\
                BOOST_PP_ENUM_TRAILING_PARAMS_Z(Z, N, const A)                                      \\
            > funop;                                                                                \\
            return proto_generator()(                                                               \\
                funop::call(                                                                        \\
                    *static_cast<proto_derived_expr Const() *>(this)                                \\
                    BOOST_PP_ENUM_TRAILING_PARAMS_Z(Z, N, a)                                        \\
                )                                                                                   \\
            );                                                                                      \\
        }" 3798 . 5023)))
          ("BOOST_PROTO_EXTENDS_MEMBERS_WITH_DOMAIN" (spp-arg-list ("SEQ" "DOMAIN") 40762 . 40775) . 
              ((UNION "union" 40825 . 40830) (semantic-list "{                                                                                           \\
                char proto_member_union_start_;                                                         \\
                BOOST_PP_SEQ_FOR_EACH(BOOST_PROTO_EXTENDS_MEMBER_, DOMAIN, SEQ)                         \\
            }" 40931 . 41250) (punctuation ";" 41250 . 41251)))
          ("BOOST_PROTO_EXTENDS_COPY_ASSIGN_" (spp-arg-list ("This" "Typename") 17745 . 17761) . ((symbol "BOOST_PROTO_EXTENDS_COPY_ASSIGN_IMPL_" 17811 . 17848) (semantic-list "(This, BOOST_PROTO_CONST, Typename)" 17848 . 17883)))
          ("BOOST_PROTO_EXTENDS_FUNCTION" (spp-arg-list nil 30076 . 30078) . 
              ((symbol "BOOST_PROTO_EXTENDS_FUNCTION_" 30146 . 30175) (semantic-list "()" 30175 . 30177) (symbol "BOOST_PROTO_DEFINE_FUN_OP_VARIADIC_IMPL_" 30248 . 30288) (semantic-list "(BOOST_PP_EMPTY)" 30288 . 30304) (symbol "BOOST_PROTO_DEFINE_FUN_OP_VARIADIC_IMPL_" 30350 . 30390) (semantic-list "(BOOST_PROTO_CONST)" 30390 . 30409)))
          ("BOOST_PROTO_OFFSETOF" (spp-arg-list ("s" "m") 1915 . 1920) . ((semantic-list "(BOOST_PROTO_ADDROF((((s *)this)->m)) - BOOST_PROTO_ADDROF(*((s *)this)))" 1921 . 1994)))
          ("BOOST_PROTO_TEMPLATE_YES_" (spp-arg-list ("Z" "N") 2301 . 2307) . 
              ((TEMPLATE "template" 2308 . 2316) (punctuation "<" 2316 . 2317) (symbol "BOOST_PP_ENUM_PARAMS_Z" 2317 . 2339) (semantic-list "(Z, N, typename A)" 2339 . 2357) (punctuation ">" 2357 . 2358)))
          ("BOOST_PROTO_DEFINE_FUN_OP_CONST" (spp-arg-list ("Z" "N" "DATA") 7899 . 7911) . ((symbol "BOOST_PROTO_DEFINE_FUN_OP_IMPL_" 7966 . 7997) (semantic-list "(Z, N, DATA, BOOST_PROTO_CONST)" 7997 . 8028)))
          ("BOOST_PROTO_EXTENDS_FUNCTION_NON_CONST" (spp-arg-list nil 29762 . 29764) . 
              ((symbol "BOOST_PROTO_EXTENDS_FUNCTION_" 29822 . 29851) (semantic-list "()" 29851 . 29853) (symbol "BOOST_PROTO_DEFINE_FUN_OP_VARIADIC_IMPL_" 29924 . 29964) (semantic-list "(BOOST_PP_EMPTY)" 29964 . 29980)))
          ("BOOST_PROTO_EXTENDS_CHILD" (spp-arg-list ("Z" "N" "DATA") 8739 . 8751) . 
              ((TYPEDEF "typedef" 8812 . 8819) (TYPENAME "typename" 8918 . 8926) (symbol "proto_base_expr" 8927 . 8942) (punctuation ":" 8942 . 8943) (punctuation ":" 8943 . 8944) (symbol "BOOST_PP_CAT" 8944 . 8956) (semantic-list "(proto_child, N)" 8956 . 8972) (symbol "BOOST_PP_CAT" 9016 . 9028) (semantic-list "(proto_child, N)" 9028 . 9044) (punctuation ";" 9044 . 9045)))
          ("BOOST_PROTO_BASIC_EXTENDS_" (spp-arg-list ("Expr" "Derived" "Domain") 9162 . 9185) . 
              ((symbol "Expr" 9234 . 9238) (symbol "proto_expr_" 9239 . 9250) (punctuation ";" 9250 . 9251) (TYPEDEF "typedef" 9438 . 9445) (symbol "Expr" 9446 . 9450) (symbol "proto_base_expr_" 9451 . 9467) (punctuation ";" 9467 . 9468) (TYPEDEF "typedef" 9540 . 9547) (TYPENAME "typename" 9548 . 9556) (symbol "proto_base_expr_" 9557 . 9573) (punctuation ":" 9573 . 9574) (punctuation ":" 9574 . 9575) (symbol "proto_base_expr" 9575 . 9590) (symbol "proto_base_expr" 9591 . 9606) (punctuation ";" 9606 . 9607) (TYPEDEF "typedef" 9642 . 9649) (symbol "BOOST_PROTO_REMOVE_TYPENAME" 9650 . 9677) (semantic-list "(Domain)" 9677 . 9685) (symbol "proto_domain" 9686 . 9698) (punctuation ";" 9698 . 9699) (TYPEDEF "typedef" 9744 . 9751) (symbol "Derived" 9752 . 9759) (symbol "proto_derived_expr" 9760 . 9778) (punctuation ";" 9778 . 9779) (TYPEDEF "typedef" 9846 . 9853) (symbol "Domain" 9854 . 9860) (punctuation ":" 9860 . 9861) (punctuation ":" 9861 . 9862) (symbol "proto_generator" 9862 . 9877) (symbol "proto_generator" 9878 . 9893) (punctuation ";" 9893 . 9894) (TYPEDEF "typedef" 9948 . 9955) (TYPENAME "typename" 9956 . 9964) (symbol "proto_base_expr" 9965 . 9980) (punctuation ":" 9980 . 9981) (punctuation ":" 9981 . 9982) (symbol "proto_tag" 9982 . 9991) (symbol "proto_tag" 9992 . 10001) (punctuation ";" 10001 . 10002) (TYPEDEF "typedef" 10050 . 10057) (TYPENAME "typename" 10058 . 10066) (symbol "proto_base_expr" 10067 . 10082) (punctuation ":" 10082 . 10083) (punctuation ":" 10083 . 10084) (symbol "proto_args" 10084 . 10094) (symbol "proto_args" 10095 . 10105) (punctuation ";" 10105 . 10106) (TYPEDEF "typedef" 10152 . 10159) (TYPENAME "typename" 10160 . 10168) (symbol "proto_base_expr" 10169 . 10184) (punctuation ":" 10184 . 10185) (punctuation ":" 10185 . 10186) (symbol "proto_arity" 10186 . 10197) (symbol "proto_arity" 10198 . 10209) (punctuation ";" 10209 . 10210) (TYPEDEF "typedef" 10254 . 10261) (TYPENAME "typename" 10262 . 10270) (symbol "proto_base_expr" 10271 . 10286) (punctuation ":" 10286 . 10287) (punctuation ":" 10287 . 10288) (symbol "proto_grammar" 10288 . 10301) (symbol "proto_grammar" 10302 . 10315) (punctuation ";" 10315 . 10316) (TYPEDEF "typedef" 10356 . 10363) (TYPENAME "typename" 10364 . 10372) (symbol "proto_base_expr" 10373 . 10388) (punctuation ":" 10388 . 10389) (punctuation ":" 10389 . 10390) (symbol "address_of_hack_type_" 10390 . 10411) (symbol "proto_address_of_hack_type_" 10412 . 10439) (punctuation ";" 10439 . 10440) (TYPEDEF "typedef" 10458 . 10465) (VOID "void" 10466 . 10470) (symbol "proto_is_expr_" 10471 . 10485) (punctuation ";" 10485 . 10486) (STATIC "static" 10560 . 10566) (CONST "const" 10567 . 10572) (LONG "long" 10573 . 10577) (symbol "proto_arity_c" 10578 . 10591) (punctuation "=" 10592 . 10593) (symbol "proto_base_expr" 10594 . 10609) (punctuation ":" 10609 . 10610) (punctuation ":" 10610 . 10611) (symbol "proto_arity_c" 10611 . 10624) (punctuation ";" 10624 . 10625) (TYPEDEF "typedef" 10662 . 10669) (symbol "boost" 10670 . 10675) (punctuation ":" 10675 . 10676) (punctuation ":" 10676 . 10677) (symbol "proto" 10677 . 10682) (punctuation ":" 10682 . 10683) (punctuation ":" 10683 . 10684) (symbol "tag" 10684 . 10687) (punctuation ":" 10687 . 10688) (punctuation ":" 10688 . 10689) (symbol "proto_expr" 10689 . 10699) (punctuation "<" 10699 . 10700) (symbol "proto_tag" 10700 . 10709) (punctuation "," 10709 . 10710) (symbol "proto_domain" 10711 . 10723) (punctuation ">" 10723 . 10724) (symbol "fusion_tag" 10725 . 10735) (punctuation ";" 10735 . 10736) (symbol "BOOST_PP_REPEAT" 10764 . 10779) (semantic-list "(BOOST_PROTO_MAX_ARITY, BOOST_PROTO_EXTENDS_CHILD, ~)" 10779 . 10832) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 10968 . 10998) (symbol "BOOST_FORCEINLINE" 10999 . 11016) (STATIC "static" 11070 . 11076) (symbol "proto_derived_expr" 11077 . 11095) (CONST "const" 11096 . 11101) (symbol "make" 11102 . 11106) (semantic-list "(Expr const &e)" 11106 . 11121) (semantic-list "{                                                                                           \\
            proto_derived_expr that = {e};                                                          \\
            return that;                                                                            \\
        }" 11172 . 11479) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 11682 . 11712) (symbol "BOOST_FORCEINLINE" 11713 . 11730) (symbol "proto_base_expr" 11784 . 11799) (punctuation "&" 11800 . 11801) (symbol "proto_base" 11801 . 11811) (semantic-list "()" 11811 . 11813) (semantic-list "{                                                                                           \\
            return this->proto_expr_.proto_base();                                                  \\
        }" 11886 . 12091) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 12294 . 12324) (symbol "BOOST_FORCEINLINE" 12325 . 12342) (symbol "proto_base_expr" 12396 . 12411) (CONST "const" 12412 . 12417) (punctuation "&" 12418 . 12419) (symbol "proto_base" 12419 . 12429) (semantic-list "()" 12429 . 12431) (CONST "const" 12432 . 12437) (semantic-list "{                                                                                           \\
            return this->proto_expr_.proto_base();                                                  \\
        }" 12498 . 12703) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 12906 . 12936) (symbol "BOOST_FORCEINLINE" 12937 . 12954) (OPERATOR "operator" 13008 . 13016) (symbol "proto_address_of_hack_type_" 13017 . 13044) (semantic-list "()" 13044 . 13046) (CONST "const" 13047 . 13052) (semantic-list "{                                                                                           \\
            return boost::addressof(this->proto_base().child0);                                     \\
        }" 13110 . 13315)))
          ("BOOST_PROTO_EXTENDS_COPY_ASSIGN_IMPL_" (spp-arg-list ("This" "Const" "Typename") 13808 . 13831) . 
              ((symbol "BOOST_PROTO_DISABLE_MSVC_C4522" 13869 . 13899) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 13971 . 14001) (symbol "BOOST_FORCEINLINE" 14002 . 14019) (symbol "Typename" 14073 . 14081) (semantic-list "()" 14081 . 14083) (symbol "BOOST_PROTO_RESULT_OF" 14084 . 14105) (punctuation "<" 14105 . 14106) (symbol "Typename" 14179 . 14187) (semantic-list "()" 14187 . 14189) (symbol "This" 14190 . 14194) (punctuation ":" 14194 . 14195) (punctuation ":" 14195 . 14196) (symbol "proto_generator" 14196 . 14211) (semantic-list "(                                                       \\
                Typename() boost::proto::base_expr<                                                 \\
                    Typename() This::proto_domain                                                   \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        This &                                                                      \\
                      , This Const() &                                                              \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 14211 . 15098) (punctuation ">" 15195 . 15196) (punctuation ":" 15196 . 15197) (punctuation ":" 15197 . 15198) (symbol "type" 15198 . 15202) (CONST "const" 15203 . 15208) (OPERATOR "operator" 15297 . 15305) (punctuation "=" 15306 . 15307) (semantic-list "(This Const() &a)" 15307 . 15324) (semantic-list "{                                                                                           \\
            typedef                                                                                 \\
                Typename() boost::proto::base_expr<                                                 \\
                    Typename() This::proto_domain                                                   \\
                  , boost::proto::tag::assign                                                       \\
                  , boost::proto::list2<                                                            \\
                        This &                                                                      \\
                      , This Const() &                                                              \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *this                                                                               \\
              , a                                                                                   \\
            };                                                                                      \\
            return Typename() This::proto_generator()(that);                                        \\
        }" 15399 . 17032)))
          ("BOOST_PROTO_EXTENDS_ASSIGN_NON_CONST" (spp-arg-list nil 22680 . 22682) . 
              ((symbol "BOOST_PROTO_EXTENDS_COPY_ASSIGN_" 22742 . 22774) (semantic-list "(proto_derived_expr, BOOST_PROTO_TYPENAME)" 22774 . 22816) (symbol "BOOST_PROTO_EXTENDS_ASSIGN_NON_CONST_" 22844 . 22881) (semantic-list "()" 22881 . 22883)))
          ("BOOST_PROTO_EXTENDS_ASSIGN" (spp-arg-list nil 22990 . 22992) . 
              ((symbol "BOOST_PROTO_EXTENDS_COPY_ASSIGN_" 23062 . 23094) (semantic-list "(proto_derived_expr, BOOST_PROTO_TYPENAME)" 23094 . 23136) (symbol "BOOST_PROTO_EXTENDS_ASSIGN_" 23164 . 23191) (semantic-list "()" 23191 . 23193)))
          ("BOOST_PROTO_EXTENDS_SUBSCRIPT_IMPL_" (spp-arg-list ("ThisConst" "ThatConst") 23357 . 23379) . 
              ((TEMPLATE "template" 23420 . 23428) (punctuation "<" 23428 . 23429) (TYPENAME "typename" 23429 . 23437) (symbol "A" 23438 . 23439) (punctuation ">" 23439 . 23440) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 23522 . 23552) (symbol "BOOST_FORCEINLINE" 23553 . 23570) (TYPENAME "typename" 23624 . 23632) (symbol "BOOST_PROTO_RESULT_OF" 23633 . 23654) (punctuation "<" 23654 . 23655) (symbol "proto_generator" 23730 . 23745) (semantic-list "(                                                                        \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            )" 23745 . 24651) (punctuation ">" 24748 . 24749) (punctuation ":" 24749 . 24750) (punctuation ":" 24750 . 24751) (symbol "type" 24751 . 24755) (CONST "const" 24756 . 24761) (OPERATOR "operator" 24850 . 24858) (semantic-list "[]" 24859 . 24861) (semantic-list "(A ThatConst() &a)" 24861 . 24879) (symbol "ThisConst" 24880 . 24889) (semantic-list "()" 24889 . 24891) (semantic-list "{                                                                                           \\
            typedef                                                                                 \\
                typename boost::proto::base_expr<                                                   \\
                    proto_domain                                                                    \\
                  , boost::proto::tag::subscript                                                    \\
                  , boost::proto::list2<                                                            \\
                        proto_derived_expr ThisConst() &                                            \\
                      , typename boost::proto::result_of::as_child<A ThatConst(), proto_domain>::type \\
                    >                                                                               \\
                >::type                                                                             \\
            that_type;                                                                              \\
            that_type const that = {                                                                \\
                *static_cast<proto_derived_expr ThisConst() *>(this)                                \\
              , boost::proto::as_child<proto_domain>(a)                                             \\
            };                                                                                      \\
            return proto_generator()(that);                                                         \\
        }" 24952 . 26587)))
          ("BOOST_PROTO_EXTENDS" (spp-arg-list ("Expr" "Derived" "Domain") 33011 . 33034) . 
              ((symbol "BOOST_PROTO_BASIC_EXTENDS" 33090 . 33115) (semantic-list "(Expr, Derived, Domain)" 33115 . 33138) (symbol "BOOST_PROTO_EXTENDS_ASSIGN" 33192 . 33218) (semantic-list "()" 33218 . 33220) (symbol "BOOST_PROTO_EXTENDS_SUBSCRIPT" 33294 . 33323) (semantic-list "()" 33323 . 33325) (symbol "BOOST_PROTO_EXTENDS_FUNCTION" 33396 . 33424) (semantic-list "()" 33424 . 33426)))
          )
)
    (semanticdb-table "proto_fwd.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_FWD_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [419 453])
            ("cstddef" include (:system-flag t) nil [455 473])
            ("climits" include (:system-flag t) nil [474 492])
            ("boost/config.hpp" include (:system-flag t) nil [493 520])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [521 559])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [560 597])
            ("boost/preprocessor/arithmetic/inc.hpp" include (:system-flag t) nil [598 646])
            ("boost/preprocessor/punctuation/comma.hpp" include (:system-flag t) nil [647 698])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [699 755])
            ("boost/preprocessor/repetition/enum_params_with_a_default.hpp" include (:system-flag t) nil [756 827])
            ("boost/preprocessor/repetition/enum_trailing_binary_params.hpp" include (:system-flag t) nil [828 900])
            ("boost/preprocessor/repetition/repeat_from_to.hpp" include (:system-flag t) nil [901 960])
            ("boost/ref.hpp" include (:system-flag t) nil [961 985])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [986 1015])
            ("boost/type_traits/remove_const.hpp" include (:system-flag t) nil [1016 1061])
            ("boost/type_traits/remove_reference.hpp" include (:system-flag t) nil [1062 1111])
            ("boost/mpl/aux_/config/ttp.hpp" include (:system-flag t) nil [1112 1152])
            ("boost/utility/result_of.hpp" include (:system-flag t) nil [1153 1191])
            ("BOOST_PROTO_MAX_ARITY" variable (:constant-flag t) nil [1232 1253])
            ("BOOST_PROTO_MAX_LOGICAL_ARITY" variable (:constant-flag t) nil [1312 1341])
            ("BOOST_PROTO_MAX_FUNCTION_CALL_ARITY" variable (:constant-flag t) nil [1406 1441])
            ("BOOST_PROTO_DISABLE_IF_IS_CONST" variable (:constant-flag t) nil [2809 2840])
            ("BOOST_PROTO_DISABLE_IF_IS_FUNCTION" variable (:constant-flag t) nil [3163 3197])
            ("BOOST_PROTO_RESULT_OF" variable (:constant-flag t) nil [3874 3895])
            ("BOOST_PROTO_RETURN_TYPE_STRICT_LOOSE" variable (:constant-flag t) nil [4241 4277])
            ("BOOST_PROTO_DISABLE_MSVC_C4522" variable (:constant-flag t) nil [4715 4745])
            ("BOOST_PROTO_DISABLE_MSVC_C4714" variable (:constant-flag t) nil [4756 4786])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("yes_type" type
                                       (:typedef ("char")
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [4866 4888])
                                    ("sized_type" type
                                       (:template 
                                          ( ("int" type nil nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [4934 5033])
                                    ("dont_care" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [5043 5060])
                                    ("undefined" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [5069 5086])
                                    ("not_a_valid_type" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [5119 5143])
                                    ("private_type_" type
                                       (:members 
                                          ( ("," function
                                               (:prototype-flag t
                                                :operator-flag t
                                                :arguments 
                                                  ( ("" variable (:type "int") (reparse-symbol arg-sub-list) [5221 5225]))                                                  
                                                :type ("private_type_" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [5196 5232]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [5153 5243])
                                    ("uncvref" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5319 5334]))                                          )
                                        (reparse-symbol namespacesubparts) [5253 5345])
                                    ("uncvref" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5430 5445]))                                          
                                        :template-specifier 
                                          ( ("T" type (:constant-flag t) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5355 5456])
                                    ("uncvref" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5537 5552]))                                          
                                        :template-specifier 
                                          ( ("T" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5466 5563])
                                    ("uncvref" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [5650 5665]))                                          
                                        :template-specifier 
                                          ( ("T" type
                                               (:reference 1
                                                :constant-flag t)
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5573 5676])
                                    ("T" function (:type "int") (reparse-symbol namespacesubparts) [5877 5885])
                                    ("ignore" type
                                       (:members 
                                          ( ("ignore" function
                                               (:constructor-flag t
                                                :type ("ignore" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [6120 6143])
                                            ("ignore" function
                                               (:template 
                                                  ( ("T" type (:type "class") nil nil))                                                  
                                                :type ("ignore" type (:type "struct") nil nil)
                                                :arguments 
                                                  ( ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [6197 6207]))                                                  
                                                :constructor-flag t)
                                                (reparse-symbol classsubparts) [6157 6222]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [6084 6233])
                                    ("BOOST_PROTO_UNCVREF" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6289 6308])
                                    ("_default" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [6503 6519])
                                    ("not_a_domain" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [6529 6549])
                                    ("not_a_grammar" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [6558 6579])
                                    ("not_a_generator" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [6588 6611])
                                    ("is_transform_" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [6672 6693])
                                    ("is_aggregate_" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [6754 6775])
                                    ("flat_view" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [6785 6834]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [4835 6840])
                            ("ignore" type
                               (:typedef ("detail::ignore" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [6846 6882])
                            ("argsns_" type
                               (:members 
                                  ( ("term" type
                                       (:template 
                                          ( ("Arg0" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [6920 6964])
                                    ("M0" variable (:constant-flag t) (reparse-symbol namespacesubparts) [6982 6984]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [6888 7285])
                            ("argsns_" using (:type ("argsns_" type
                                 (:prototype t
                                  :type "namespace")
                                  nil nil)) (reparse-symbol namespacesubparts) [7291 7315])
                            ("tagns_" type
                               (:members 
                                  ( ("tag" type
                                       (:members 
                                          ( ("terminal" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7493 7509])
                                            ("unary_plus" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7522 7540])
                                            ("negate" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7553 7567])
                                            ("dereference" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7580 7599])
                                            ("complement" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7612 7630])
                                            ("address_of" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7643 7661])
                                            ("logical_not" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7674 7693])
                                            ("pre_inc" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7706 7721])
                                            ("pre_dec" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7734 7749])
                                            ("post_inc" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7762 7778])
                                            ("post_dec" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7791 7807])
                                            ("shift_left" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7821 7839])
                                            ("shift_right" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7852 7871])
                                            ("multiplies" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7884 7902])
                                            ("divides" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7915 7930])
                                            ("modulus" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7943 7958])
                                            ("plus" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7971 7983])
                                            ("minus" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [7996 8009])
                                            ("less" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8022 8034])
                                            ("greater" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8047 8062])
                                            ("less_equal" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8075 8093])
                                            ("greater_equal" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8106 8127])
                                            ("equal_to" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8140 8156])
                                            ("not_equal_to" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8169 8189])
                                            ("logical_or" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8202 8220])
                                            ("logical_and" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8233 8252])
                                            ("bitwise_and" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8265 8284])
                                            ("bitwise_or" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8297 8315])
                                            ("bitwise_xor" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8328 8347])
                                            ("comma" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8360 8373])
                                            ("mem_ptr" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8386 8401])
                                            ("assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8415 8429])
                                            ("shift_left_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8442 8467])
                                            ("shift_right_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8480 8506])
                                            ("multiplies_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8519 8544])
                                            ("divides_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8557 8579])
                                            ("modulus_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8592 8614])
                                            ("plus_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8627 8646])
                                            ("minus_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8659 8679])
                                            ("bitwise_and_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8692 8718])
                                            ("bitwise_or_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8731 8756])
                                            ("bitwise_xor_assign" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8769 8795])
                                            ("subscript" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8808 8825])
                                            ("member" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8838 8852])
                                            ("if_else_" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8865 8881])
                                            ("function" type
                                               (:prototype t
                                                :type "struct")
                                                (reparse-symbol namespacesubparts) [8894 8910])
                                            ("proto_expr" type
                                               (:template 
                                                  ( ("Tag" type (:type "class") nil nil)
                                                    ("Domain" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol namespacesubparts) [8951 9009])
                                            ("proto_expr_iterator" type
                                               (:template 
                                                  ( ("Tag" type (:type "class") nil nil)
                                                    ("Domain" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol namespacesubparts) [9022 9089])
                                            ("proto_flat_view" type
                                               (:template 
                                                  ( ("Tag" type (:type "class") nil nil)
                                                    ("Domain" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol namespacesubparts) [9102 9165]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [7457 9175]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [7426 9181])
                            ("tagns_" using (:type ("tagns_" type
                                 (:prototype t
                                  :type "namespace")
                                  nil nil)) (reparse-symbol namespacesubparts) [9187 9210])
                            ("tag_of" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [9216 9258])
                            ("_" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9365 9374])
                            ("default_generator" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9481 9506])
                            ("basic_default_generator" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9512 9543])
                            ("generator" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9596 9613])
                            ("pod_generator" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9666 9687])
                            ("by_value_generator" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9693 9719])
                            ("compose_generators" type
                               (:template 
                                  ( ("First" type (:type "class") nil nil)
                                    ("Second" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [9725 9797])
                            ("wants_basic_expr" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9858 9882])
                            ("use_basic_expr" type
                               (:template 
                                  ( ("Generator" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [9888 9943])
                            ("domainns_" type
                               (:members 
                                  ( ("no_super_domain" type
                                       (:typedef ("detail::not_a_domain" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [10084 10129])
                                    ("domain" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10312 10326])
                                    ("default_domain" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10336 10358])
                                    ("basic_default_domain" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10368 10396])
                                    ("deduce_domain" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10406 10427])
                                    ("base_expr" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10581 10598]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [10050 10604])
                            ("domainns_" using (:type ("domainns_" type
                                 (:prototype t
                                  :type "namespace")
                                  nil nil)) (reparse-symbol namespacesubparts) [10610 10636])
                            ("exprns_" type
                               (:members 
                                  ( ("basic_expr" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10847 10865])
                                    ("expr" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [10947 10959])
                                    ("extends" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [11142 11157])
                                    ("virtual_member" type
                                       (:template 
                                          ( ("This" type (:type "class") nil nil)
                                            ("Fun" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [11167 11252])
                                    ("is_proto_expr" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [11270 11291]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [10743 11297])
                            ("exprns_::expr" using (:type ("exprns_::expr" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [11404 11424])
                            ("exprns_::basic_expr" using (:type ("exprns_::basic_expr" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [11429 11455])
                            ("exprns_::extends" using (:type ("exprns_::extends" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [11460 11483])
                            ("exprns_::is_proto_expr" using (:type ("exprns_::is_proto_expr" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [11488 11517])
                            ("or_" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [11622 11633])
                            ("and_" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [11738 11750])
                            ("not_" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [11756 11799])
                            ("if_" type
                               (:template 
                                  ( ("Condition" type (:type "class") nil nil)
                                    ("Then" type (:type "class") nil nil)
                                    ("Else" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [11805 11894])
                            ("switch_" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [11963 11978])
                            ("exact" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [11984 12022])
                            ("convertible_to" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [12028 12075])
                            ("vararg" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [12081 12126])
                            ("pack" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [12132 12144])
                            ("N" variable
                               (:default-value "(INT_MAX >> 10)"
                                :type "int")
                                (reparse-symbol namespacesubparts) [12241 12271])
                            ("context" type
                               (:members 
                                  ( ("null_context" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [12309 12329])
                                    ("null_eval" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [12423 12440])
                                    ("default_context" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [12450 12473])
                                    ("default_eval" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [12608 12628])
                                    ("callable_context" type
                                       (:template 
                                          ( ("Derived" type (:type "class") nil nil)
                                            ("DefaultCtx" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [12638 12736])
                                    ("callable_eval" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [12830 12851]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [12277 12857])
                            ("context::null_context" using (:type ("context::null_context" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [12863 12891])
                            ("context::null_eval" using (:type ("context::null_eval" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [12896 12921])
                            ("context::default_context" using (:type ("context::default_context" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [12926 12957])
                            ("context::default_eval" using (:type ("context::default_eval" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [12962 12990])
                            ("context::callable_context" using (:type ("context::callable_context" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [12995 13027])
                            ("context::callable_eval" using (:type ("context::callable_eval" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [13032 13061])
                            ("utility" type
                               (:members 
                                  ( ("literal" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13099 13177]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [13067 13183])
                            ("utility::literal" using (:type ("utility::literal" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [13189 13212])
                            ("result_of" type
                               (:members 
                                  ( ("as_expr" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13252 13330])
                                    ("as_child" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13340 13419])
                                    ("child" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [13490 13503])
                                    ("child_c" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13513 13568])
                                    ("left" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13578 13622])
                                    ("right" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13632 13677])
                                    ("deep_copy" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13687 13736])
                                    ("eval" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("Context" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13746 13808])
                                    ("make_expr" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [14107 14124])
                                    ("unpack_expr" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [14246 14265])
                                    ("as_env" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [14275 14318])
                                    ("has_env_var" type
                                       (:template 
                                          ( ("Env" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [14328 14392])
                                    ("env_var" type
                                       (:template 
                                          ( ("Env" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [14402 14462]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [13218 14468])
                            ("is_expr" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [14521 14536])
                            ("is_domain" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [14589 14606])
                            ("is_sub_domain_of" type
                               (:template 
                                  ( ("SubDomain" type (:type "class") nil nil)
                                    ("SuperDomain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [14612 14691])
                            ("is_env" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [14744 14758])
                            ("arity_of" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [14764 14808])
                            ("domain_of" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [14861 14878])
                            ("matches" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil)
                                    ("Grammar" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [14884 14945])
                            ("unary_expr" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("Arg" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15019 15078])
                            ("binary_expr" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("Left" type (:type "class") nil nil)
                                    ("Right" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15084 15161])
                            ("nary_expr" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [15272 15289])
                            ("terminal" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15381 15418])
                            ("unary_plus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15423 15462])
                            ("negate" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15467 15502])
                            ("dereference" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15507 15547])
                            ("complement" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15552 15591])
                            ("address_of" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15596 15635])
                            ("logical_not" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15640 15680])
                            ("pre_inc" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15685 15721])
                            ("pre_dec" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15726 15762])
                            ("post_inc" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15767 15804])
                            ("post_dec" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15809 15846])
                            ("shift_left" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15852 15903])
                            ("shift_right" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15908 15960])
                            ("multiplies" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [15965 16016])
                            ("divides" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16021 16069])
                            ("modulus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16074 16122])
                            ("plus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16127 16172])
                            ("minus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16177 16223])
                            ("less" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16228 16273])
                            ("greater" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16278 16326])
                            ("less_equal" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16331 16382])
                            ("greater_equal" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16387 16441])
                            ("equal_to" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16446 16495])
                            ("not_equal_to" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16500 16553])
                            ("logical_or" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16558 16609])
                            ("logical_and" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16614 16666])
                            ("bitwise_and" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16671 16723])
                            ("bitwise_or" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16728 16779])
                            ("bitwise_xor" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16784 16836])
                            ("comma" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16841 16887])
                            ("mem_ptr" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16892 16940])
                            ("assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16946 16993])
                            ("shift_left_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [16998 17056])
                            ("shift_right_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17061 17120])
                            ("multiplies_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17125 17183])
                            ("divides_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17188 17243])
                            ("modulus_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17248 17303])
                            ("plus_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17308 17360])
                            ("minus_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17365 17418])
                            ("bitwise_and_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17423 17482])
                            ("bitwise_or_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17487 17545])
                            ("bitwise_xor_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17550 17609])
                            ("subscript" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17614 17664])
                            ("member" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17669 17716])
                            ("if_else_" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil)
                                    ("V" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [17721 17782])
                            ("function" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [17879 17895])
                            ("functional" type
                               (:members 
                                  ( ("left" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [17936 17948])
                                    ("right" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [17957 17970])
                                    ("eval" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [17979 17991])
                                    ("deep_copy" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [18000 18017])
                                    ("as_expr" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18027 18093])
                                    ("as_child" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18103 18170])
                                    ("child" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [18226 18239])
                                    ("child_c" type
                                       (:template 
                                          ( ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18249 18289])
                                    ("as_env" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [18299 18313])
                                    ("has_env_var" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18323 18373])
                                    ("env_var" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18383 18429])
                                    ("make_expr" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18439 18520])
                                    ("unpack_expr" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18530 18613])
                                    ("make_terminal" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::terminal" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [18623 18681])
                                    ("make_unary_plus" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::unary_plus" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [18690 18750])
                                    ("make_negate" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::negate" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [18759 18815])
                                    ("make_dereference" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::dereference" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [18824 18885])
                                    ("make_complement" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::complement" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [18894 18954])
                                    ("make_address_of" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::address_of" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [18963 19023])
                                    ("make_logical_not" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::logical_not" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19032 19093])
                                    ("make_pre_inc" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::pre_inc" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19102 19159])
                                    ("make_pre_dec" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::pre_dec" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19168 19225])
                                    ("make_post_inc" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::post_inc" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19234 19292])
                                    ("make_post_dec" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::post_dec" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19301 19359])
                                    ("make_shift_left" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::shift_left" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19368 19428])
                                    ("make_shift_right" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::shift_right" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19437 19498])
                                    ("make_multiplies" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::multiplies" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19507 19567])
                                    ("make_divides" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::divides" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19576 19633])
                                    ("make_modulus" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::modulus" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19642 19699])
                                    ("make_plus" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::plus" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19708 19762])
                                    ("make_minus" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::minus" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19771 19826])
                                    ("make_less" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::less" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19835 19889])
                                    ("make_greater" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::greater" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19898 19955])
                                    ("make_less_equal" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::less_equal" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [19964 20024])
                                    ("make_greater_equal" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::greater_equal" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20033 20096])
                                    ("make_equal_to" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::equal_to" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20105 20163])
                                    ("make_not_equal_to" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::not_equal_to" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20172 20234])
                                    ("make_logical_or" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::logical_or" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20243 20303])
                                    ("make_logical_and" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::logical_and" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20312 20373])
                                    ("make_bitwise_and" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::bitwise_and" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20382 20443])
                                    ("make_bitwise_or" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::bitwise_or" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20452 20512])
                                    ("make_bitwise_xor" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::bitwise_xor" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20521 20582])
                                    ("make_comma" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::comma" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20591 20646])
                                    ("make_mem_ptr" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::mem_ptr" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20655 20712])
                                    ("make_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20721 20777])
                                    ("make_shift_left_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::shift_left_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20786 20853])
                                    ("make_shift_right_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::shift_right_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20862 20930])
                                    ("make_multiplies_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::multiplies_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [20939 21006])
                                    ("make_divides_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::divides_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21015 21079])
                                    ("make_modulus_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::modulus_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21088 21152])
                                    ("make_plus_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::plus_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21161 21222])
                                    ("make_minus_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::minus_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21231 21293])
                                    ("make_bitwise_and_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::bitwise_and_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21302 21370])
                                    ("make_bitwise_or_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::bitwise_or_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21379 21446])
                                    ("make_bitwise_xor_assign" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::bitwise_xor_assign" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21455 21523])
                                    ("make_subscript" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::subscript" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21532 21591])
                                    ("make_if_else" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::if_else_" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21600 21657])
                                    ("make_function" type
                                       (:typedef ("make_expr" type
                                             (:template-specifier 
                                                ( ("tag::function" type nil nil nil))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [21666 21724])
                                    ("flatten" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21734 21749])
                                    ("make_pair" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21758 21775])
                                    ("first" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21784 21797])
                                    ("second" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21806 21820])
                                    ("at" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21829 21839])
                                    ("pop_front" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21848 21865])
                                    ("push_front" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21874 21892])
                                    ("pop_back" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21901 21917])
                                    ("push_back" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21926 21943])
                                    ("reverse" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [21952 21967]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [17901 21973])
                            ("_flatten" type
                               (:typedef ("functional::flatten" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [21979 22020])
                            ("_make_pair" type
                               (:typedef ("functional::make_pair" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22025 22068])
                            ("_first" type
                               (:typedef ("functional::first" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22073 22112])
                            ("_second" type
                               (:typedef ("functional::second" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22117 22157])
                            ("_at" type
                               (:typedef ("functional::pop_front" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22162 22198])
                            ("_pop_front" type
                               (:typedef ("functional::pop_front" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22203 22246])
                            ("_push_front" type
                               (:typedef ("functional::push_front" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22251 22295])
                            ("_pop_back" type
                               (:typedef ("functional::pop_back" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22300 22342])
                            ("_push_back" type
                               (:typedef ("functional::push_back" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22347 22390])
                            ("_reverse" type
                               (:typedef ("functional::reverse" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22395 22436])
                            ("_eval" type
                               (:typedef ("functional::eval" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22441 22479])
                            ("_deep_copy" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [22484 22502])
                            ("_make_terminal" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::terminal" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22508 22578])
                            ("_make_unary_plus" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::unary_plus" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22583 22655])
                            ("_make_negate" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::negate" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22660 22728])
                            ("_make_dereference" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::dereference" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22733 22806])
                            ("_make_complement" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::complement" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22811 22883])
                            ("_make_address_of" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::address_of" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22888 22960])
                            ("_make_logical_not" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::logical_not" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [22965 23038])
                            ("_make_pre_inc" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::pre_inc" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23043 23112])
                            ("_make_pre_dec" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::pre_dec" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23117 23186])
                            ("_make_post_inc" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::post_inc" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23191 23261])
                            ("_make_post_dec" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::post_dec" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23266 23336])
                            ("_make_shift_left" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::shift_left" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23341 23413])
                            ("_make_shift_right" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::shift_right" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23418 23491])
                            ("_make_multiplies" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::multiplies" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23496 23568])
                            ("_make_divides" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::divides" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23573 23642])
                            ("_make_modulus" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::modulus" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23647 23716])
                            ("_make_plus" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::plus" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23721 23787])
                            ("_make_minus" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::minus" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23792 23859])
                            ("_make_less" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::less" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23864 23930])
                            ("_make_greater" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::greater" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [23935 24004])
                            ("_make_less_equal" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::less_equal" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24009 24081])
                            ("_make_greater_equal" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::greater_equal" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24086 24161])
                            ("_make_equal_to" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::equal_to" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24166 24236])
                            ("_make_not_equal_to" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::not_equal_to" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24241 24315])
                            ("_make_logical_or" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::logical_or" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24320 24392])
                            ("_make_logical_and" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::logical_and" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24397 24470])
                            ("_make_bitwise_and" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::bitwise_and" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24475 24548])
                            ("_make_bitwise_or" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::bitwise_or" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24553 24625])
                            ("_make_bitwise_xor" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::bitwise_xor" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24630 24703])
                            ("_make_comma" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::comma" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24708 24775])
                            ("_make_mem_ptr" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::mem_ptr" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24780 24849])
                            ("_make_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24854 24922])
                            ("_make_shift_left_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::shift_left_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [24927 25006])
                            ("_make_shift_right_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::shift_right_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25011 25091])
                            ("_make_multiplies_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::multiplies_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25096 25175])
                            ("_make_divides_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::divides_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25180 25256])
                            ("_make_modulus_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::modulus_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25261 25337])
                            ("_make_plus_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::plus_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25342 25415])
                            ("_make_minus_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::minus_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25420 25494])
                            ("_make_bitwise_and_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::bitwise_and_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25499 25579])
                            ("_make_bitwise_or_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::bitwise_or_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25584 25663])
                            ("_make_bitwise_xor_assign" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::bitwise_xor_assign" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25668 25748])
                            ("_make_subscript" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::subscript" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25753 25824])
                            ("_make_if_else" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::if_else_" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25829 25898])
                            ("_make_function" type
                               (:typedef ("functional::make_expr" type
                                     (:template-specifier 
                                        ( ("tag::function" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [25903 25973])
                            ("is_callable" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [25979 26023])
                            ("is_transform" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [26029 26074])
                            ("is_aggregate" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [26080 26125])
                            ("BOOST_PROTO_UNEXPR" variable (:constant-flag t) (reparse-symbol namespacesubparts) [26139 26157])
                            ("BOOST_PROTO_CALLABLE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [26200 26220])
                            ("BOOST_PROTO_AGGREGATE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [26268 26289])
                            ("BOOST_PROTO_USE_BASIC_EXPR" variable (:constant-flag t) (reparse-symbol namespacesubparts) [26338 26364])
                            ("callable" type
                               (:members 
                                  ( ("proto_is_callable_" type
                                       (:typedef ("void")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [26438 26458]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [26408 26467])
                            ("envns_" type
                               (:members 
                                  ( ("key_not_found" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [26504 26525])
                                    ("empty_env" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [26535 26552])
                                    ("empty_state" type
                                       (:typedef ("int")
                                        :type "typedef")
                                        (reparse-symbol namespacesubparts) [26562 26586])
                                    ("env" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Value" type (:type "class") nil nil)
                                            ("Base" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [26596 26681])
                                    ("data_type" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [26691 26708])
                                    ("transforms_type" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [26718 26741]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [26473 26747])
                            ("envns_::key_not_found" using (:type ("envns_::key_not_found" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [26753 26781])
                            ("envns_::empty_env" using (:type ("envns_::empty_env" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [26786 26810])
                            ("envns_::empty_state" using (:type ("envns_::empty_state" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [26815 26841])
                            ("envns_::env" using (:type ("envns_::env" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [26846 26864])
                            ("envns_::data_type" using (:type ("envns_::data_type" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [26869 26893])
                            ("envns_::transforms_type" using (:type ("envns_::transforms_type" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [26898 26928])
                            ("external_transform" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [26934 26960])
                            ("transform" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [27034 27051])
                            ("when" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil)
                                    ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27057 27124])
                            ("otherwise" type
                               (:template 
                                  ( ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27130 27174])
                            ("call" type
                               (:template 
                                  ( ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27180 27219])
                            ("make" type
                               (:template 
                                  ( ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27225 27264])
                            ("protect" type
                               (:template 
                                  ( ("PrimitiveTransform" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27270 27327])
                            ("noinvoke" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27333 27374])
                            ("lazy" type
                               (:template 
                                  ( ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27380 27419])
                            ("fold" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("State" type (:type "class") nil nil)
                                    ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27425 27499])
                            ("reverse_fold" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("State" type (:type "class") nil nil)
                                    ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27505 27587])
                            ("fold_tree" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("State" type (:type "class") nil nil)
                                    ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27708 27787])
                            ("reverse_fold_tree" type
                               (:template 
                                  ( ("Sequence" type (:type "class") nil nil)
                                    ("State" type (:type "class") nil nil)
                                    ("Fun" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27793 27880])
                            ("pass_through" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil)
                                    ("Domain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [27886 27970])
                            ("_default" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28026 28042])
                            ("_expr" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28048 28061])
                            ("_state" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28066 28080])
                            ("_data" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28085 28098])
                            ("_value" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28104 28118])
                            ("_void" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28124 28137])
                            ("integral_c" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("T" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28143 28191])
                            ("char_" type
                               (:template 
                                  ( ("char" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28197 28231])
                            ("int_" type
                               (:template 
                                  ( ("int" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28237 28269])
                            ("long_" type
                               (:template 
                                  ( ("long" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28275 28309])
                            ("size_t" type
                               (:template 
                                  ( ("std::size_t" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28315 28357])
                            ("_child_c" type
                               (:template 
                                  ( ("int" type nil nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28363 28399])
                            ("_child0" type
                               (:typedef ("_child_c" type
                                     (:template-specifier (("0"))
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [28405 28433])
                            ("_child1" type
                               (:typedef ("_child_c" type
                                     (:template-specifier (("1"))
                                      :type "class")
                                      nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [28438 28466])
                            ("_child" type
                               (:typedef ("_child0" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [28471 28498])
                            ("_left" type
                               (:typedef ("_child0" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [28503 28529])
                            ("_right" type
                               (:typedef ("_child1" type (:type "class") nil nil)
                                :type "typedef")
                                (reparse-symbol namespacesubparts) [28534 28561])
                            ("M0" variable (:constant-flag t) (reparse-symbol namespacesubparts) [28613 28615])
                            ("_byref" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28802 28816])
                            ("_byval" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28821 28835])
                            ("_env_var" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28841 28884])
                            ("_env" type
                               (:prototype t
                                :type "struct")
                                (reparse-symbol namespacesubparts) [28890 28902])
                            ("is_extension" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :prototype t)
                                (reparse-symbol namespacesubparts) [28908 28953])
                            ("exops" type
                               (:kind alias
                                :members 
                                  ( ("exprns_" type (:type "namespace") nil nil))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [28959 28985]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [4813 28988]))                  
                :type "namespace")
                nil [4795 28989]))          
      :file "proto_fwd.hpp"
      :pointmax 29024
      :fsize 29023
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((semantic-list 28700 . 28782) (symbol 28677 . 28700) (punctuation 28775 . 28776) (semantic-list 28732 . 28755) (number 28710 . 28711) (punctuation 28020 . 28021) (symbol 28012 . 28020) (punctuation 28011 . 28012) (punctuation 28010 . 28011) (symbol 28004 . 28010) (punctuation 28002 . 28003) (symbol 27994 . 28001) (TYPENAME 27985 . 27993) (punctuation 27984 . 27985) (TEMPLATE 27976 . 27984) (punctuation 27028 . 27029) (VOID 27024 . 27028) (punctuation 27022 . 27023) (symbol 27020 . 27021) (TYPENAME 27011 . 27019) (punctuation 27009 . 27010) (VOID 27005 . 27009) (punctuation 27003 . 27004) (symbol 26984 . 27002) (TYPENAME 26975 . 26983) (punctuation 26974 . 26975) (TEMPLATE 26966 . 26974) (semantic-list 26458 . 26460) (spp-arg-list nil 26438 . 26458) (punctuation 18216 . 18217) (punctuation 18214 . 18215) (number 18213 . 18214) (punctuation 18212 . 18213) (symbol 18207 . 18212) (punctuation 18206 . 18207) (punctuation 18205 . 18206) (symbol 18202 . 18205) (punctuation 18200 . 18201) (symbol 18198 . 18199) (TYPENAME 18189 . 18197) (punctuation 18188 . 18189) (TEMPLATE 18180 . 18188) (punctuation 17873 . 17874) (semantic-list 17832 . 17873) (symbol 17797 . 17832) (number "10" 17833 . 17854) (punctuation 17796 . 17797) (TEMPLATE 17788 . 17796) (punctuation 15266 . 15267) (semantic-list 15225 . 15266) (symbol 15190 . 15225) (number "10" 15226 . 15247) (punctuation 15188 . 15189) (symbol 15185 . 15188) (TYPENAME 15176 . 15184) (punctuation 15175 . 15176) (TEMPLATE 15167 . 15175) (punctuation 14855 . 14856) (VOID 14851 . 14855) (punctuation 14849 . 14850) (symbol 14844 . 14848) (TYPENAME 14835 . 14843) (punctuation 14833 . 14834) (symbol 14832 . 14833) (TYPENAME 14823 . 14831) (punctuation 14822 . 14823) (TEMPLATE 14814 . 14822) (punctuation 14738 . 14739) (VOID 14734 . 14738) (punctuation 14732 . 14733) (symbol 14727 . 14731) (TYPENAME 14718 . 14726) (punctuation 14716 . 14717) (symbol 14715 . 14716) (TYPENAME 14706 . 14714) (punctuation 14705 . 14706) (TEMPLATE 14697 . 14705) (punctuation 14583 . 14584) (VOID 14579 . 14583) (punctuation 14577 . 14578) (symbol 14572 . 14576) (TYPENAME 14563 . 14571) (punctuation 14561 . 14562) (symbol 14560 . 14561) (TYPENAME 14551 . 14559) (punctuation 14550 . 14551) (TEMPLATE 14542 . 14550) (punctuation 14515 . 14516) (VOID 14511 . 14515) (punctuation 14509 . 14510) (symbol 14504 . 14508) (TYPENAME 14495 . 14503) (punctuation 14493 . 14494) (symbol 14492 . 14493) (TYPENAME 14483 . 14491) (punctuation 14482 . 14483) (TEMPLATE 14474 . 14482) (punctuation 14236 . 14237) (VOID 14232 . 14236) (punctuation 14230 . 14231) (symbol 14225 . 14229) (TYPENAME 14216 . 14224) (punctuation 14214 . 14215) (VOID 14210 . 14214) (punctuation 14208 . 14209) (symbol 14193 . 14207) (TYPENAME 14184 . 14192) (punctuation 14182 . 14183) (symbol 14166 . 14182) (TYPENAME 14157 . 14165) (punctuation 14155 . 14156) (symbol 14152 . 14155) (TYPENAME 14143 . 14151) (punctuation 14142 . 14143) (TEMPLATE 14134 . 14142) (punctuation 14097 . 14098) (VOID 14084 . 14088) (punctuation 14082 . 14083) (symbol 14077 . 14081) (TYPENAME 14068 . 14076) (punctuation 14066 . 14067) (semantic-list 13933 . 14055) (symbol 13897 . 13933) (punctuation 14016 . 14017) (number "10" 13951 . 13972) (symbol 13874 . 13884) (punctuation 14016 . 14017) (number "10" 13951 . 13972) (TYPENAME 13865 . 13873) (punctuation 14016 . 14017) (number "10" 13951 . 13972) (punctuation 13863 . 13864) (symbol 13849 . 13852) (TYPENAME 13840 . 13848) (punctuation 13826 . 13827) (TEMPLATE 13818 . 13826) (punctuation 13480 . 13481) (punctuation 13478 . 13479) (number 13477 . 13478) (punctuation 13476 . 13477) (symbol 13471 . 13476) (punctuation 13470 . 13471) (punctuation 13469 . 13470) (symbol 13466 . 13469) (punctuation 13464 . 13465) (symbol 13462 . 13463) (TYPENAME 13453 . 13461) (punctuation 13451 . 13452) (symbol 13447 . 13451) (TYPENAME 13438 . 13446) (punctuation 13437 . 13438) (TEMPLATE 13429 . 13437) (punctuation 12820 . 12821) (symbol 12807 . 12820) (punctuation 12806 . 12807) (punctuation 12805 . 12806) (symbol 12801 . 12805) (punctuation 12799 . 12800) (symbol 12793 . 12798) (LONG 12788 . 12792) (punctuation 12786 . 12787) (symbol 12779 . 12786) (TYPENAME 12770 . 12778) (punctuation 12768 . 12769) (symbol 12764 . 12768) (TYPENAME 12755 . 12763) (punctuation 12754 . 12755) (TEMPLATE 12746 . 12754) (punctuation 12598 . 12599) (symbol 12585 . 12598) (punctuation 12584 . 12585) (punctuation 12583 . 12584) (symbol 12579 . 12583) (punctuation 12577 . 12578) (symbol 12571 . 12576) (LONG 12566 . 12570) (punctuation 12564 . 12565) (symbol 12555 . 12564) (punctuation 12554 . 12555) (punctuation 12553 . 12554) (symbol 12549 . 12553) (TYPENAME 12540 . 12548) (punctuation 12538 . 12539) (symbol 12534 . 12537) (TYPENAME 12525 . 12533) (punctuation 12523 . 12524) (symbol 12516 . 12523) (TYPENAME 12507 . 12515) (punctuation 12505 . 12506) (symbol 12501 . 12505) (TYPENAME 12492 . 12500) (punctuation 12491 . 12492) (TEMPLATE 12483 . 12491) (punctuation 12413 . 12414) (symbol 12400 . 12413) (punctuation 12399 . 12400) (punctuation 12398 . 12399) (symbol 12394 . 12398) (punctuation 12392 . 12393) (symbol 12386 . 12391) (LONG 12381 . 12385) (punctuation 12379 . 12380) (symbol 12372 . 12379) (TYPENAME 12363 . 12371) (punctuation 12361 . 12362) (symbol 12357 . 12361) (TYPENAME 12348 . 12356) (punctuation 12347 . 12348) (TEMPLATE 12339 . 12347) (punctuation 11957 . 11958) (semantic-list 11955 . 11957) (punctuation 11954 . 11955) (symbol 11953 . 11954) (punctuation 11952 . 11953) (symbol 11946 . 11952) (punctuation 11944 . 11945) (symbol 11934 . 11943) (TYPENAME 11925 . 11933) (punctuation 11923 . 11924) (symbol 11918 . 11923) (TYPENAME 11909 . 11917) (punctuation 11908 . 11909) (TEMPLATE 11900 . 11908) (punctuation 11732 . 11733) (semantic-list 11683 . 11732) (symbol 11648 . 11683) (number "10" 11684 . 11713) (punctuation 11647 . 11648) (TEMPLATE 11639 . 11647) (punctuation 11616 . 11617) (semantic-list 11567 . 11616) (symbol 11532 . 11567) (number "10" 11568 . 11597) (punctuation 11531 . 11532) (TEMPLATE 11523 . 11531) (punctuation 11132 . 11133) (symbol 11110 . 11123) (punctuation 11109 . 11110) (punctuation 11108 . 11109) (symbol 11104 . 11108) (punctuation 11102 . 11103) (symbol 11096 . 11101) (LONG 11091 . 11095) (punctuation 11089 . 11090) (symbol 11064 . 11078) (punctuation 11062 . 11063) (symbol 11055 . 11061) (TYPENAME 11046 . 11054) (punctuation 11044 . 11045) (symbol 11026 . 11033) (TYPENAME 11017 . 11025) (punctuation 11015 . 11016) (symbol 11000 . 11004) (TYPENAME 10991 . 10999) (punctuation 10977 . 10978) (TEMPLATE 10969 . 10977) (punctuation 10937 . 10938) (symbol 10932 . 10937) (punctuation 10931 . 10932) (punctuation 10930 . 10931) (symbol 10926 . 10930) (punctuation 10924 . 10925) (symbol 10918 . 10923) (LONG 10913 . 10917) (punctuation 10911 . 10912) (symbol 10907 . 10911) (TYPENAME 10898 . 10906) (punctuation 10896 . 10897) (symbol 10893 . 10896) (TYPENAME 10884 . 10892) (punctuation 10883 . 10884) (TEMPLATE 10875 . 10883) (punctuation 10837 . 10838) (symbol 10832 . 10837) (punctuation 10831 . 10832) (punctuation 10830 . 10831) (symbol 10826 . 10830) (punctuation 10824 . 10825) (symbol 10818 . 10823) (LONG 10813 . 10817) (punctuation 10811 . 10812) (symbol 10807 . 10811) (TYPENAME 10798 . 10806) (punctuation 10796 . 10797) (symbol 10793 . 10796) (TYPENAME 10784 . 10792) (punctuation 10783 . 10784) (TEMPLATE 10775 . 10783) (punctuation 10571 . 10572) (symbol 10566 . 10571) (punctuation 10565 . 10566) (punctuation 10564 . 10565) (punctuation 10563 . 10564) (symbol 10548 . 10563) (punctuation 10547 . 10548) (punctuation 10546 . 10547) (symbol 10540 . 10546) (TYPENAME 10531 . 10539) (punctuation 10530 . 10531) (symbol 10514 . 10530) (punctuation 10512 . 10513) (symbol 10497 . 10511) (BOOL 10492 . 10496) (punctuation 10490 . 10491) (symbol 10486 . 10490) (TYPENAME 10477 . 10485) (punctuation 10475 . 10476) (symbol 10472 . 10475) (TYPENAME 10463 . 10471) (punctuation 10461 . 10462) (symbol 10455 . 10461) (TYPENAME 10446 . 10454) (punctuation 10445 . 10446) (TEMPLATE 10437 . 10445) (punctuation 10302 . 10303) (symbol 10278 . 10293) (punctuation 10276 . 10277) (symbol 10265 . 10270) (TYPENAME 10256 . 10264) (punctuation 10254 . 10255) (symbol 10242 . 10243) (punctuation 10241 . 10242) (punctuation 10240 . 10241) (symbol 10235 . 10240) (punctuation 10233 . 10234) (symbol 10222 . 10229) (TYPENAME 10213 . 10221) (punctuation 10211 . 10212) (symbol 10183 . 10200) (punctuation 10181 . 10182) (symbol 10170 . 10179) (TYPENAME 10161 . 10169) (punctuation 10147 . 10148) (TEMPLATE 10139 . 10147) (punctuation 9852 . 9853) (VOID 9848 . 9852) (punctuation 9846 . 9847) (symbol 9841 . 9845) (TYPENAME 9832 . 9840) (punctuation 9830 . 9831) (symbol 9821 . 9830) (TYPENAME 9812 . 9820) (punctuation 9811 . 9812) (TEMPLATE 9803 . 9811) (punctuation 9660 . 9661) (symbol 9653 . 9660) (CLASS 9647 . 9652) (punctuation 9645 . 9646) (TYPENAME 9637 . 9645) (punctuation 9636 . 9637) (TEMPLATE 9628 . 9636) (punctuation 9627 . 9628) (TEMPLATE 9619 . 9627) (punctuation 9590 . 9591) (symbol 9583 . 9590) (CLASS 9577 . 9582) (punctuation 9575 . 9576) (TYPENAME 9567 . 9575) (punctuation 9566 . 9567) (TEMPLATE 9558 . 9566) (punctuation 9557 . 9558) (TEMPLATE 9549 . 9557) (semantic-list 7214 . 7261) (symbol 7191 . 7214) (punctuation 7259 . 7260) (semantic-list 7230 . 7253) (number 7215 . 7216) (punctuation 6744 . 6745) (VOID 6740 . 6744) (punctuation 6738 . 6739) (symbol 6733 . 6737) (TYPENAME 6724 . 6732) (punctuation 6722 . 6723) (symbol 6721 . 6722) (TYPENAME 6712 . 6720) (punctuation 6711 . 6712) (TEMPLATE 6703 . 6711) (punctuation 6662 . 6663) (VOID 6658 . 6662) (punctuation 6656 . 6657) (symbol 6651 . 6655) (TYPENAME 6642 . 6650) (punctuation 6640 . 6641) (symbol 6639 . 6640) (TYPENAME 6630 . 6638) (punctuation 6629 . 6630) (TEMPLATE 6621 . 6629) (punctuation 6073 . 6074) (semantic-list 6031 . 6073) (punctuation 6021 . 6022) (semantic-list 6018 . 6021) (semantic-list 6015 . 6018) (CONST 6009 . 6014) (symbol 6007 . 6008) (punctuation 6006 . 6007) (symbol 5999 . 6006) (STRUCT 5992 . 5998) (punctuation 5982 . 5983) (symbol 5981 . 5982) (symbol 5974 . 5980) (punctuation 5973 . 5974) (punctuation 5972 . 5973) (symbol 5969 . 5972) (punctuation 5967 . 5968) (symbol 5966 . 5967) (TYPENAME 5957 . 5965) (punctuation 5956 . 5957) (TEMPLATE 5948 . 5956) (punctuation 5937 . 5938) (semantic-list 5895 . 5937) (punctuation 5885 . 5886) (punctuation 5880 . 5881) (punctuation 5876 . 5877) (symbol 5869 . 5876) (STRUCT 5862 . 5868) (punctuation 5852 . 5853) (symbol 5851 . 5852) (symbol 5844 . 5850) (punctuation 5843 . 5844) (punctuation 5842 . 5843) (symbol 5839 . 5842) (punctuation 5837 . 5838) (symbol 5836 . 5837) (TYPENAME 5827 . 5835) (punctuation 5826 . 5827) (TEMPLATE 5818 . 5826) (punctuation 5807 . 5808) (semantic-list 5765 . 5807) (punctuation 5755 . 5756) (semantic-list 5752 . 5755) (CONST 5747 . 5752) (symbol 5745 . 5746) (punctuation 5744 . 5745) (symbol 5737 . 5744) (STRUCT 5730 . 5736) (punctuation 5720 . 5721) (symbol 5719 . 5720) (symbol 5712 . 5718) (punctuation 5711 . 5712) (punctuation 5710 . 5711) (symbol 5707 . 5710) (punctuation 5705 . 5706) (symbol 5704 . 5705) (TYPENAME 5695 . 5703) (punctuation 5694 . 5695) (TEMPLATE 5686 . 5694) (punctuation 5021 . 5022) (semantic-list 5018 . 5021) (semantic-list 5011 . 5018) (CHAR 5006 . 5010) (TYPEDEF 4998 . 5005) (punctuation 4923 . 4924) (semantic-list 4920 . 4923) (semantic-list 4910 . 4920) (CHAR 4905 . 4909) (TYPEDEF 4897 . 4904))
      :lexical-table 
        '(("BOOST_PROTO_MAX_ARITY" . ((number "10" 1254 . 1256)))
          ("BOOST_PROTO_USE_BASIC_EXPR" (spp-arg-list nil 26364 . 26366) . 
              ((TYPEDEF "typedef" 26367 . 26374) (VOID "void" 26375 . 26379) (symbol "proto_use_basic_expr_" 26380 . 26401) (punctuation ";" 26401 . 26402)))
          ("BOOST_PROTO_DISABLE_IF_IS_FUNCTION" (spp-arg-list ("T") 3197 . 3200))
          ("BOOST_PROTO_MAX_FUNCTION_CALL_ARITY" . ((symbol "BOOST_PROTO_MAX_ARITY" 1442 . 1463)))
          ("BOOST_PROTO_DISABLE_IF_IS_CONST" (spp-arg-list ("T") 2840 . 2843))
          ("BOOST_PROTO_RESULT_OF" . 
              ((symbol "boost" 3896 . 3901) (punctuation ":" 3901 . 3902) (punctuation ":" 3902 . 3903) (symbol "tr1_result_of" 3903 . 3916)))
          ("BOOST_PROTO_MAX_LOGICAL_ARITY" . ((number "10" 1342 . 1344)))
          ("BOOST_PROTO_DISABLE_MSVC_C4522")
          ("BOOST_PROTO_FWD_HPP_EAN_04_01_2005")
          ("BOOST_PROTO_UNCVREF" (spp-arg-list ("X") 6308 . 6311) . 
              ((TYPENAME "typename" 6387 . 6395) (symbol "boost" 6396 . 6401) (punctuation ":" 6401 . 6402) (punctuation ":" 6402 . 6403) (symbol "proto" 6403 . 6408) (punctuation ":" 6408 . 6409) (punctuation ":" 6409 . 6410) (symbol "detail" 6410 . 6416) (punctuation ":" 6416 . 6417) (punctuation ":" 6417 . 6418) (symbol "uncvref" 6418 . 6425) (punctuation "<" 6425 . 6426) (symbol "X" 6426 . 6427) (punctuation ">" 6427 . 6428) (punctuation ":" 6428 . 6429) (punctuation ":" 6429 . 6430) (symbol "type" 6430 . 6434)))
          ("BOOST_PROTO_UNEXPR" (spp-arg-list nil 26157 . 26159) . 
              ((TYPEDEF "typedef" 26160 . 26167) (INT "int" 26168 . 26171) (symbol "proto_is_expr_" 26172 . 26186) (punctuation ";" 26186 . 26187)))
          ("BOOST_PROTO_CALLABLE" (spp-arg-list nil 26220 . 26222) . 
              ((TYPEDEF "typedef" 26223 . 26230) (VOID "void" 26231 . 26235) (symbol "proto_is_callable_" 26236 . 26254) (punctuation ";" 26254 . 26255)))
          ("BOOST_PROTO_DISABLE_MSVC_C4714")
          ("BOOST_PROTO_AGGREGATE" (spp-arg-list nil 26289 . 26291) . 
              ((TYPEDEF "typedef" 26292 . 26299) (VOID "void" 26300 . 26304) (symbol "proto_is_aggregate_" 26305 . 26324) (punctuation ";" 26324 . 26325)))
          ("BOOST_PROTO_RETURN_TYPE_STRICT_LOOSE" (spp-arg-list ("X" "Y") 4277 . 4283) . ((symbol "Y" 4284 . 4285)))
          )
)
    (semanticdb-table "traits.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_ARG_TRAITS_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [520 561])
            ("boost/config.hpp" include (:system-flag t) nil [563 590])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [591 629])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [630 681])
            ("boost/preprocessor/repetition/enum.hpp" include (:system-flag t) nil [682 731])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [732 788])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [789 854])
            ("boost/preprocessor/repetition/repeat.hpp" include (:system-flag t) nil [855 906])
            ("boost/preprocessor/repetition/repeat_from_to.hpp" include (:system-flag t) nil [907 966])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [967 1021])
            ("boost/preprocessor/arithmetic/sub.hpp" include (:system-flag t) nil [1022 1070])
            ("boost/static_assert.hpp" include (:system-flag t) nil [1071 1105])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [1106 1135])
            ("boost/proto/detail/template_arity.hpp" include (:system-flag t) nil [1136 1184])
            ("boost/type_traits/is_pod.hpp" include (:system-flag t) nil [1185 1224])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [1225 1265])
            ("boost/type_traits/add_const.hpp" include (:system-flag t) nil [1266 1308])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [1309 1345])
            ("boost/proto/args.hpp" include (:system-flag t) nil [1346 1377])
            ("boost/proto/domain.hpp" include (:system-flag t) nil [1378 1411])
            ("boost/proto/transform/pass_through.hpp" include (:system-flag t) nil [1412 1461])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("if_vararg" type (:type "struct") (reparse-symbol namespacesubparts) [1888 1916])
                                    ("T" variable (:type "int") (reparse-symbol namespacesubparts) [2017 2030])
                                    ("is_callable2_" type
                                       (:superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [2091 2147])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [2254 2276])
                                    ("is_callable_" type
                                       (:superclasses 
                                          ( ("is_callable2_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [2409 2469]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1806 2476])
                            ("is_callable" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("proto::detail::is_callable_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3691 3781])
                            ("is_callable" type
                               (:type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("proto::_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3817 3887])
                            ("is_callable" type
                               (:type "struct"
                                :superclasses 
                                  ( ("mpl::false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("proto::callable" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [3923 4001])
                            ("is_callable" type
                               (:template 
                                  ( ("PrimitiveTransform" type (:type "class") nil nil)
                                    ("X" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("proto::transform" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4037 4179])
                            ("detail" type
                               (:members 
                                  ( ("is_transform_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Void" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4649 4760])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [4868 4890]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [4618 4896])
                            ("is_transform" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("proto::detail::is_transform_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [5733 5825])
                            ("detail" type
                               (:members 
                                  ( ("is_aggregate_" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Void" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("is_pod" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5862 5971])
                                    ("is_aggregate_" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Args" type (:type "class") nil nil)
                                            ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("proto::expr" type nil nil nil)
                                            ("void" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [5981 6123])
                                    ("is_aggregate_" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Args" type (:type "class") nil nil)
                                            ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("proto::basic_expr" type nil nil nil)
                                            ("void" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6133 6281])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [6389 6411]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [5831 6417])
                            ("is_aggregate" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("proto::detail::is_aggregate_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [6968 7060])
                            ("is_expr" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Void" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7580 7674])
                            ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [8273 8291])
                            ("is_expr" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_expr" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil)
                                    ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8309 8386])
                            ("tag_of" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("Expr::proto_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8535 8573]))                                  )
                                (reparse-symbol namespacesubparts) [8479 8580])
                            ("tag_of" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("Expr::proto_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [8650 8688]))                                  
                                :template-specifier 
                                  ( ("Expr" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8586 8695])
                            ("arity_of" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("Expr::proto_arity" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8785 8862])
                            ("arity_of" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("Expr::proto_arity" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("Expr" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8868 8953])
                            ("result_of" type
                               (:members 
                                  ( ("as_expr" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9249 9266]))                                          )
                                        (reparse-symbol namespacesubparts) [9099 9277])
                                    ("as_child" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9546 9563]))                                          )
                                        (reparse-symbol namespacesubparts) [9394 9574])
                                    ("child" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("child_c" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9866 9991])
                                    ("value" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("Expr::proto_arity_c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [10286 10306]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [10261 10307])
                                            ("value_type" type
                                               (:typedef ("Expr::proto_child0" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [10450 10497])
                                            ("type" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11105 11121]))                                          )
                                        (reparse-symbol namespacesubparts) [10126 11132])
                                    ("value" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("Expr::proto_arity_c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [11310 11330]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [11285 11331])
                                            ("value_type" type
                                               (:typedef ("Expr::proto_child0" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [11474 11521])
                                            ("type" variable (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [12164 12179]))                                          
                                        :template-specifier 
                                          ( ("Expr" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [11142 12190])
                                    ("value" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("BOOST_STATIC_ASSERT" function
                                               (:prototype-flag t
                                                :arguments 
                                                  ( ("" variable (:type ("Expr::proto_arity_c" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [12374 12394]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [12349 12395])
                                            ("value_type" type
                                               (:typedef ("Expr::proto_child0" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [12538 12585])
                                            ("type" variable (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13252 13273]))                                          
                                        :template-specifier 
                                          ( ("Expr" type
                                               (:reference 1
                                                :constant-flag t)
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [12200 13284])
                                    ("left" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("child_c" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13536 13620])
                                    ("right" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("child_c" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13874 13959]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [8959 13966])
                            ("terminal" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::terminal" type nil nil nil)
                                                  ("term" type nil nil nil)
                                                  ("0"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [14306 14365])
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::terminal" type nil nil nil)
                                                  ("term" type nil nil nil)
                                                  ("0"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [14374 14448])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [14591 14616])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::expr_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [14967 15010])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::state_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [15011 15053])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::data_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [15054 15093]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [14938 15153]))                                          
                                        :superclasses 
                                          ( ("transform_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [14458 15164])
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::terminal" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [15200 15239])
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [15274 15297]))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [14208 15304])
                            ("if_else_" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil)
                                    ("V" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::if_else_" type nil nil nil)
                                                  ("list3" type nil nil nil)
                                                  ("3"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [15694 15760])
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::if_else_" type nil nil nil)
                                                  ("list3" type nil nil nil)
                                                  ("3"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [15769 15850])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [15860 16028])
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::if_else_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16064 16103])
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16138 16161])
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16196 16219])
                                    ("proto_child2" type
                                       (:typedef ("V" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16254 16277]))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [15566 16284])
                            ("nullary_expr" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("term" type nil nil nil)
                                                  ("0"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16772 16814])
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("term" type nil nil nil)
                                                  ("0"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [16823 16880])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [17023 17048])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::expr_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17408 17451])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::state_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17452 17494])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::data_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [17495 17534]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [17379 17594]))                                          
                                        :superclasses 
                                          ( ("transform_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [16890 17605])
                                    ("proto_tag" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [17641 17663])
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [17698 17721]))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [16647 17728])
                            ("unary_expr" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [18225 18268])
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [18277 18335])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [18345 18515])
                                    ("proto_tag" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [18551 18573])
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [18608 18631]))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [18104 18638])
                            ("binary_expr" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19159 19205])
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("Tag" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19214 19275])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [19285 19456])
                                    ("proto_tag" type
                                       (:typedef ("Tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19492 19514])
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19549 19572])
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [19607 19630]))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [19021 19637])
                            ("BOOST_PROTO_DEFINE_UNARY_METAFUNCTION" variable (:constant-flag t) (reparse-symbol namespacesubparts) [19647 19684])
                            ("BOOST_PROTO_DEFINE_BINARY_METAFUNCTION" variable (:constant-flag t) (reparse-symbol namespacesubparts) [21225 21263])
                            ("unary_plus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::unary_plus" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::unary_plus" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::unary_plus" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [22897 22946])
                            ("negate" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::negate" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::negate" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::negate" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [22951 22996])
                            ("dereference" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::dereference" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::dereference" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::dereference" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23001 23051])
                            ("complement" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::complement" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::complement" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::complement" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23056 23105])
                            ("address_of" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::address_of" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::address_of" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::address_of" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23110 23159])
                            ("logical_not" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::logical_not" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::logical_not" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::logical_not" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23164 23214])
                            ("pre_inc" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::pre_inc" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::pre_inc" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::pre_inc" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23219 23265])
                            ("pre_dec" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::pre_dec" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::pre_dec" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::pre_dec" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23270 23316])
                            ("post_inc" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::post_inc" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::post_inc" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::post_inc" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23321 23368])
                            ("post_dec" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::post_dec" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::post_dec" type nil nil nil)
                                                  ("list1" type nil nil nil)
                                                  ("1"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::post_dec" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23373 23420])
                            ("shift_left" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_left" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_left" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::shift_left" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23426 23476])
                            ("shift_right" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_right" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_right" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::shift_right" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23481 23532])
                            ("multiplies" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::multiplies" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::multiplies" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::multiplies" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23537 23587])
                            ("divides" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::divides" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::divides" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::divides" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23592 23639])
                            ("modulus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::modulus" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::modulus" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::modulus" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23644 23691])
                            ("plus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::plus" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::plus" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::plus" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23696 23740])
                            ("minus" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::minus" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::minus" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::minus" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23745 23790])
                            ("less" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::less" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::less" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::less" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23795 23839])
                            ("greater" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::greater" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::greater" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::greater" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23844 23891])
                            ("less_equal" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::less_equal" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::less_equal" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::less_equal" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23896 23946])
                            ("greater_equal" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::greater_equal" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::greater_equal" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::greater_equal" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [23951 24004])
                            ("equal_to" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::equal_to" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::equal_to" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::equal_to" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24009 24057])
                            ("not_equal_to" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::not_equal_to" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::not_equal_to" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::not_equal_to" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24062 24114])
                            ("logical_or" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::logical_or" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::logical_or" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::logical_or" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24119 24169])
                            ("logical_and" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::logical_and" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::logical_and" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::logical_and" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24174 24225])
                            ("bitwise_or" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_or" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_or" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::bitwise_or" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24230 24280])
                            ("bitwise_and" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_and" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_and" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::bitwise_and" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24285 24336])
                            ("bitwise_xor" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_xor" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_xor" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::bitwise_xor" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24341 24392])
                            ("comma" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::comma" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::comma" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::comma" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24397 24442])
                            ("mem_ptr" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::mem_ptr" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::mem_ptr" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::mem_ptr" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24447 24494])
                            ("assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24499 24545])
                            ("shift_left_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_left_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_left_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::shift_left_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24550 24607])
                            ("shift_right_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_right_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::shift_right_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::shift_right_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24612 24670])
                            ("multiplies_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::multiplies_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::multiplies_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::multiplies_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24675 24732])
                            ("divides_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::divides_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::divides_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::divides_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24737 24791])
                            ("modulus_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::modulus_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::modulus_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::modulus_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24796 24850])
                            ("plus_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::plus_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::plus_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::plus_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24855 24906])
                            ("minus_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::minus_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::minus_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::minus_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24911 24963])
                            ("bitwise_or_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_or_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_or_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::bitwise_or_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [24968 25025])
                            ("bitwise_and_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_and_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_and_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::bitwise_and_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [25030 25088])
                            ("bitwise_xor_assign" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_xor_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::bitwise_xor_assign" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::bitwise_xor_assign" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [25093 25151])
                            ("subscript" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::subscript" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::subscript" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::subscript" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [25156 25205])
                            ("member" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("U" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("proto::expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::member" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_grammar" type
                                       (:typedef ("proto::basic_expr" type
                                             (:template-specifier 
                                                ( ("proto::tag::member" type nil nil nil)
                                                  ("list2" type nil nil nil)
                                                  ("2"))                                                
                                              :type "class")
                                              nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::pass_through_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_tag" type
                                       (:typedef ("proto::tag::member" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child0" type
                                       (:typedef ("T" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil)
                                    ("proto_child1" type
                                       (:typedef ("U" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) nil))                                  
                                :superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [25210 25256])
                            ("functional" type
                               (:members 
                                  ( ("as_expr" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [25691 25740])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("t" variable
                                                       (:reference 1
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [26511 26516]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [26482 26616])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("t" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [26827 26838]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [26798 26944]))                                          )
                                        (reparse-symbol namespacesubparts) [25560 27646])
                                    ("as_child" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [27906 27955])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("t" variable
                                                       (:reference 1
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [28730 28735]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [28701 28836])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("t" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("T" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [29048 29059]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [29019 29166]))                                          )
                                        (reparse-symbol namespacesubparts) [27774 29177])
                                    ("child_c" type
                                       (:template 
                                          ( ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [29402 29451])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [30124 30132]))                                                  
                                                :type ("result_of::child_c::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [30055 30229])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [30426 30440]))                                                  
                                                :type ("result_of::child_c::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [30351 30543]))                                          )
                                        (reparse-symbol namespacesubparts) [29304 30554])
                                    ("child" type
                                       (:template 
                                          ( ("N" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [30981 31030])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [31704 31712]))                                                  
                                                :type ("result_of::child::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [31637 31807])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [32002 32016]))                                                  
                                                :type ("result_of::child::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [31929 32117]))                                          )
                                        (reparse-symbol namespacesubparts) [30860 32128])
                                    ("value" type
                                       (:members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [32324 32373])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [33043 33051]))                                                  
                                                :type ("result_of::value::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [32979 33131])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [33323 33337]))                                                  
                                                :type ("result_of::value::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [33253 33417]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [32253 33428])
                                    ("left" type
                                       (:members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [33622 33671])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [34332 34340]))                                                  
                                                :type ("result_of::left::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [34269 34420])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [34611 34625]))                                                  
                                                :type ("result_of::left::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [34542 34705]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [33552 34716])
                                    ("right" type
                                       (:members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [34912 34961])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [35626 35634]))                                                  
                                                :type ("result_of::right::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [35562 35714])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [35864 35878]))                                                  
                                                :type ("result_of::right::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [35794 35958]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [34841 35969]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [25408 35976])
                            ("as_expr" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37293 37329])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37298 37332])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_FUNCTION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37333 37370]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [37276 37431])
                            ("as_expr" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37607 37618]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [37590 37684])
                            ("as_expr" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [37863 37899])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37868 37902])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_FUNCTION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [37903 37940]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [37846 38011])
                            ("as_expr" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [38196 38207]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [38179 38283])
                            ("as_child" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39353 39389])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39358 39392])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_FUNCTION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39393 39430]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [39335 39492])
                            ("as_child" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39670 39681]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [39652 39748])
                            ("as_child" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [39929 39965])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39934 39968])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_FUNCTION" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [39969 40006]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [39911 40078])
                            ("as_child" function
                               (:arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [40265 40276]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [40247 40353])
                            ("child" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41059 41098])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41067 41104]))                                  
                                :type ("result_of::child::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [41006 41170])
                            ("child" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41323 41337]))                                  
                                :type ("result_of::child::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [41264 41408])
                            ("child" function
                               (:arguments 
                                  ( ("expr2" variable
                                       (:reference 1
                                        :type ("Expr2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41588 41632])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [41601 41639]))                                  
                                :type ("reference" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [41568 41694])
                            ("child" function
                               (:arguments 
                                  ( ("expr2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [41880 41899]))                                  
                                :type ("const_reference" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [41854 41953])
                            ("child_c" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42488 42527])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [42496 42533]))                                  
                                :type ("result_of::child_c::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [42431 42601])
                            ("child_c" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [42754 42768]))                                  
                                :type ("result_of::child_c::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [42691 42841])
                            ("value" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43352 43391])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [43360 43397]))                                  
                                :type ("result_of::value::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [43302 43448])
                            ("value" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [43586 43600]))                                  
                                :type ("result_of::value::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [43530 43650])
                            ("left" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44193 44232])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [44201 44238]))                                  
                                :type ("result_of::left::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [44145 44289])
                            ("left" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [44425 44439]))                                  
                                :type ("result_of::left::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [44371 44489])
                            ("right" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45037 45076])
                                    ("" variable (:type ("BOOST_PROTO_DISABLE_IF_IS_CONST" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [45045 45082]))                                  
                                :type ("result_of::right::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [44987 45133])
                            ("right" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [45271 45285]))                                  
                                :type ("result_of::right::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [45215 45335])
                            ("is_callable" type
                               (:template 
                                  ( ("Domain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("functional::as_expr" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [45371 45476])
                            ("is_callable" type
                               (:template 
                                  ( ("Domain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("functional::as_child" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [45512 45618])
                            ("is_callable" type
                               (:template 
                                  ( ("long" type nil nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("functional::child_c" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [45654 45745])
                            ("is_callable" type
                               (:template 
                                  ( ("N" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("functional::child" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [45781 45874]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1784 45877]))                  
                :type "namespace")
                nil [1766 45878]))          
      :file "traits.hpp"
      :pointmax 45939
      :fsize 45938
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((symbol 45193 . 45210) (punctuation 45187 . 45188) (symbol 45183 . 45187) (TYPENAME 45174 . 45182) (punctuation 45173 . 45174) (TEMPLATE 45165 . 45173) (semantic-list 45076 . 45082) (symbol 44965 . 44982) (punctuation 44959 . 44960) (symbol 44955 . 44959) (TYPENAME 44946 . 44954) (punctuation 44945 . 44946) (TEMPLATE 44937 . 44945) (symbol 44349 . 44366) (punctuation 44343 . 44344) (symbol 44339 . 44343) (TYPENAME 44330 . 44338) (punctuation 44329 . 44330) (TEMPLATE 44321 . 44329) (semantic-list 44232 . 44238) (symbol 44123 . 44140) (punctuation 44117 . 44118) (symbol 44113 . 44117) (TYPENAME 44104 . 44112) (punctuation 44103 . 44104) (TEMPLATE 44095 . 44103) (symbol 43508 . 43525) (punctuation 43502 . 43503) (symbol 43498 . 43502) (TYPENAME 43489 . 43497) (punctuation 43488 . 43489) (TEMPLATE 43480 . 43488) (semantic-list 43391 . 43397) (symbol 43280 . 43297) (punctuation 43274 . 43275) (symbol 43270 . 43274) (TYPENAME 43261 . 43269) (punctuation 43260 . 43261) (TEMPLATE 43252 . 43260) (symbol 42669 . 42686) (punctuation 42663 . 42664) (symbol 42659 . 42663) (TYPENAME 42650 . 42658) (punctuation 42648 . 42649) (symbol 42647 . 42648) (LONG 42642 . 42646) (punctuation 42641 . 42642) (TEMPLATE 42633 . 42641) (semantic-list 42527 . 42533) (symbol 42409 . 42426) (punctuation 42403 . 42404) (symbol 42399 . 42403) (TYPENAME 42390 . 42398) (punctuation 42388 . 42389) (symbol 42387 . 42388) (LONG 42382 . 42386) (punctuation 42381 . 42382) (TEMPLATE 42373 . 42381) (punctuation 41853 . 41854) (punctuation 41852 . 41853) (punctuation 41851 . 41852) (symbol 41839 . 41851) (punctuation 41838 . 41839) (punctuation 41837 . 41838) (symbol 41822 . 41837) (punctuation 41821 . 41822) (punctuation 41820 . 41821) (symbol 41815 . 41820) (TYPENAME 41806 . 41814) (punctuation 41805 . 41806) (symbol 41794 . 41805) (punctuation 41793 . 41794) (punctuation 41792 . 41793) (symbol 41786 . 41792) (TYPENAME 41777 . 41785) (symbol 41755 . 41772) (punctuation 41749 . 41750) (symbol 41744 . 41749) (TYPENAME 41735 . 41743) (punctuation 41734 . 41735) (TEMPLATE 41726 . 41734) (semantic-list 41632 . 41639) (punctuation 41567 . 41568) (punctuation 41566 . 41567) (punctuation 41565 . 41566) (symbol 41553 . 41565) (punctuation 41552 . 41553) (punctuation 41551 . 41552) (symbol 41536 . 41551) (punctuation 41535 . 41536) (punctuation 41534 . 41535) (symbol 41529 . 41534) (TYPENAME 41520 . 41528) (punctuation 41519 . 41520) (symbol 41508 . 41519) (punctuation 41507 . 41508) (punctuation 41506 . 41507) (symbol 41500 . 41506) (TYPENAME 41491 . 41499) (symbol 41469 . 41486) (punctuation 41463 . 41464) (symbol 41458 . 41463) (TYPENAME 41449 . 41457) (punctuation 41448 . 41449) (TEMPLATE 41440 . 41448) (symbol 41242 . 41259) (punctuation 41236 . 41237) (symbol 41232 . 41236) (TYPENAME 41223 . 41231) (punctuation 41221 . 41222) (symbol 41220 . 41221) (TYPENAME 41211 . 41219) (punctuation 41210 . 41211) (TEMPLATE 41202 . 41210) (semantic-list 41098 . 41104) (symbol 40984 . 41001) (punctuation 40978 . 40979) (symbol 40974 . 40978) (TYPENAME 40965 . 40973) (punctuation 40963 . 40964) (symbol 40962 . 40963) (TYPENAME 40953 . 40961) (punctuation 40952 . 40953) (TEMPLATE 40944 . 40952) (punctuation 40246 . 40247) (punctuation 40245 . 40246) (punctuation 40244 . 40245) (symbol 40240 . 40244) (punctuation 40239 . 40240) (punctuation 40238 . 40239) (punctuation 40237 . 40238) (symbol 40231 . 40237) (punctuation 40229 . 40230) (CONST 40224 . 40229) (symbol 40222 . 40223) (punctuation 40221 . 40222) (symbol 40213 . 40221) (punctuation 40212 . 40213) (punctuation 40211 . 40212) (symbol 40202 . 40211) (TYPENAME 40193 . 40201) (punctuation 40192 . 40193) (symbol 40183 . 40192) (TYPENAME 40174 . 40182) (symbol 40152 . 40169) (punctuation 40146 . 40147) (symbol 40145 . 40146) (TYPENAME 40136 . 40144) (punctuation 40134 . 40135) (symbol 40128 . 40134) (TYPENAME 40119 . 40127) (punctuation 40118 . 40119) (TEMPLATE 40110 . 40118) (semantic-list 40003 . 40006) (semantic-list 39965 . 39968) (punctuation 39910 . 39911) (punctuation 39909 . 39910) (punctuation 39908 . 39909) (symbol 39904 . 39908) (punctuation 39903 . 39904) (punctuation 39902 . 39903) (punctuation 39901 . 39902) (symbol 39895 . 39901) (punctuation 39893 . 39894) (symbol 39892 . 39893) (punctuation 39891 . 39892) (symbol 39883 . 39891) (punctuation 39882 . 39883) (punctuation 39881 . 39882) (symbol 39872 . 39881) (TYPENAME 39863 . 39871) (punctuation 39862 . 39863) (symbol 39853 . 39862) (TYPENAME 39844 . 39852) (symbol 39822 . 39839) (punctuation 39816 . 39817) (symbol 39815 . 39816) (TYPENAME 39806 . 39814) (punctuation 39804 . 39805) (symbol 39798 . 39804) (TYPENAME 39789 . 39797) (punctuation 39788 . 39789) (TEMPLATE 39780 . 39788) (punctuation 39651 . 39652) (punctuation 39650 . 39651) (punctuation 39649 . 39650) (symbol 39645 . 39649) (punctuation 39644 . 39645) (punctuation 39643 . 39644) (punctuation 39642 . 39643) (symbol 39628 . 39642) (punctuation 39626 . 39627) (CONST 39621 . 39626) (symbol 39619 . 39620) (punctuation 39618 . 39619) (symbol 39610 . 39618) (punctuation 39609 . 39610) (punctuation 39608 . 39609) (symbol 39599 . 39608) (TYPENAME 39590 . 39598) (punctuation 39589 . 39590) (symbol 39580 . 39589) (TYPENAME 39571 . 39579) (symbol 39549 . 39566) (punctuation 39543 . 39544) (symbol 39542 . 39543) (TYPENAME 39533 . 39541) (punctuation 39532 . 39533) (TEMPLATE 39524 . 39532) (semantic-list 39427 . 39430) (semantic-list 39389 . 39392) (punctuation 39334 . 39335) (punctuation 39333 . 39334) (punctuation 39332 . 39333) (symbol 39328 . 39332) (punctuation 39327 . 39328) (punctuation 39326 . 39327) (punctuation 39325 . 39326) (symbol 39311 . 39325) (punctuation 39309 . 39310) (symbol 39308 . 39309) (punctuation 39307 . 39308) (symbol 39299 . 39307) (punctuation 39298 . 39299) (punctuation 39297 . 39298) (symbol 39288 . 39297) (TYPENAME 39279 . 39287) (punctuation 39278 . 39279) (symbol 39269 . 39278) (TYPENAME 39260 . 39268) (symbol 39238 . 39255) (punctuation 39232 . 39233) (symbol 39231 . 39232) (TYPENAME 39222 . 39230) (punctuation 39221 . 39222) (TEMPLATE 39213 . 39221) (punctuation 38178 . 38179) (punctuation 38177 . 38178) (punctuation 38176 . 38177) (symbol 38172 . 38176) (punctuation 38171 . 38172) (punctuation 38170 . 38171) (punctuation 38169 . 38170) (symbol 38163 . 38169) (punctuation 38161 . 38162) (CONST 38156 . 38161) (symbol 38154 . 38155) (punctuation 38153 . 38154) (symbol 38146 . 38153) (punctuation 38145 . 38146) (punctuation 38144 . 38145) (symbol 38135 . 38144) (TYPENAME 38126 . 38134) (punctuation 38125 . 38126) (symbol 38116 . 38125) (TYPENAME 38107 . 38115) (symbol 38085 . 38102) (punctuation 38079 . 38080) (symbol 38078 . 38079) (TYPENAME 38069 . 38077) (punctuation 38067 . 38068) (symbol 38061 . 38067) (TYPENAME 38052 . 38060) (punctuation 38051 . 38052) (TEMPLATE 38043 . 38051) (semantic-list 37937 . 37940) (semantic-list 37899 . 37902) (punctuation 37845 . 37846) (punctuation 37844 . 37845) (punctuation 37843 . 37844) (symbol 37839 . 37843) (punctuation 37838 . 37839) (punctuation 37837 . 37838) (punctuation 37836 . 37837) (symbol 37830 . 37836) (punctuation 37828 . 37829) (symbol 37827 . 37828) (punctuation 37826 . 37827) (symbol 37819 . 37826) (punctuation 37818 . 37819) (punctuation 37817 . 37818) (symbol 37808 . 37817) (TYPENAME 37799 . 37807) (punctuation 37798 . 37799) (symbol 37789 . 37798) (TYPENAME 37780 . 37788) (symbol 37758 . 37775) (punctuation 37752 . 37753) (symbol 37751 . 37752) (TYPENAME 37742 . 37750) (punctuation 37740 . 37741) (symbol 37734 . 37740) (TYPENAME 37725 . 37733) (punctuation 37724 . 37725) (TEMPLATE 37716 . 37724) (punctuation 37589 . 37590) (punctuation 37588 . 37589) (punctuation 37587 . 37588) (symbol 37583 . 37587) (punctuation 37582 . 37583) (punctuation 37581 . 37582) (punctuation 37580 . 37581) (symbol 37566 . 37580) (punctuation 37564 . 37565) (CONST 37559 . 37564) (symbol 37557 . 37558) (punctuation 37556 . 37557) (symbol 37549 . 37556) (punctuation 37548 . 37549) (punctuation 37547 . 37548) (symbol 37538 . 37547) (TYPENAME 37529 . 37537) (punctuation 37528 . 37529) (symbol 37519 . 37528) (TYPENAME 37510 . 37518) (symbol 37488 . 37505) (punctuation 37482 . 37483) (symbol 37481 . 37482) (TYPENAME 37472 . 37480) (punctuation 37471 . 37472) (TEMPLATE 37463 . 37471) (semantic-list 37367 . 37370) (semantic-list 37329 . 37332) (punctuation 37275 . 37276) (punctuation 37274 . 37275) (punctuation 37273 . 37274) (symbol 37269 . 37273) (punctuation 37268 . 37269) (punctuation 37267 . 37268) (punctuation 37266 . 37267) (symbol 37252 . 37266) (punctuation 37250 . 37251) (symbol 37249 . 37250) (punctuation 37248 . 37249) (symbol 37241 . 37248) (punctuation 37240 . 37241) (punctuation 37239 . 37240) (symbol 37230 . 37239) (TYPENAME 37221 . 37229) (punctuation 37220 . 37221) (symbol 37211 . 37220) (TYPENAME 37202 . 37210) (symbol 37180 . 37197) (punctuation 37174 . 37175) (symbol 37173 . 37174) (TYPENAME 37164 . 37172) (punctuation 37163 . 37164) (TEMPLATE 37155 . 37163) (symbol 35764 . 35781) (punctuation 35750 . 35751) (symbol 35746 . 35750) (TYPENAME 35737 . 35745) (punctuation 35736 . 35737) (TEMPLATE 35728 . 35736) (symbol 35532 . 35549) (punctuation 35518 . 35519) (symbol 35514 . 35518) (TYPENAME 35505 . 35513) (punctuation 35504 . 35505) (TEMPLATE 35496 . 35504) (punctuation 35147 . 35148) (semantic-list 35064 . 35147) (punctuation 35050 . 35051) (semantic-list 35044 . 35050) (symbol 35040 . 35044) (punctuation 35039 . 35040) (symbol 35033 . 35039) (STRUCT 35026 . 35032) (punctuation 35012 . 35013) (symbol 35008 . 35012) (TYPENAME 34999 . 35007) (punctuation 34997 . 34998) (symbol 34993 . 34997) (TYPENAME 34984 . 34992) (punctuation 34983 . 34984) (TEMPLATE 34975 . 34983) (semantic-list 34896 . 34898) (symbol 34876 . 34896) (symbol 34512 . 34529) (punctuation 34498 . 34499) (symbol 34494 . 34498) (TYPENAME 34485 . 34493) (punctuation 34484 . 34485) (TEMPLATE 34476 . 34484) (symbol 34239 . 34256) (punctuation 34225 . 34226) (symbol 34221 . 34225) (TYPENAME 34212 . 34220) (punctuation 34211 . 34212) (TEMPLATE 34203 . 34211) (punctuation 33856 . 33857) (semantic-list 33774 . 33856) (punctuation 33760 . 33761) (semantic-list 33754 . 33760) (symbol 33750 . 33754) (punctuation 33749 . 33750) (symbol 33743 . 33749) (STRUCT 33736 . 33742) (punctuation 33722 . 33723) (symbol 33718 . 33722) (TYPENAME 33709 . 33717) (punctuation 33707 . 33708) (symbol 33703 . 33707) (TYPENAME 33694 . 33702) (punctuation 33693 . 33694) (TEMPLATE 33685 . 33693) (semantic-list 33606 . 33608) (symbol 33586 . 33606) (symbol 33223 . 33240) (punctuation 33209 . 33210) (symbol 33205 . 33209) (TYPENAME 33196 . 33204) (punctuation 33195 . 33196) (TEMPLATE 33187 . 33195) (symbol 32949 . 32966) (punctuation 32935 . 32936) (symbol 32931 . 32935) (TYPENAME 32922 . 32930) (punctuation 32921 . 32922) (TEMPLATE 32913 . 32921) (punctuation 32559 . 32560) (semantic-list 32476 . 32559) (punctuation 32462 . 32463) (semantic-list 32456 . 32462) (symbol 32452 . 32456) (punctuation 32451 . 32452) (symbol 32445 . 32451) (STRUCT 32438 . 32444) (punctuation 32424 . 32425) (symbol 32420 . 32424) (TYPENAME 32411 . 32419) (punctuation 32409 . 32410) (symbol 32405 . 32409) (TYPENAME 32396 . 32404) (punctuation 32395 . 32396) (TEMPLATE 32387 . 32395) (semantic-list 32308 . 32310) (symbol 32288 . 32308) (symbol 31899 . 31916) (punctuation 31885 . 31886) (symbol 31881 . 31885) (TYPENAME 31872 . 31880) (punctuation 31871 . 31872) (TEMPLATE 31863 . 31871) (symbol 31607 . 31624) (punctuation 31593 . 31594) (symbol 31589 . 31593) (TYPENAME 31580 . 31588) (punctuation 31579 . 31580) (TEMPLATE 31571 . 31579) (punctuation 31219 . 31220) (semantic-list 31133 . 31219) (punctuation 31119 . 31120) (semantic-list 31113 . 31119) (symbol 31109 . 31113) (punctuation 31108 . 31109) (symbol 31102 . 31108) (STRUCT 31095 . 31101) (punctuation 31081 . 31082) (symbol 31077 . 31081) (TYPENAME 31068 . 31076) (punctuation 31066 . 31067) (symbol 31062 . 31066) (TYPENAME 31053 . 31061) (punctuation 31052 . 31053) (TEMPLATE 31044 . 31052) (semantic-list 30965 . 30967) (symbol 30945 . 30965) (symbol 30321 . 30338) (punctuation 30307 . 30308) (symbol 30303 . 30307) (TYPENAME 30294 . 30302) (punctuation 30293 . 30294) (TEMPLATE 30285 . 30293) (symbol 30025 . 30042) (punctuation 30011 . 30012) (symbol 30007 . 30011) (TYPENAME 29998 . 30006) (punctuation 29997 . 29998) (TEMPLATE 29989 . 29997) (punctuation 29642 . 29643) (semantic-list 29554 . 29642) (punctuation 29540 . 29541) (semantic-list 29534 . 29540) (symbol 29530 . 29534) (punctuation 29529 . 29530) (symbol 29523 . 29529) (STRUCT 29516 . 29522) (punctuation 29502 . 29503) (symbol 29498 . 29502) (TYPENAME 29489 . 29497) (punctuation 29487 . 29488) (symbol 29483 . 29487) (TYPENAME 29474 . 29482) (punctuation 29473 . 29474) (TEMPLATE 29465 . 29473) (semantic-list 29386 . 29388) (symbol 29366 . 29386) (punctuation 29018 . 29019) (punctuation 29017 . 29018) (punctuation 29016 . 29017) (symbol 29012 . 29016) (punctuation 29011 . 29012) (punctuation 29010 . 29011) (punctuation 29009 . 29010) (semantic-list 28998 . 29009) (symbol 28990 . 28998) (punctuation 28989 . 28990) (symbol 28983 . 28989) (TYPENAME 28974 . 28982) (punctuation 28973 . 28974) (symbol 28964 . 28973) (TYPENAME 28955 . 28963) (symbol 28925 . 28942) (punctuation 28911 . 28912) (symbol 28910 . 28911) (TYPENAME 28901 . 28909) (punctuation 28900 . 28901) (TEMPLATE 28892 . 28900) (punctuation 28700 . 28701) (punctuation 28699 . 28700) (punctuation 28698 . 28699) (symbol 28694 . 28698) (punctuation 28693 . 28694) (punctuation 28692 . 28693) (punctuation 28691 . 28692) (semantic-list 28686 . 28691) (symbol 28678 . 28686) (punctuation 28677 . 28678) (symbol 28671 . 28677) (TYPENAME 28662 . 28670) (punctuation 28661 . 28662) (symbol 28652 . 28661) (TYPENAME 28643 . 28651) (symbol 28613 . 28630) (punctuation 28599 . 28600) (symbol 28598 . 28599) (TYPENAME 28589 . 28597) (punctuation 28588 . 28589) (TEMPLATE 28580 . 28588) (punctuation 28344 . 28345) (semantic-list 28248 . 28344) (punctuation 28234 . 28235) (semantic-list 28229 . 28234) (symbol 28225 . 28229) (punctuation 28224 . 28225) (symbol 28218 . 28224) (STRUCT 28211 . 28217) (punctuation 28197 . 28198) (symbol 28196 . 28197) (TYPENAME 28187 . 28195) (punctuation 28185 . 28186) (symbol 28181 . 28185) (TYPENAME 28172 . 28180) (punctuation 28171 . 28172) (TEMPLATE 28163 . 28171) (punctuation 28148 . 28149) (semantic-list 28052 . 28148) (punctuation 28038 . 28039) (semantic-list 28035 . 28038) (symbol 28031 . 28035) (punctuation 28030 . 28031) (symbol 28024 . 28030) (STRUCT 28017 . 28023) (punctuation 28003 . 28004) (symbol 28002 . 28003) (TYPENAME 27993 . 28001) (punctuation 27991 . 27992) (symbol 27987 . 27991) (TYPENAME 27978 . 27986) (punctuation 27977 . 27978) (TEMPLATE 27969 . 27977) (semantic-list 27890 . 27892) (symbol 27870 . 27890) (punctuation 26797 . 26798) (punctuation 26796 . 26797) (punctuation 26795 . 26796) (symbol 26791 . 26795) (punctuation 26790 . 26791) (punctuation 26789 . 26790) (punctuation 26788 . 26789) (semantic-list 26777 . 26788) (symbol 26770 . 26777) (punctuation 26769 . 26770) (symbol 26763 . 26769) (TYPENAME 26754 . 26762) (punctuation 26753 . 26754) (symbol 26744 . 26753) (TYPENAME 26735 . 26743) (symbol 26705 . 26722) (punctuation 26691 . 26692) (symbol 26690 . 26691) (TYPENAME 26681 . 26689) (punctuation 26680 . 26681) (TEMPLATE 26672 . 26680) (punctuation 26481 . 26482) (punctuation 26480 . 26481) (punctuation 26479 . 26480) (symbol 26475 . 26479) (punctuation 26474 . 26475) (punctuation 26473 . 26474) (punctuation 26472 . 26473) (semantic-list 26467 . 26472) (symbol 26460 . 26467) (punctuation 26459 . 26460) (symbol 26453 . 26459) (TYPENAME 26444 . 26452) (punctuation 26443 . 26444) (symbol 26434 . 26443) (TYPENAME 26425 . 26433) (symbol 26395 . 26412) (punctuation 26381 . 26382) (symbol 26380 . 26381) (TYPENAME 26371 . 26379) (punctuation 26370 . 26371) (TEMPLATE 26362 . 26370) (punctuation 26127 . 26128) (semantic-list 26032 . 26127) (punctuation 26018 . 26019) (semantic-list 26013 . 26018) (symbol 26009 . 26013) (punctuation 26008 . 26009) (symbol 26002 . 26008) (STRUCT 25995 . 26001) (punctuation 25981 . 25982) (symbol 25980 . 25981) (TYPENAME 25971 . 25979) (punctuation 25969 . 25970) (symbol 25965 . 25969) (TYPENAME 25956 . 25964) (punctuation 25955 . 25956) (TEMPLATE 25947 . 25955) (punctuation 25932 . 25933) (semantic-list 25837 . 25932) (punctuation 25823 . 25824) (semantic-list 25820 . 25823) (symbol 25816 . 25820) (punctuation 25815 . 25816) (symbol 25809 . 25815) (STRUCT 25802 . 25808) (punctuation 25788 . 25789) (symbol 25787 . 25788) (TYPENAME 25778 . 25786) (punctuation 25776 . 25777) (symbol 25772 . 25776) (TYPENAME 25763 . 25771) (punctuation 25762 . 25763) (TEMPLATE 25754 . 25762) (semantic-list 25675 . 25677) (symbol 25655 . 25675) (spp-system-include "boost/proto/detail/traits.hpp" 25358 . 25402) (semantic-list 17326 . 17366) (symbol 17290 . 17326) (symbol 17260 . 17277) (semantic-list 14885 . 14925) (symbol 14849 . 14885) (symbol 14819 . 14836) (punctuation 13251 . 13252) (punctuation 13250 . 13251) (punctuation 13249 . 13250) (symbol 13237 . 13249) (punctuation 13236 . 13237) (punctuation 13235 . 13236) (symbol 13231 . 13235) (TYPENAME 13222 . 13230) (punctuation 13221 . 13222) (symbol 13210 . 13221) (punctuation 13209 . 13210) (punctuation 13208 . 13209) (symbol 13202 . 13208) (TYPENAME 13193 . 13201) (TYPEDEF 13185 . 13192) (punctuation 12372 . 12373) (punctuation 12371 . 12372) (number 12369 . 12370) (punctuation 12163 . 12164) (punctuation 12162 . 12163) (punctuation 12161 . 12162) (symbol 12149 . 12161) (punctuation 12148 . 12149) (punctuation 12147 . 12148) (symbol 12143 . 12147) (TYPENAME 12134 . 12142) (punctuation 12133 . 12134) (symbol 12122 . 12133) (punctuation 12121 . 12122) (punctuation 12120 . 12121) (symbol 12114 . 12120) (TYPENAME 12105 . 12113) (TYPEDEF 12097 . 12104) (punctuation 11308 . 11309) (punctuation 11307 . 11308) (number 11305 . 11306) (punctuation 11104 . 11105) (punctuation 11103 . 11104) (punctuation 11102 . 11103) (symbol 11090 . 11102) (punctuation 11089 . 11090) (punctuation 11088 . 11089) (symbol 11084 . 11088) (TYPENAME 11075 . 11083) (punctuation 11074 . 11075) (symbol 11063 . 11074) (punctuation 11062 . 11063) (punctuation 11061 . 11062) (symbol 11055 . 11061) (TYPENAME 11046 . 11054) (TYPEDEF 11038 . 11045) (punctuation 10284 . 10285) (punctuation 10283 . 10284) (number 10281 . 10282) (punctuation 9545 . 9546) (punctuation 9544 . 9545) (punctuation 9543 . 9544) (symbol 9542 . 9543) (punctuation 9541 . 9542) (symbol 9533 . 9541) (TEMPLATE 9524 . 9532) (punctuation 9523 . 9524) (punctuation 9522 . 9523) (symbol 9516 . 9522) (TYPENAME 9507 . 9515) (TYPEDEF 9499 . 9506) (punctuation 9248 . 9249) (punctuation 9247 . 9248) (punctuation 9246 . 9247) (symbol 9245 . 9246) (punctuation 9244 . 9245) (symbol 9237 . 9244) (TEMPLATE 9228 . 9236) (punctuation 9227 . 9228) (punctuation 9226 . 9227) (symbol 9220 . 9226) (TYPENAME 9211 . 9219) (TYPEDEF 9203 . 9210) (punctuation 8271 . 8272) (punctuation 8263 . 8264) (symbol 8249 . 8263) (punctuation 8248 . 8249) (punctuation 8247 . 8248) (symbol 8246 . 8247) (TYPENAME 8237 . 8245) (punctuation 8235 . 8236) (symbol 8234 . 8235) (punctuation 8233 . 8234) (symbol 8226 . 8233) (STRUCT 8219 . 8225) (punctuation 8213 . 8214) (symbol 8212 . 8213) (TYPENAME 8203 . 8211) (punctuation 8202 . 8203) (TEMPLATE 8194 . 8202) (punctuation 6387 . 6388) (punctuation 6375 . 6376) (symbol 6356 . 6375) (punctuation 6355 . 6356) (punctuation 6354 . 6355) (symbol 6353 . 6354) (TYPENAME 6344 . 6352) (punctuation 6342 . 6343) (symbol 6341 . 6342) (punctuation 6340 . 6341) (symbol 6327 . 6340) (STRUCT 6320 . 6326) (punctuation 6310 . 6311) (symbol 6309 . 6310) (TYPENAME 6300 . 6308) (punctuation 6299 . 6300) (TEMPLATE 6291 . 6299) (punctuation 4866 . 4867) (punctuation 4854 . 4855) (symbol 4835 . 4854) (punctuation 4834 . 4835) (punctuation 4833 . 4834) (symbol 4832 . 4833) (TYPENAME 4823 . 4831) (punctuation 4821 . 4822) (symbol 4820 . 4821) (punctuation 4819 . 4820) (symbol 4806 . 4819) (STRUCT 4799 . 4805) (punctuation 4789 . 4790) (symbol 4788 . 4789) (TYPENAME 4779 . 4787) (punctuation 4778 . 4779) (TEMPLATE 4770 . 4778) (punctuation 2399 . 2400) (semantic-list 2338 . 2399) (symbol 2306 . 2338) (punctuation 2358 . 2359) (punctuation 2357 . 2358) (symbol 2304 . 2305) (punctuation 2358 . 2359) (punctuation 2357 . 2358) (TYPENAME 2295 . 2303) (punctuation 2358 . 2359) (punctuation 2357 . 2358) (punctuation 2294 . 2295) (TEMPLATE 2286 . 2294) (punctuation 2252 . 2253) (punctuation 2240 . 2241) (symbol 2222 . 2240) (punctuation 2221 . 2222) (punctuation 2220 . 2221) (symbol 2219 . 2220) (TYPENAME 2210 . 2218) (punctuation 2208 . 2209) (symbol 2207 . 2208) (punctuation 2206 . 2207) (symbol 2193 . 2206) (STRUCT 2186 . 2192) (punctuation 2176 . 2177) (symbol 2175 . 2176) (TYPENAME 2166 . 2174) (punctuation 2165 . 2166) (TEMPLATE 2157 . 2165) (punctuation 2081 . 2082) (VOID 2077 . 2081) (punctuation 2075 . 2076) (symbol 2070 . 2074) (TYPENAME 2061 . 2069) (punctuation 2059 . 2060) (symbol 2058 . 2059) (TYPENAME 2049 . 2057) (punctuation 2048 . 2049) (TEMPLATE 2040 . 2048) (punctuation 2015 . 2016) (punctuation 2003 . 2004) (symbol 1987 . 2003) (punctuation 1986 . 1987) (punctuation 1985 . 1986) (symbol 1984 . 1985) (TYPENAME 1975 . 1983) (punctuation 1973 . 1974) (symbol 1972 . 1973) (punctuation 1971 . 1972) (symbol 1962 . 1971) (STRUCT 1955 . 1961) (punctuation 1945 . 1946) (symbol 1944 . 1945) (TYPENAME 1935 . 1943) (punctuation 1934 . 1935) (TEMPLATE 1926 . 1934) (punctuation 1878 . 1879) (VOID 1874 . 1878) (punctuation 1872 . 1873) (symbol 1867 . 1871) (TYPENAME 1858 . 1866) (punctuation 1856 . 1857) (symbol 1855 . 1856) (TYPENAME 1846 . 1854) (punctuation 1845 . 1846) (TEMPLATE 1837 . 1845))
      :lexical-table 
        '(("BOOST_PROTO_ARG_TRAITS_HPP_EAN_04_01_2005")
          )
)
    (semanticdb-table "domain.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_DOMAIN_HPP_EAN_02_13_2007" variable (:constant-flag t) nil [511 548])
            ("boost/ref.hpp" include (:system-flag t) nil [550 574])
            ("boost/type_traits/is_same.hpp" include (:system-flag t) nil [575 615])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [616 652])
            ("boost/proto/generate.hpp" include (:system-flag t) nil [653 688])
            ("boost/proto/detail/as_expr.hpp" include (:system-flag t) nil [689 730])
            ("boost/proto/detail/deduce_domain.hpp" include (:system-flag t) nil [731 778])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("not_a_generator" type (:type "struct") (reparse-symbol namespacesubparts) [992 1026])
                                    ("not_a_grammar" type (:type "struct") (reparse-symbol namespacesubparts) [1036 1068])
                                    ("not_a_domain" type (:type "struct") (reparse-symbol namespacesubparts) [1078 1109]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [961 1115])
                            ("domainns_" type
                               (:members 
                                  ( ("domain" type
                                       (:template 
                                          ( ("Generator" type (:type "class") nil nil)
                                            ("Grammar" type (:type "class") nil nil)
                                            ("Super" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("proto_generator" type
                                               (:typedef ("Generator" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3355 3389])
                                            ("proto_grammar" type
                                               (:typedef ("Grammar" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3402 3434])
                                            ("proto_super_domain" type
                                               (:typedef ("Super" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3447 3484])
                                            ("proto_base_domain" type
                                               (:typedef ("domain" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3497 3533])
                                            ("proto_is_domain_" type
                                               (:typedef ("void")
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3577 3607]))                                          
                                        :superclasses 
                                          ( ("Generator" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3118 7796])
                                    ("default_domain" type
                                       (:superclasses 
                                          ( ("domain" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [7986 8040])
                                    ("basic_default_domain" type
                                       (:superclasses 
                                          ( ("domain" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [8186 8269])
                                    ("deduce_domain" type
                                       (:superclasses 
                                          ( ("domain" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [8620 8741])
                                    ("base_expr" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil)
                                            ("Args" type (:type "class") nil nil)
                                            ("bool" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("proto::expr" type
                                                     (:template-specifier 
                                                        ( ("Tag" type nil nil nil)
                                                          ("Args" type nil nil nil)
                                                          ("Args::arity" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [9116 9165]))                                          )
                                        (reparse-symbol namespacesubparts) [8993 9176])
                                    ("base_expr" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil)
                                            ("Args" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("proto::basic_expr" type
                                                     (:template-specifier 
                                                        ( ("Tag" type nil nil nil)
                                                          ("Args" type nil nil nil)
                                                          ("Args::arity" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [9351 9406]))                                          
                                        :template-specifier 
                                          ( ("Domain" type nil nil nil)
                                            ("Tag" type nil nil nil)
                                            ("Args" type nil nil nil)
                                            ("true" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9224 9417]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1121 9424])
                            ("is_domain" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Void" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [9666 9763])
                            ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [9882 9900])
                            ("domain_of" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil)
                                    ("Void" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("default_domain" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [10214 10242]))                                  )
                                (reparse-symbol namespacesubparts) [10131 10249])
                            ("domain_of" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10551 10561]))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil)
                                    ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [10453 10568])
                            ("domain_of" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10726 10736]))                                  
                                :template-specifier 
                                  ( ("boost::reference_wrapper" type nil nil nil)
                                    ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [10604 10743])
                            ("domain_of" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10907 10917]))                                  
                                :template-specifier 
                                  ( ("boost::reference_wrapper" type (:constant-flag t) nil nil)
                                    ("void" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [10779 10924])
                            ("is_sub_domain_of" type
                               (:template 
                                  ( ("SuperDomain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("proto::no_super_domain" type nil nil nil)
                                    ("SuperDomain" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [11282 11405])
                            ("is_sub_domain_of" type
                               (:template 
                                  ( ("SuperDomain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("SuperDomain" type nil nil nil)
                                    ("SuperDomain" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [11441 11552]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [938 11555]))                  
                :type "namespace")
                nil [920 11556]))          
      :file "domain.hpp"
      :pointmax 11617
      :fsize 11616
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((punctuation 11245 . 11246) (semantic-list 11243 . 11245) (punctuation 11237 . 11238) (symbol 11226 . 11237) (punctuation 11224 . 11225) (symbol 11206 . 11224) (punctuation 11205 . 11206) (punctuation 11204 . 11205) (symbol 11195 . 11204) (TYPENAME 11186 . 11194) (punctuation 11185 . 11186) (symbol 11169 . 11185) (punctuation 11167 . 11168) (symbol 11144 . 11160) (STRUCT 11137 . 11143) (punctuation 11131 . 11132) (symbol 11120 . 11131) (TYPENAME 11111 . 11119) (punctuation 11109 . 11110) (symbol 11100 . 11109) (TYPENAME 11091 . 11099) (punctuation 11090 . 11091) (TEMPLATE 11082 . 11090) (punctuation 10906 . 10907) (punctuation 10905 . 10906) (punctuation 10904 . 10905) (symbol 10903 . 10904) (punctuation 10902 . 10903) (symbol 10893 . 10902) (TYPENAME 10884 . 10892) (TYPEDEF 10876 . 10883) (punctuation 10725 . 10726) (punctuation 10724 . 10725) (punctuation 10723 . 10724) (symbol 10722 . 10723) (punctuation 10721 . 10722) (symbol 10712 . 10721) (TYPENAME 10703 . 10711) (TYPEDEF 10695 . 10702) (punctuation 10550 . 10551) (punctuation 10549 . 10550) (punctuation 10548 . 10549) (symbol 10547 . 10548) (punctuation 10546 . 10547) (symbol 10537 . 10546) (TYPENAME 10528 . 10536) (TYPEDEF 10520 . 10527) (punctuation 10416 . 10417) (semantic-list 10362 . 10416) (punctuation 10356 . 10357) (symbol 10342 . 10356) (punctuation 10341 . 10342) (punctuation 10340 . 10341) (symbol 10339 . 10340) (TYPENAME 10330 . 10338) (punctuation 10328 . 10329) (symbol 10327 . 10328) (punctuation 10326 . 10327) (symbol 10317 . 10326) (STRUCT 10310 . 10316) (punctuation 10304 . 10305) (symbol 10303 . 10304) (TYPENAME 10294 . 10302) (punctuation 10293 . 10294) (TEMPLATE 10285 . 10293) (punctuation 9880 . 9881) (punctuation 9872 . 9873) (symbol 9856 . 9872) (punctuation 9855 . 9856) (punctuation 9854 . 9855) (symbol 9853 . 9854) (TYPENAME 9844 . 9852) (punctuation 9842 . 9843) (symbol 9841 . 9842) (punctuation 9840 . 9841) (symbol 9831 . 9840) (STRUCT 9824 . 9830) (punctuation 9818 . 9819) (symbol 9817 . 9818) (TYPENAME 9808 . 9816) (punctuation 9807 . 9808) (TEMPLATE 9799 . 9807) (punctuation 7784 . 7785) (semantic-list 7538 . 7784) (punctuation 7524 . 7525) (symbol 7516 . 7524) (punctuation 7515 . 7516) (punctuation 7514 . 7515) (symbol 7509 . 7514) (punctuation 7507 . 7508) (symbol 7493 . 7507) (punctuation 7492 . 7493) (punctuation 7491 . 7492) (symbol 7490 . 7491) (TYPENAME 7481 . 7489) (punctuation 7479 . 7480) (symbol 7478 . 7479) (punctuation 7477 . 7478) (symbol 7469 . 7477) (STRUCT 7462 . 7468) (punctuation 7448 . 7449) (symbol 7447 . 7448) (TYPENAME 7438 . 7446) (punctuation 7437 . 7438) (TEMPLATE 7429 . 7437) (punctuation 7368 . 7369) (semantic-list 7314 . 7368) (punctuation 7300 . 7301) (symbol 7278 . 7283) (punctuation 7277 . 7278) (punctuation 7276 . 7277) (punctuation 7275 . 7276) (symbol 7266 . 7275) (punctuation 7265 . 7266) (symbol 7249 . 7265) (punctuation 7247 . 7248) (symbol 7224 . 7228) (punctuation 7223 . 7224) (punctuation 7222 . 7223) (punctuation 7221 . 7222) (symbol 7212 . 7221) (punctuation 7211 . 7212) (symbol 7197 . 7211) (punctuation 7196 . 7197) (punctuation 7195 . 7196) (symbol 7189 . 7195) (TYPENAME 7180 . 7188) (punctuation 7178 . 7179) (symbol 7158 . 7159) (punctuation 7136 . 7137) (symbol 7128 . 7136) (punctuation 7127 . 7128) (punctuation 7126 . 7127) (symbol 7120 . 7126) (punctuation 7118 . 7119) (symbol 7095 . 7103) (STRUCT 7088 . 7094) (punctuation 7074 . 7075) (symbol 7066 . 7074) (punctuation 7065 . 7066) (punctuation 7064 . 7065) (symbol 7059 . 7064) (punctuation 7057 . 7058) (symbol 7048 . 7056) (TYPENAME 7039 . 7047) (punctuation 7037 . 7038) (VOID 7033 . 7037) (punctuation 7031 . 7032) (symbol 7024 . 7030) (TYPENAME 7015 . 7023) (punctuation 7013 . 7014) (symbol 7012 . 7013) (TYPENAME 7003 . 7011) (punctuation 7002 . 7003) (TEMPLATE 6994 . 7002) (punctuation 5895 . 5896) (semantic-list 5621 . 5895) (punctuation 5607 . 5608) (symbol 5599 . 5607) (punctuation 5598 . 5599) (punctuation 5597 . 5598) (symbol 5592 . 5597) (punctuation 5590 . 5591) (symbol 5576 . 5590) (punctuation 5575 . 5576) (punctuation 5574 . 5575) (symbol 5573 . 5574) (TYPENAME 5564 . 5572) (punctuation 5562 . 5563) (symbol 5561 . 5562) (punctuation 5560 . 5561) (symbol 5553 . 5560) (STRUCT 5546 . 5552) (punctuation 5532 . 5533) (symbol 5531 . 5532) (TYPENAME 5522 . 5530) (punctuation 5521 . 5522) (TEMPLATE 5513 . 5521) (punctuation 5452 . 5453) (semantic-list 5398 . 5452) (punctuation 5384 . 5385) (symbol 5362 . 5367) (punctuation 5361 . 5362) (punctuation 5360 . 5361) (punctuation 5359 . 5360) (symbol 5350 . 5359) (punctuation 5349 . 5350) (symbol 5333 . 5349) (punctuation 5331 . 5332) (symbol 5308 . 5312) (punctuation 5307 . 5308) (punctuation 5306 . 5307) (punctuation 5305 . 5306) (symbol 5296 . 5305) (punctuation 5295 . 5296) (symbol 5281 . 5295) (punctuation 5280 . 5281) (punctuation 5279 . 5280) (symbol 5273 . 5279) (TYPENAME 5264 . 5272) (punctuation 5262 . 5263) (symbol 5242 . 5243) (punctuation 5220 . 5221) (symbol 5213 . 5220) (punctuation 5212 . 5213) (punctuation 5211 . 5212) (symbol 5205 . 5211) (punctuation 5203 . 5204) (symbol 5181 . 5188) (STRUCT 5174 . 5180) (punctuation 5160 . 5161) (symbol 5152 . 5160) (punctuation 5151 . 5152) (punctuation 5150 . 5151) (symbol 5145 . 5150) (punctuation 5143 . 5144) (symbol 5134 . 5142) (TYPENAME 5125 . 5133) (punctuation 5123 . 5124) (VOID 5119 . 5123) (punctuation 5117 . 5118) (symbol 5110 . 5116) (TYPENAME 5101 . 5109) (punctuation 5099 . 5100) (symbol 5098 . 5099) (TYPENAME 5089 . 5097) (punctuation 5088 . 5089) (TEMPLATE 5080 . 5088))
      :lexical-table 
        '(("BOOST_PROTO_DOMAIN_HPP_EAN_02_13_2007")
          )
)
    (semanticdb-table "generate.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_GENERATE_HPP_EAN_02_13_2007" variable (:constant-flag t) nil [495 534])
            ("boost/config.hpp" include (:system-flag t) nil [536 563])
            ("boost/version.hpp" include (:system-flag t) nil [564 592])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [593 630])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [631 682])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [683 737])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [738 794])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [795 858])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [859 924])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [925 954])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [955 993])
            ("boost/utility/result_of.hpp" include (:system-flag t) nil [994 1032])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [1033 1069])
            ("boost/proto/args.hpp" include (:system-flag t) nil [1070 1101])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("by_value_generator_" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [1315 1374])
                                    ("by_value_generator_" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [1696 1701])
                                            ("call" function
                                               (:typemodifiers ("static")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("proto::expr" type
                                                             (:template-specifier 
                                                                ( ("Tag" type nil nil nil)
                                                                  ("term" type nil nil nil)
                                                                  ("0"))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [1768 1808]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [1745 1905]))                                          
                                        :template-specifier 
                                          ( ("proto::expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1384 1916])
                                    ("by_value_generator_" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type "int") (reparse-symbol classsubparts) [2250 2255])
                                            ("call" function
                                               (:typemodifiers ("static")
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("proto::basic_expr" type
                                                             (:template-specifier 
                                                                ( ("Tag" type nil nil nil)
                                                                  ("term" type nil nil nil)
                                                                  ("0"))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [2322 2368]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [2299 2465]))                                          
                                        :template-specifier 
                                          ( ("proto::basic_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1926 2476]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1284 2611])
                            ("use_basic_expr" type
                               (:template 
                                  ( ("Generator" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("Generator" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [2861 2983])
                            ("default_generator" type
                               (:members 
                                  ( ("result" type
                                       (:template 
                                          ( ("Sig" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [3452 3497])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [3844 3858]))                                          
                                        :type "int")
                                        (reparse-symbol classsubparts) [3832 3906]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [3381 3913])
                            ("basic_default_generator" type
                               (:superclasses 
                                  ( ("proto::use_basic_expr" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [4399 4486])
                            ("generator" type
                               (:members 
                                  ( ("result" type
                                       (:template 
                                          ( ("Sig" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [5057 5102])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [5718 5732]))                                          
                                        :type ("Extends" type
                                             (:template-specifier 
                                                ( ("Expr" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [5692 5795]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [4957 5802])
                            ("pod_generator" type
                               (:members 
                                  ( ("result" type
                                       (:template 
                                          ( ("Sig" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [6500 6545])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7198 7212]))                                          
                                        :type ("Extends" type
                                             (:template-specifier 
                                                ( ("Expr" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol classsubparts) [7172 7301]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [6396 8406])
                            ("by_value_generator" type
                               (:members 
                                  ( ("result" type
                                       (:template 
                                          ( ("Sig" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [9137 9182])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [10033 10047]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [10016 10136]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [9065 10143])
                            ("compose_generators" type
                               (:template 
                                  ( ("First" type (:type "class") nil nil)
                                    ("Second" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("result" type
                                       (:template 
                                          ( ("Sig" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [10865 10910])
                                    ("()" function
                                       (:operator-flag t
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [12024 12038]))                                          
                                        :type ("type" type (:type "class") nil nil))
                                        (reparse-symbol classsubparts) [12007 12105]))                                  )
                                (reparse-symbol namespacesubparts) [10747 12112])
                            ("wants_basic_expr" type
                               (:template 
                                  ( ("Generator" type (:type "class") nil nil)
                                    ("Void" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::false_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [12289 12388])
                            ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [12513 12531])
                            ("is_callable" type
                               (:type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("default_generator" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [12559 12638])
                            ("is_callable" type
                               (:template-specifier 
                                  ( ("generator" type nil nil nil))                                  
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [12713 12779])
                            ("is_callable" type
                               (:template-specifier 
                                  ( ("pod_generator" type nil nil nil))                                  
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [12854 12924])
                            ("is_callable" type
                               (:type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("by_value_generator" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [12952 13032])
                            ("is_callable" type
                               (:template 
                                  ( ("First" type (:type "class") nil nil)
                                    ("Second" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("compose_generators" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [13060 13187]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1261 13190]))                  
                :type "namespace")
                nil [1243 13191])
            ("boost" type (:type "namespace") nil [13314 14379]))          
      :file "generate.hpp"
      :pointmax 14483
      :fsize 14482
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((punctuation 13823 . 13824) (semantic-list 13789 . 13823) (punctuation 13783 . 13784) (semantic-list 13777 . 13783) (symbol 13754 . 13777) (punctuation 13753 . 13754) (punctuation 13752 . 13753) (symbol 13747 . 13752) (punctuation 13746 . 13747) (symbol 13737 . 13746) (STRUCT 13730 . 13736) (punctuation 13724 . 13725) (symbol 13720 . 13724) (TYPENAME 13711 . 13719) (punctuation 13710 . 13711) (TEMPLATE 13702 . 13710) (punctuation 13695 . 13696) (semantic-list 13661 . 13695) (punctuation 13655 . 13656) (semantic-list 13649 . 13655) (symbol 13632 . 13649) (punctuation 13631 . 13632) (punctuation 13630 . 13631) (symbol 13625 . 13630) (punctuation 13624 . 13625) (symbol 13615 . 13624) (STRUCT 13608 . 13614) (punctuation 13602 . 13603) (symbol 13598 . 13602) (TYPENAME 13589 . 13597) (punctuation 13588 . 13589) (TEMPLATE 13580 . 13588) (punctuation 13573 . 13574) (semantic-list 13539 . 13573) (punctuation 13533 . 13534) (semantic-list 13527 . 13533) (symbol 13507 . 13527) (punctuation 13506 . 13507) (punctuation 13505 . 13506) (symbol 13500 . 13505) (punctuation 13499 . 13500) (symbol 13490 . 13499) (STRUCT 13483 . 13489) (punctuation 13477 . 13478) (symbol 13473 . 13477) (TYPENAME 13464 . 13472) (punctuation 13463 . 13464) (TEMPLATE 13455 . 13463) (punctuation 13448 . 13449) (semantic-list 13414 . 13448) (punctuation 13408 . 13409) (semantic-list 13402 . 13408) (symbol 13388 . 13402) (punctuation 13387 . 13388) (punctuation 13386 . 13387) (symbol 13381 . 13386) (punctuation 13380 . 13381) (symbol 13371 . 13380) (STRUCT 13364 . 13370) (punctuation 13358 . 13359) (symbol 13354 . 13358) (TYPENAME 13345 . 13353) (punctuation 13344 . 13345) (TEMPLATE 13336 . 13344) (punctuation 12848 . 12849) (symbol 12841 . 12848) (CLASS 12835 . 12840) (punctuation 12833 . 12834) (TYPENAME 12825 . 12833) (punctuation 12824 . 12825) (TEMPLATE 12816 . 12824) (punctuation 12815 . 12816) (TEMPLATE 12807 . 12815) (punctuation 12707 . 12708) (symbol 12700 . 12707) (CLASS 12694 . 12699) (punctuation 12692 . 12693) (TYPENAME 12684 . 12692) (punctuation 12683 . 12684) (TEMPLATE 12675 . 12683) (punctuation 12674 . 12675) (TEMPLATE 12666 . 12674) (punctuation 12511 . 12512) (punctuation 12503 . 12504) (symbol 12482 . 12503) (punctuation 12481 . 12482) (punctuation 12480 . 12481) (symbol 12471 . 12480) (TYPENAME 12462 . 12470) (punctuation 12460 . 12461) (symbol 12451 . 12460) (punctuation 12450 . 12451) (symbol 12434 . 12450) (STRUCT 12427 . 12433) (punctuation 12421 . 12422) (symbol 12412 . 12421) (TYPENAME 12403 . 12411) (punctuation 12402 . 12403) (TEMPLATE 12394 . 12402) (punctuation 12006 . 12007) (punctuation 12005 . 12006) (punctuation 12004 . 12005) (semantic-list 11998 . 12004) (symbol 11980 . 11998) (punctuation 11979 . 11980) (symbol 11973 . 11979) (TYPENAME 11964 . 11972) (symbol 11938 . 11955) (punctuation 11928 . 11929) (symbol 11924 . 11928) (TYPENAME 11915 . 11923) (punctuation 11914 . 11915) (TEMPLATE 11906 . 11914) (punctuation 11801 . 11802) (semantic-list 11599 . 11801) (punctuation 11589 . 11590) (semantic-list 11575 . 11589) (symbol 11571 . 11575) (punctuation 11570 . 11571) (symbol 11564 . 11570) (STRUCT 11557 . 11563) (punctuation 11547 . 11548) (symbol 11543 . 11547) (TYPENAME 11534 . 11542) (punctuation 11532 . 11533) (symbol 11528 . 11532) (TYPENAME 11519 . 11527) (punctuation 11518 . 11519) (TEMPLATE 11510 . 11518) (punctuation 11499 . 11500) (semantic-list 11297 . 11499) (punctuation 11287 . 11288) (semantic-list 11279 . 11287) (symbol 11275 . 11279) (punctuation 11274 . 11275) (symbol 11268 . 11274) (STRUCT 11261 . 11267) (punctuation 11251 . 11252) (symbol 11247 . 11251) (TYPENAME 11238 . 11246) (punctuation 11236 . 11237) (symbol 11232 . 11236) (TYPENAME 11223 . 11231) (punctuation 11222 . 11223) (TEMPLATE 11214 . 11222) (punctuation 11203 . 11204) (semantic-list 11001 . 11203) (punctuation 10991 . 10992) (semantic-list 10985 . 10991) (symbol 10981 . 10985) (punctuation 10980 . 10981) (symbol 10974 . 10980) (STRUCT 10967 . 10973) (punctuation 10957 . 10958) (symbol 10953 . 10957) (TYPENAME 10944 . 10952) (punctuation 10942 . 10943) (symbol 10938 . 10942) (TYPENAME 10929 . 10937) (punctuation 10928 . 10929) (TEMPLATE 10920 . 10928) (semantic-list 10853 . 10855) (symbol 10833 . 10853) (punctuation 10015 . 10016) (punctuation 10014 . 10015) (punctuation 10013 . 10014) (semantic-list 10007 . 10013) (symbol 9989 . 10007) (punctuation 9988 . 9989) (symbol 9982 . 9988) (TYPENAME 9973 . 9981) (symbol 9947 . 9964) (punctuation 9937 . 9938) (symbol 9933 . 9937) (TYPENAME 9924 . 9932) (punctuation 9923 . 9924) (TEMPLATE 9915 . 9923) (punctuation 9809 . 9810) (semantic-list 9695 . 9809) (punctuation 9685 . 9686) (semantic-list 9671 . 9685) (symbol 9667 . 9671) (punctuation 9666 . 9667) (symbol 9660 . 9666) (STRUCT 9653 . 9659) (punctuation 9643 . 9644) (symbol 9639 . 9643) (TYPENAME 9630 . 9638) (punctuation 9628 . 9629) (symbol 9624 . 9628) (TYPENAME 9615 . 9623) (punctuation 9614 . 9615) (TEMPLATE 9606 . 9614) (punctuation 9595 . 9596) (semantic-list 9481 . 9595) (punctuation 9471 . 9472) (semantic-list 9463 . 9471) (symbol 9459 . 9463) (punctuation 9458 . 9459) (symbol 9452 . 9458) (STRUCT 9445 . 9451) (punctuation 9435 . 9436) (symbol 9431 . 9435) (TYPENAME 9422 . 9430) (punctuation 9420 . 9421) (symbol 9416 . 9420) (TYPENAME 9407 . 9415) (punctuation 9406 . 9407) (TEMPLATE 9398 . 9406) (punctuation 9387 . 9388) (semantic-list 9273 . 9387) (punctuation 9263 . 9264) (semantic-list 9257 . 9263) (symbol 9253 . 9257) (punctuation 9252 . 9253) (symbol 9246 . 9252) (STRUCT 9239 . 9245) (punctuation 9229 . 9230) (symbol 9225 . 9229) (TYPENAME 9216 . 9224) (punctuation 9214 . 9215) (symbol 9210 . 9214) (TYPENAME 9201 . 9209) (punctuation 9200 . 9201) (TEMPLATE 9192 . 9200) (semantic-list 9125 . 9127) (symbol 9105 . 9125) (symbol 7146 . 7163) (punctuation 7136 . 7137) (symbol 7132 . 7136) (TYPENAME 7123 . 7131) (punctuation 7122 . 7123) (TEMPLATE 7114 . 7122) (punctuation 6983 . 6984) (semantic-list 6932 . 6983) (punctuation 6922 . 6923) (semantic-list 6908 . 6922) (symbol 6904 . 6908) (punctuation 6903 . 6904) (symbol 6897 . 6903) (STRUCT 6890 . 6896) (punctuation 6880 . 6881) (symbol 6876 . 6880) (TYPENAME 6867 . 6875) (punctuation 6865 . 6866) (symbol 6861 . 6865) (TYPENAME 6852 . 6860) (punctuation 6851 . 6852) (TEMPLATE 6843 . 6851) (punctuation 6832 . 6833) (semantic-list 6781 . 6832) (punctuation 6771 . 6772) (semantic-list 6763 . 6771) (symbol 6759 . 6763) (punctuation 6758 . 6759) (symbol 6752 . 6758) (STRUCT 6745 . 6751) (punctuation 6735 . 6736) (symbol 6731 . 6735) (TYPENAME 6722 . 6730) (punctuation 6720 . 6721) (symbol 6716 . 6720) (TYPENAME 6707 . 6715) (punctuation 6706 . 6707) (TEMPLATE 6698 . 6706) (punctuation 6687 . 6688) (semantic-list 6636 . 6687) (punctuation 6626 . 6627) (semantic-list 6620 . 6626) (symbol 6616 . 6620) (punctuation 6615 . 6616) (symbol 6609 . 6615) (STRUCT 6602 . 6608) (punctuation 6592 . 6593) (symbol 6588 . 6592) (TYPENAME 6579 . 6587) (punctuation 6577 . 6578) (symbol 6573 . 6577) (TYPENAME 6564 . 6572) (punctuation 6563 . 6564) (TEMPLATE 6555 . 6563) (semantic-list 6488 . 6490) (symbol 6462 . 6488) (semantic-list 6451 . 6453) (symbol 6431 . 6451) (punctuation 6390 . 6391) (symbol 6383 . 6390) (CLASS 6377 . 6382) (punctuation 6375 . 6376) (TYPENAME 6367 . 6375) (punctuation 6366 . 6367) (TEMPLATE 6358 . 6366) (punctuation 6357 . 6358) (TEMPLATE 6349 . 6357) (symbol 5666 . 5683) (punctuation 5656 . 5657) (symbol 5652 . 5656) (TYPENAME 5643 . 5651) (punctuation 5642 . 5643) (TEMPLATE 5634 . 5642) (punctuation 5540 . 5541) (semantic-list 5489 . 5540) (punctuation 5479 . 5480) (semantic-list 5465 . 5479) (symbol 5461 . 5465) (punctuation 5460 . 5461) (symbol 5454 . 5460) (STRUCT 5447 . 5453) (punctuation 5437 . 5438) (symbol 5433 . 5437) (TYPENAME 5424 . 5432) (punctuation 5422 . 5423) (symbol 5418 . 5422) (TYPENAME 5409 . 5417) (punctuation 5408 . 5409) (TEMPLATE 5400 . 5408) (punctuation 5389 . 5390) (semantic-list 5338 . 5389) (punctuation 5328 . 5329) (semantic-list 5320 . 5328) (symbol 5316 . 5320) (punctuation 5315 . 5316) (symbol 5309 . 5315) (STRUCT 5302 . 5308) (punctuation 5292 . 5293) (symbol 5288 . 5292) (TYPENAME 5279 . 5287) (punctuation 5277 . 5278) (symbol 5273 . 5277) (TYPENAME 5264 . 5272) (punctuation 5263 . 5264) (TEMPLATE 5255 . 5263) (punctuation 5244 . 5245) (semantic-list 5193 . 5244) (punctuation 5183 . 5184) (semantic-list 5177 . 5183) (symbol 5173 . 5177) (punctuation 5172 . 5173) (symbol 5166 . 5172) (STRUCT 5159 . 5165) (punctuation 5149 . 5150) (symbol 5145 . 5149) (TYPENAME 5136 . 5144) (punctuation 5134 . 5135) (symbol 5130 . 5134) (TYPENAME 5121 . 5129) (punctuation 5120 . 5121) (TEMPLATE 5112 . 5120) (semantic-list 5045 . 5047) (symbol 5019 . 5045) (semantic-list 5008 . 5010) (symbol 4988 . 5008) (punctuation 4951 . 4952) (symbol 4944 . 4951) (CLASS 4938 . 4943) (punctuation 4936 . 4937) (TYPENAME 4928 . 4936) (punctuation 4927 . 4928) (TEMPLATE 4919 . 4927) (punctuation 4918 . 4919) (TEMPLATE 4910 . 4918) (semantic-list 3803 . 3823) (symbol 3767 . 3803) (symbol 3741 . 3758) (punctuation 3731 . 3732) (symbol 3727 . 3731) (TYPENAME 3718 . 3726) (punctuation 3717 . 3718) (TEMPLATE 3709 . 3717) (punctuation 3630 . 3631) (semantic-list 3588 . 3630) (punctuation 3578 . 3579) (semantic-list 3572 . 3578) (symbol 3568 . 3572) (punctuation 3567 . 3568) (symbol 3561 . 3567) (STRUCT 3554 . 3560) (punctuation 3544 . 3545) (symbol 3540 . 3544) (TYPENAME 3531 . 3539) (punctuation 3529 . 3530) (symbol 3525 . 3529) (TYPENAME 3516 . 3524) (punctuation 3515 . 3516) (TEMPLATE 3507 . 3515) (semantic-list 3440 . 3442) (symbol 3420 . 3440) (semantic-list 2974 . 2976) (symbol 2948 . 2974) (spp-system-include "boost/proto/detail/generate_by_value.hpp" 2546 . 2605) (symbol 2269 . 2286) (punctuation 2236 . 2237) (number 2218 . 2219) (punctuation 2216 . 2217) (punctuation 2196 . 2197) (symbol 2186 . 2196) (punctuation 2185 . 2186) (punctuation 2184 . 2185) (punctuation 2183 . 2184) (symbol 2180 . 2183) (punctuation 2179 . 2180) (symbol 2168 . 2179) (punctuation 2167 . 2168) (punctuation 2166 . 2167) (symbol 2160 . 2166) (TYPENAME 2151 . 2159) (punctuation 2150 . 2151) (symbol 2146 . 2150) (punctuation 2144 . 2145) (symbol 2122 . 2125) (punctuation 2100 . 2101) (symbol 2090 . 2100) (punctuation 2089 . 2090) (punctuation 2088 . 2089) (symbol 2083 . 2088) (TYPEDEF 2059 . 2066) (symbol 1715 . 1732) (punctuation 1682 . 1683) (number 1664 . 1665) (punctuation 1662 . 1663) (punctuation 1642 . 1643) (symbol 1632 . 1642) (punctuation 1631 . 1632) (punctuation 1630 . 1631) (punctuation 1629 . 1630) (symbol 1626 . 1629) (punctuation 1625 . 1626) (symbol 1614 . 1625) (punctuation 1613 . 1614) (punctuation 1612 . 1613) (symbol 1606 . 1612) (TYPENAME 1597 . 1605) (punctuation 1596 . 1597) (symbol 1592 . 1596) (punctuation 1590 . 1591) (symbol 1568 . 1571) (punctuation 1546 . 1547) (symbol 1542 . 1546) (punctuation 1541 . 1542) (punctuation 1540 . 1541) (symbol 1535 . 1540) (TYPEDEF 1511 . 1518))
      :lexical-table 
        '(("BOOST_PROTO_GENERATE_HPP_EAN_02_13_2007")
          )
)
    (semanticdb-table "args.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_ARGS_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [437 472])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [474 511])
            ("boost/preprocessor/arithmetic/dec.hpp" include (:system-flag t) nil [512 560])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [561 612])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [613 669])
            ("boost/preprocessor/repetition/repeat.hpp" include (:system-flag t) nil [670 721])
            ("boost/preprocessor/repetition/repeat_from_to.hpp" include (:system-flag t) nil [722 781])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [782 809])
            ("boost/mpl/void.hpp" include (:system-flag t) nil [810 839])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [840 876])
            ("boost/proto/detail/is_noncopyable.hpp" include (:system-flag t) nil [877 925])
            ("boost/mpl/or.hpp" include (:system-flag t) nil [927 954])
            ("boost/type_traits/is_function.hpp" include (:system-flag t) nil [955 999])
            ("boost/type_traits/is_abstract.hpp" include (:system-flag t) nil [1000 1044])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("expr_traits" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1216 1240])
                                            ("reference" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1261 1277])
                                            ("const_reference" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1298 1326]))                                          )
                                        (reparse-symbol namespacesubparts) [1143 1337])
                                    ("expr_traits" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1454 1478])
                                            ("reference" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1499 1515])
                                            ("const_reference" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1536 1558]))                                          
                                        :template-specifier 
                                          ( ("Expr" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1373 1569])
                                    ("expr_traits" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1692 1716])
                                            ("reference" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1737 1759])
                                            ("const_reference" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1780 1808]))                                          
                                        :template-specifier 
                                          ( ("Expr" type
                                               (:reference 1
                                                :constant-flag t)
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1605 1819])
                                    ("term_traits" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value_type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1925 1946])
                                            ("reference" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1967 1980])
                                            ("const_reference" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2001 2026]))                                          )
                                        (reparse-symbol namespacesubparts) [1855 2037])
                                    ("term_traits" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2210 2226])
                                            ("reference" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2247 2260])
                                            ("const_reference" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2281 2300]))                                          
                                        :template-specifier 
                                          ( ("T" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2073 2311])
                                    ("term_traits" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("value_type" type
                                               (:typedef ("T" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2428 2449])
                                            ("reference" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2470 2489])
                                            ("const_reference" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2510 2535]))                                          
                                        :template-specifier 
                                          ( ("T" type
                                               (:reference 1
                                                :constant-flag t)
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2347 2546])
                                    ("T" function (:type "int") (reparse-symbol namespacesubparts) [2645 2653]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1086 3586])
                            ("argsns_" type (:type "namespace") (reparse-symbol namespacesubparts) [3592 3748]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1064 3751]))                  
                :type "namespace")
                nil [1046 3752]))          
      :file "args.hpp"
      :pointmax 3762
      :fsize 3761
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((spp-system-include "boost/proto/detail/args.hpp" 3696 . 3742) (punctuation 3579 . 3580) (semantic-list 3435 . 3579) (punctuation 3425 . 3426) (semantic-list 3422 . 3425) (CONST 3417 . 3422) (symbol 3415 . 3416) (punctuation 3414 . 3415) (symbol 3403 . 3414) (STRUCT 3396 . 3402) (punctuation 3386 . 3387) (symbol 3385 . 3386) (symbol 3378 . 3384) (punctuation 3377 . 3378) (punctuation 3376 . 3377) (symbol 3373 . 3376) (punctuation 3371 . 3372) (symbol 3370 . 3371) (TYPENAME 3361 . 3369) (punctuation 3360 . 3361) (TEMPLATE 3352 . 3360) (punctuation 3315 . 3316) (semantic-list 3177 . 3315) (punctuation 3167 . 3168) (semantic-list 3164 . 3167) (symbol 3163 . 3164) (punctuation 3162 . 3163) (symbol 3151 . 3162) (STRUCT 3144 . 3150) (punctuation 3134 . 3135) (symbol 3133 . 3134) (symbol 3126 . 3132) (punctuation 3125 . 3126) (punctuation 3124 . 3125) (symbol 3121 . 3124) (punctuation 3119 . 3120) (symbol 3118 . 3119) (TYPENAME 3109 . 3117) (punctuation 3108 . 3109) (TEMPLATE 3100 . 3108) (punctuation 3063 . 3064) (semantic-list 2919 . 3063) (punctuation 2909 . 2910) (semantic-list 2906 . 2909) (semantic-list 2903 . 2906) (CONST 2897 . 2902) (symbol 2895 . 2896) (punctuation 2894 . 2895) (symbol 2883 . 2894) (STRUCT 2876 . 2882) (punctuation 2866 . 2867) (symbol 2865 . 2866) (symbol 2858 . 2864) (punctuation 2857 . 2858) (punctuation 2856 . 2857) (symbol 2853 . 2856) (punctuation 2851 . 2852) (symbol 2850 . 2851) (TYPENAME 2841 . 2849) (punctuation 2840 . 2841) (TEMPLATE 2832 . 2840) (punctuation 2795 . 2796) (semantic-list 2663 . 2795) (punctuation 2653 . 2654) (punctuation 2648 . 2649) (punctuation 2644 . 2645) (symbol 2633 . 2644) (STRUCT 2626 . 2632) (punctuation 2616 . 2617) (symbol 2615 . 2616) (symbol 2608 . 2614) (punctuation 2607 . 2608) (punctuation 2606 . 2607) (symbol 2603 . 2606) (punctuation 2601 . 2602) (symbol 2600 . 2601) (TYPENAME 2591 . 2599) (punctuation 2590 . 2591) (TEMPLATE 2582 . 2590) (TYPEDEF 2502 . 2509) (TYPEDEF 2462 . 2469) (TYPEDEF 2273 . 2280) (TYPEDEF 2239 . 2246) (punctuation 2209 . 2210) (punctuation 2208 . 2209) (punctuation 2207 . 2208) (symbol 2206 . 2207) (punctuation 2204 . 2205) (punctuation 2203 . 2204) (symbol 2201 . 2202) (punctuation 2199 . 2200) (symbol 2194 . 2199) (punctuation 2193 . 2194) (punctuation 2192 . 2193) (punctuation 2191 . 2192) (symbol 2190 . 2191) (punctuation 2189 . 2190) (symbol 2175 . 2189) (punctuation 2174 . 2175) (symbol 2170 . 2174) (punctuation 2169 . 2170) (punctuation 2168 . 2169) (symbol 2165 . 2168) (TYPENAME 2156 . 2164) (TYPEDEF 2148 . 2155) (TYPEDEF 1993 . 2000) (TYPEDEF 1959 . 1966) (TYPEDEF 1772 . 1779) (TYPEDEF 1729 . 1736) (TYPEDEF 1528 . 1535) (TYPEDEF 1491 . 1498) (TYPEDEF 1290 . 1297) (TYPEDEF 1253 . 1260))
      :lexical-table 
        '(("BOOST_PROTO_ARGS_HPP_EAN_04_01_2005")
          )
)
    (semanticdb-table "tags.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_TAGS_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [408 443])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [445 481])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("tagns_" type
                               (:members 
                                  ( ("tag" type
                                       (:members 
                                          ( ("terminal" type (:type "struct") (reparse-symbol namespacesubparts) [627 646])
                                            ("unary_plus" type (:type "struct") (reparse-symbol namespacesubparts) [695 716])
                                            ("negate" type (:type "struct") (reparse-symbol namespacesubparts) [765 782])
                                            ("dereference" type (:type "struct") (reparse-symbol namespacesubparts) [831 853])
                                            ("complement" type (:type "struct") (reparse-symbol namespacesubparts) [902 923])
                                            ("address_of" type (:type "struct") (reparse-symbol namespacesubparts) [972 993])
                                            ("logical_not" type (:type "struct") (reparse-symbol namespacesubparts) [1042 1064])
                                            ("pre_inc" type (:type "struct") (reparse-symbol namespacesubparts) [1121 1139])
                                            ("pre_dec" type (:type "struct") (reparse-symbol namespacesubparts) [1196 1214])
                                            ("post_inc" type (:type "struct") (reparse-symbol namespacesubparts) [1272 1291])
                                            ("post_dec" type (:type "struct") (reparse-symbol namespacesubparts) [1349 1368])
                                            ("shift_left" type (:type "struct") (reparse-symbol namespacesubparts) [1421 1442])
                                            ("shift_right" type (:type "struct") (reparse-symbol namespacesubparts) [1495 1517])
                                            ("multiplies" type (:type "struct") (reparse-symbol namespacesubparts) [1567 1588])
                                            ("divides" type (:type "struct") (reparse-symbol namespacesubparts) [1638 1656])
                                            ("modulus" type (:type "struct") (reparse-symbol namespacesubparts) [1706 1724])
                                            ("plus" type (:type "struct") (reparse-symbol namespacesubparts) [1774 1789])
                                            ("minus" type (:type "struct") (reparse-symbol namespacesubparts) [1839 1855])
                                            ("less" type (:type "struct") (reparse-symbol namespacesubparts) [1906 1921])
                                            ("greater" type (:type "struct") (reparse-symbol namespacesubparts) [1972 1990])
                                            ("less_equal" type (:type "struct") (reparse-symbol namespacesubparts) [2042 2063])
                                            ("greater_equal" type (:type "struct") (reparse-symbol namespacesubparts) [2115 2139])
                                            ("equal_to" type (:type "struct") (reparse-symbol namespacesubparts) [2190 2209])
                                            ("not_equal_to" type (:type "struct") (reparse-symbol namespacesubparts) [2260 2283])
                                            ("logical_or" type (:type "struct") (reparse-symbol namespacesubparts) [2334 2355])
                                            ("logical_and" type (:type "struct") (reparse-symbol namespacesubparts) [2406 2428])
                                            ("bitwise_and" type (:type "struct") (reparse-symbol namespacesubparts) [2478 2500])
                                            ("bitwise_or" type (:type "struct") (reparse-symbol namespacesubparts) [2550 2571])
                                            ("bitwise_xor" type (:type "struct") (reparse-symbol namespacesubparts) [2621 2643])
                                            ("comma" type (:type "struct") (reparse-symbol namespacesubparts) [2693 2709])
                                            ("mem_ptr" type (:type "struct") (reparse-symbol namespacesubparts) [2761 2779])
                                            ("assign" type (:type "struct") (reparse-symbol namespacesubparts) [2829 2846])
                                            ("shift_left_assign" type (:type "struct") (reparse-symbol namespacesubparts) [2900 2928])
                                            ("shift_right_assign" type (:type "struct") (reparse-symbol namespacesubparts) [2982 3011])
                                            ("multiplies_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3062 3090])
                                            ("divides_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3141 3166])
                                            ("modulus_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3217 3242])
                                            ("plus_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3293 3315])
                                            ("minus_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3366 3389])
                                            ("bitwise_and_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3440 3469])
                                            ("bitwise_or_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3520 3548])
                                            ("bitwise_xor_assign" type (:type "struct") (reparse-symbol namespacesubparts) [3599 3628])
                                            ("subscript" type (:type "struct") (reparse-symbol namespacesubparts) [3686 3706])
                                            ("member" type (:type "struct") (reparse-symbol namespacesubparts) [3766 3783])
                                            ("if_else_" type (:type "struct") (reparse-symbol namespacesubparts) [3847 3866])
                                            ("function" type (:type "struct") (reparse-symbol namespacesubparts) [3927 3946]))                                          
                                        :type "namespace")
                                        (reparse-symbol namespacesubparts) [538 3949]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [519 3950]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [501 3951]))                  
                :type "namespace")
                nil [483 3952]))          
      :file "tags.hpp"
      :pointmax 3961
      :fsize 3960
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_PROTO_TAGS_HPP_EAN_04_01_2005")
          )
)
    (semanticdb-table "eval.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_EVAL_HPP_EAN_03_29_2007" variable (:constant-flag t) nil [390 425])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [427 463])
            ("boost/type_traits/remove_reference.hpp" include (:system-flag t) nil [488 537])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("result_of" type
                               (:members 
                                  ( ("eval" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("Context" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1110 1127]))                                          )
                                        (reparse-symbol namespacesubparts) [979 1138]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [580 1144])
                            ("functional" type
                               (:members 
                                  ( ("eval" type
                                       (:members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [1393 1442])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr" type (:type "class") nil nil)
                                                    ("Context" type (:type "class") nil nil))                                                  
                                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2339 2347])
                                                    ("ctx" variable
                                                       (:reference 1
                                                        :type ("Context" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2348 2361]))                                                  
                                                :typemodifiers ("typename")
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [2208 2467])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr" type (:type "class") nil nil)
                                                    ("Context" type (:type "class") nil nil))                                                  
                                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2654 2662])
                                                    ("ctx" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Context" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2663 2682]))                                                  
                                                :typemodifiers ("typename")
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [2523 2788])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr" type (:type "class") nil nil)
                                                    ("Context" type (:type "class") nil nil))                                                  
                                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2981 2995])
                                                    ("ctx" variable
                                                       (:reference 1
                                                        :type ("Context" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2996 3009]))                                                  
                                                :typemodifiers ("typename")
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [2844 3121])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr" type (:type "class") nil nil)
                                                    ("Context" type (:type "class") nil nil))                                                  
                                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3314 3328])
                                                    ("ctx" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Context" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3329 3348]))                                                  
                                                :typemodifiers ("typename")
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [3177 3460]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1323 3471]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1150 3477])
                            ("eval" function
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil)
                                    ("Context" type (:type "class") nil nil))                                  
                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3895 3903])
                                    ("ctx" variable
                                       (:reference 1
                                        :type ("Context" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3904 3917]))                                  
                                :typemodifiers ("typename"))
                                (reparse-symbol namespacesubparts) [3787 3993])
                            ("eval" function
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil)
                                    ("Context" type (:type "class") nil nil))                                  
                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4133 4141])
                                    ("ctx" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Context" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4142 4161]))                                  
                                :typemodifiers ("typename"))
                                (reparse-symbol namespacesubparts) [4025 4237])
                            ("eval" function
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil)
                                    ("Context" type (:type "class") nil nil))                                  
                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4383 4397])
                                    ("ctx" variable
                                       (:reference 1
                                        :type ("Context" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4398 4411]))                                  
                                :typemodifiers ("typename"))
                                (reparse-symbol namespacesubparts) [4269 4493])
                            ("eval" function
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil)
                                    ("Context" type (:type "class") nil nil))                                  
                                :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4639 4653])
                                    ("ctx" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Context" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4654 4673]))                                  
                                :typemodifiers ("typename"))
                                (reparse-symbol namespacesubparts) [4525 4755]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [557 4757]))                  
                :type "namespace")
                nil [539 4758]))          
      :file "eval.hpp"
      :pointmax 4767
      :fsize 4766
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((punctuation 1841 . 1842) (semantic-list 1572 . 1841) (punctuation 1558 . 1559) (semantic-list 1543 . 1558) (symbol 1539 . 1543) (punctuation 1538 . 1539) (symbol 1532 . 1538) (STRUCT 1525 . 1531) (punctuation 1511 . 1512) (symbol 1504 . 1511) (TYPENAME 1495 . 1503) (punctuation 1493 . 1494) (symbol 1489 . 1493) (TYPENAME 1480 . 1488) (punctuation 1478 . 1479) (symbol 1474 . 1478) (TYPENAME 1465 . 1473) (punctuation 1464 . 1465) (TEMPLATE 1456 . 1464) (semantic-list 1377 . 1379) (symbol 1357 . 1377) (punctuation 1109 . 1110) (punctuation 1108 . 1109) (punctuation 1107 . 1108) (symbol 1103 . 1107) (punctuation 1102 . 1103) (symbol 1098 . 1102) (TEMPLATE 1089 . 1097) (punctuation 1088 . 1089) (punctuation 1087 . 1088) (symbol 1080 . 1087) (TYPENAME 1071 . 1079) (TYPEDEF 1063 . 1070))
      :lexical-table 
        '(("BOOST_PROTO_EVAL_HPP_EAN_03_29_2007")
          )
)
    (semanticdb-table "expr.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_EXPR_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [396 431])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [433 470])
            ("boost/preprocessor/arithmetic/dec.hpp" include (:system-flag t) nil [471 519])
            ("boost/preprocessor/selection/max.hpp" include (:system-flag t) nil [520 567])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [568 619])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [620 674])
            ("boost/preprocessor/repetition/repeat.hpp" include (:system-flag t) nil [675 726])
            ("boost/preprocessor/repetition/repeat_from_to.hpp" include (:system-flag t) nil [727 786])
            ("boost/preprocessor/repetition/enum_trailing.hpp" include (:system-flag t) nil [787 845])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [846 902])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [903 966])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [967 1032])
            ("boost/preprocessor/repetition/enum_trailing_binary_params.hpp" include (:system-flag t) nil [1033 1105])
            ("boost/utility/addressof.hpp" include (:system-flag t) nil [1106 1144])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [1145 1181])
            ("boost/proto/args.hpp" include (:system-flag t) nil [1182 1213])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [1214 1247])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("not_a_valid_type" type
                                       (:members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [1731 1739])
                                            ("not_a_valid_type" function
                                               (:constructor-flag t
                                                :type ("not_a_valid_type" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [1752 1785]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [1689 1796])
                                    ("address_of_hack" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("not_a_valid_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1904 1934]))                                          )
                                        (reparse-symbol namespacesubparts) [1814 1945])
                                    ("address_of_hack" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :pointer 1
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [2064 2083]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::address_of" type nil nil nil)
                                            ("Expr" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1955 2094])
                                    ("make_terminal" function
                                       (:arguments 
                                          ( ("t" variable
                                               (:reference 1
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2208 2213])
                                            ("" variable
                                               (:pointer 1
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2214 2221])
                                            ("" variable
                                               (:pointer 1
                                                :type ("proto::term" type
                                                     (:template-specifier 
                                                        ( ("Arg0" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil))
                                                (reparse-symbol arg-sub-list) [2222 2242]))                                          
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [2189 2316])
                                    ("make_terminal" function
                                       (:arguments 
                                          ( ("" variable (:type ("T" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2445 2451])
                                            ("" variable
                                               (:pointer 1
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2456 2463])
                                            ("" variable (:type ("proto::term" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2464 2476])
                                            ("" variable (:type ("Arg0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2476 2483]))                                          
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [2426 2669])
                                    ("make_terminal" function
                                       (:arguments 
                                          ( ("" variable
                                               (:constant-flag t
                                                :type ("T" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2798 2809])
                                            ("" variable
                                               (:pointer 1
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [2814 2821])
                                            ("" variable (:type ("proto::term" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2822 2834])
                                            ("" variable (:type ("Arg0" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2834 2841]))                                          
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [2779 3027])
                                    ("same_cv" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("U" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3629 3644]))                                          )
                                        (reparse-symbol namespacesubparts) [3551 3655])
                                    ("same_cv" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("U" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3755 3776]))                                          
                                        :template-specifier 
                                          ( ("T" type (:constant-flag t) nil nil)
                                            ("U" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3665 3787]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1658 3793])
                            ("result_of" type
                               (:members 
                                  ( ("funop" type
                                       (:template 
                                          ( ("Sig" type (:type "class") nil nil)
                                            ("This" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [3951 4027]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [3799 4082])
                            ("exprns_" type (:type "namespace") (reparse-symbol namespacesubparts) [4088 4389])
                            ("unexpr" type
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("unexpr" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [4685 4699]))                                          
                                        :type ("unexpr" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [4678 4730]))                                  
                                :superclasses 
                                  ( ("Expr" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [4544 4778]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1635 4781]))                  
                :type "namespace")
                nil [1617 4782]))          
      :file "expr.hpp"
      :pointmax 4882
      :fsize 4881
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((punctuation 4770 . 4771) (punctuation 4769 . 4770) (OPERATOR 4760 . 4768) (punctuation 4759 . 4760) (punctuation 4758 . 4759) (symbol 4754 . 4758) (USING 4748 . 4753) (EXPLICIT 4669 . 4677) (symbol 4643 . 4660) (semantic-list 4631 . 4633) (symbol 4613 . 4631) (spp-system-include "boost/proto/detail/expr.hpp" 4337 . 4383) (spp-system-include "boost/proto/detail/basic_expr.hpp" 4201 . 4253) (spp-system-include "boost/proto/detail/funop.hpp" 4029 . 4076) (punctuation 2843 . 2844) (punctuation 2841 . 2842) (semantic-list 2838 . 2841) (punctuation 2833 . 2834) (semantic-list 2809 . 2812) (semantic-list 2805 . 2809) (symbol 2753 . 2770) (punctuation 2743 . 2744) (symbol 2742 . 2743) (symbol 2735 . 2741) (punctuation 2734 . 2735) (punctuation 2733 . 2734) (symbol 2730 . 2733) (punctuation 2728 . 2729) (symbol 2724 . 2728) (TYPENAME 2715 . 2723) (punctuation 2713 . 2714) (symbol 2709 . 2713) (TYPENAME 2700 . 2708) (punctuation 2698 . 2699) (symbol 2697 . 2698) (TYPENAME 2688 . 2696) (punctuation 2687 . 2688) (TEMPLATE 2679 . 2687) (punctuation 2485 . 2486) (punctuation 2483 . 2484) (semantic-list 2480 . 2483) (punctuation 2475 . 2476) (semantic-list 2451 . 2454) (semantic-list 2447 . 2451) (symbol 2400 . 2417) (punctuation 2390 . 2391) (symbol 2389 . 2390) (symbol 2382 . 2388) (punctuation 2381 . 2382) (punctuation 2380 . 2381) (symbol 2377 . 2380) (punctuation 2375 . 2376) (symbol 2371 . 2375) (TYPENAME 2362 . 2370) (punctuation 2360 . 2361) (symbol 2356 . 2360) (TYPENAME 2347 . 2355) (punctuation 2345 . 2346) (symbol 2344 . 2345) (TYPENAME 2335 . 2343) (punctuation 2334 . 2335) (TEMPLATE 2326 . 2334) (symbol 2163 . 2180) (punctuation 2153 . 2154) (symbol 2149 . 2153) (TYPENAME 2140 . 2148) (punctuation 2138 . 2139) (symbol 2134 . 2138) (TYPENAME 2125 . 2133) (punctuation 2123 . 2124) (symbol 2122 . 2123) (TYPENAME 2113 . 2121) (punctuation 2112 . 2113) (TEMPLATE 2104 . 2112))
      :lexical-table 
        '(("BOOST_PROTO_EXPR_HPP_EAN_04_01_2005")
          )
)
    (semanticdb-table "repeat.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_REPEAT_HPP_EAN_11_24_2008" variable (:constant-flag t) nil [422 459])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [461 498])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [499 553])
            ("boost/preprocessor/repetition/enum.hpp" include (:system-flag t) nil [554 603])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [604 660])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [661 724])
            ("boost/preprocessor/iteration/local.hpp" include (:system-flag t) nil [725 774])
            ("boost/preprocessor/tuple/elem.hpp" include (:system-flag t) nil [775 819])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [820 856])
            ("BOOST_PROTO_ref_a_aux" variable (:constant-flag t) nil [958 979])
            ("BOOST_PROTO_typename_A" variable (:constant-flag t) nil [1121 1143])
            ("BOOST_PROTO_A_const_ref" variable (:constant-flag t) nil [1279 1302])
            ("BOOST_PROTO_A_ref" variable (:constant-flag t) nil [1452 1469])
            ("BOOST_PROTO_A" variable (:constant-flag t) nil [1609 1622])
            ("BOOST_PROTO_A_const" variable (:constant-flag t) nil [1745 1764])
            ("BOOST_PROTO_A_const_ref_a" variable (:constant-flag t) nil [1901 1926])
            ("BOOST_PROTO_A_ref_a" variable (:constant-flag t) nil [2068 2087])
            ("BOOST_PROTO_ref_a" variable (:constant-flag t) nil [2239 2256])
            ("BOOST_PROTO_a" variable (:constant-flag t) nil [2377 2390])
            ("BOOST_PROTO_invoke" variable (:constant-flag t) nil [2502 2520])
            ("BOOST_PROTO_REPEAT_FROM_TO_EX" variable (:constant-flag t) nil [3127 3156])
            ("BOOST_PROTO_REPEAT_FROM_TO" variable (:constant-flag t) nil [6137 6163])
            ("BOOST_PROTO_REPEAT_EX" variable (:constant-flag t) nil [6743 6764])
            ("BOOST_PROTO_REPEAT" variable (:constant-flag t) nil [7574 7592])
            ("BOOST_PROTO_LOCAL_ITERATE" variable (:constant-flag t) nil [11318 11343]))          
      :file "repeat.hpp"
      :pointmax 11385
      :fsize 11384
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax nil
      :lexical-table 
        '(("BOOST_PROTO_ref_a_aux" (spp-arg-list ("Z" "N" "DATA") 979 . 991) . 
              ((symbol "boost" 995 . 1000) (punctuation ":" 1000 . 1001) (punctuation ":" 1001 . 1002) (symbol "ref" 1002 . 1005) (semantic-list "(BOOST_PP_CAT(proto_a, N))" 1005 . 1031)))
          ("BOOST_PROTO_REPEAT_FROM_TO_EX" (spp-arg-list ("FROM" "TO" "MACRO" "typename_A" "A" "A_a" "a") 3156 . 3196) . ((symbol "BOOST_PP_REPEAT_FROM_TO" 3200 . 3223) (semantic-list "(FROM, TO, BOOST_PROTO_invoke, (MACRO, typename_A, A, A_a, a))" 3223 . 3285)))
          ("BOOST_PROTO_LOCAL_ITERATE" (spp-arg-list nil 11343 . 11345) . 
              ((punctuation "<" 11346 . 11347) (symbol "boost" 11347 . 11352) (punctuation "/" 11352 . 11353) (symbol "proto" 11353 . 11358) (punctuation "/" 11358 . 11359) (symbol "detail" 11359 . 11365) (punctuation "/" 11365 . 11366) (symbol "local" 11366 . 11371) (punctuation "." 11371 . 11372) (symbol "hpp" 11372 . 11375) (punctuation ">" 11375 . 11376)))
          ("BOOST_PROTO_a" (spp-arg-list ("N") 2390 . 2393) . ((symbol "BOOST_PP_ENUM_PARAMS" 2397 . 2417) (semantic-list "(N, proto_a)" 2417 . 2429)))
          ("BOOST_PROTO_ref_a" (spp-arg-list ("N") 2256 . 2259) . ((symbol "BOOST_PP_ENUM" 2263 . 2276) (semantic-list "(N, BOOST_PROTO_ref_a_aux, ~)" 2276 . 2305)))
          ("BOOST_PROTO_invoke" (spp-arg-list ("Z" "N" "DATA") 2520 . 2532) . 
              ((symbol "BOOST_PP_TUPLE_ELEM" 2536 . 2555) (semantic-list "(5,0,DATA)" 2555 . 2565) (semantic-list "(N, BOOST_PP_TUPLE_ELEM(5,1,DATA), BOOST_PP_TUPLE_ELEM(5,2,DATA), BOOST_PP_TUPLE_ELEM(5,3,DATA), BOOST_PP_TUPLE_ELEM(5,4,DATA))" 2565 . 2692)))
          ("BOOST_PROTO_REPEAT_FROM_TO" (spp-arg-list ("FROM" "TO" "MACRO") 6163 . 6180) . ((symbol "BOOST_PROTO_REPEAT_FROM_TO_EX" 6184 . 6213) (semantic-list "(FROM, TO, MACRO, BOOST_PROTO_typename_A, BOOST_PROTO_A_const_ref, BOOST_PROTO_A_const_ref_a, BOOST_PROTO_ref_a)" 6213 . 6325)))
          ("BOOST_PROTO_A_const_ref_a" (spp-arg-list ("N") 1926 . 1929) . ((symbol "BOOST_PP_ENUM_BINARY_PARAMS" 1933 . 1960) (semantic-list "(N, proto_A, const &proto_a)" 1960 . 1988)))
          ("BOOST_PROTO_REPEAT_HPP_EAN_11_24_2008")
          ("BOOST_PROTO_A_ref" (spp-arg-list ("N") 1469 . 1472) . ((symbol "BOOST_PP_ENUM_BINARY_PARAMS" 1476 . 1503) (semantic-list "(N, proto_A, & BOOST_PP_INTERCEPT)" 1503 . 1537)))
          ("BOOST_PROTO_REPEAT_EX" (spp-arg-list ("MACRO" "typename_A" "A" "A_a" "a") 6764 . 6794) . ((symbol "BOOST_PROTO_REPEAT_FROM_TO_EX" 6798 . 6827) (semantic-list "(1, BOOST_PP_INC(BOOST_PROTO_MAX_ARITY), MACRO, BOOST_PROTO_typename_A, BOOST_PROTO_A_const_ref, BOOST_PROTO_A_const_ref_a, BOOST_PROTO_ref_a)" 6827 . 6969)))
          ("BOOST_PROTO_typename_A" (spp-arg-list ("N") 1143 . 1146) . ((symbol "BOOST_PP_ENUM_PARAMS" 1150 . 1170) (semantic-list "(N, typename proto_A)" 1170 . 1191)))
          ("BOOST_PROTO_A" (spp-arg-list ("N") 1622 . 1625) . ((symbol "BOOST_PP_ENUM_PARAMS" 1629 . 1649) (semantic-list "(N, proto_A)" 1649 . 1661)))
          ("BOOST_PROTO_A_const" (spp-arg-list ("N") 1764 . 1767) . ((symbol "BOOST_PP_ENUM_PARAMS" 1771 . 1791) (semantic-list "(N, const proto_A)" 1791 . 1809)))
          ("BOOST_PROTO_A_const_ref" (spp-arg-list ("N") 1302 . 1305) . ((symbol "BOOST_PP_ENUM_BINARY_PARAMS" 1309 . 1336) (semantic-list "(N, proto_A, const & BOOST_PP_INTERCEPT)" 1336 . 1376)))
          ("BOOST_PROTO_A_ref_a" (spp-arg-list ("N") 2087 . 2090) . ((symbol "BOOST_PP_ENUM_BINARY_PARAMS" 2094 . 2121) (semantic-list "(N, proto_A, &proto_a)" 2121 . 2143)))
          ("BOOST_PROTO_REPEAT" (spp-arg-list ("MACRO") 7592 . 7599) . ((symbol "BOOST_PROTO_REPEAT_FROM_TO" 7603 . 7629) (semantic-list "(1, BOOST_PP_INC(BOOST_PROTO_MAX_ARITY), MACRO)" 7629 . 7676)))
          )
)
    (semanticdb-table "fusion.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_FUSION_HPP_EAN_11_04_2006" variable (:constant-flag t) nil [402 439])
            ("boost/config.hpp" include (:system-flag t) nil [441 468])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [469 496])
            ("boost/mpl/bool.hpp" include (:system-flag t) nil [497 526])
            ("boost/mpl/long.hpp" include (:system-flag t) nil [527 556])
            ("boost/mpl/sequence_tag_fwd.hpp" include (:system-flag t) nil [557 598])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [599 637])
            ("boost/fusion/include/is_view.hpp" include (:system-flag t) nil [638 681])
            ("boost/fusion/include/tag_of_fwd.hpp" include (:system-flag t) nil [682 728])
            ("boost/fusion/include/category_of.hpp" include (:system-flag t) nil [729 776])
            ("boost/fusion/include/iterator_base.hpp" include (:system-flag t) nil [777 826])
            ("boost/fusion/include/intrinsic.hpp" include (:system-flag t) nil [827 872])
            ("boost/fusion/include/single_view.hpp" include (:system-flag t) nil [873 920])
            ("boost/fusion/include/transform.hpp" include (:system-flag t) nil [921 966])
            ("boost/fusion/include/as_list.hpp" include (:system-flag t) nil [967 1010])
            ("boost/fusion/include/is_segmented.hpp" include (:system-flag t) nil [1011 1059])
            ("boost/fusion/sequence/comparison/enable_comparison.hpp" include (:system-flag t) nil [1060 1125])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [1126 1162])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [1163 1196])
            ("boost/proto/eval.hpp" include (:system-flag t) nil [1197 1228])
            ("boost/proto/make_expr.hpp" include (:system-flag t) nil [1229 1265])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("expr_iterator" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("expr_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1785 1808])
                                            ("index" variable
                                               (:typemodifiers ("static")
                                                :constant-flag t
                                                :default-value "Pos"
                                                :type "long")
                                                (reparse-symbol classsubparts) [1821 1851])
                                            ("category" type
                                               (:typedef ("fusion::random_access_traversal_tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1864 1917])
                                            ("fusion_tag" variable (:type "int") (reparse-symbol classsubparts) [2103 2114])
                                            ("expr_iterator" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2151 2159]))                                                  
                                                :type ("expr_iterator" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [2137 2198])
                                            ("expr" variable (:type ("Expr" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2212 2223]))                                          
                                        :superclasses 
                                          ( ("fusion::iterator_base" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1639 2234])
                                    ("as_element" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [2315 2364])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2938 2946]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [2903 3049])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3177 3191]))                                                  
                                                :type ("type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [3142 3300]))                                          )
                                        (reparse-symbol namespacesubparts) [2244 3311])
                                    ("flat_view" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("category" type
                                               (:typedef ("fusion::forward_traversal_tag" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [3444 3491])
                                            ("fusion_tag" variable (:type "int") (reparse-symbol classsubparts) [3673 3684])
                                            ("segments_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3954 3985])
                                            ("flat_view" function
                                               (:constructor-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [4018 4026]))                                                  
                                                :type ("flat_view" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [4008 4142])
                                            ("segs_" variable (:type ("segments_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4156 4176]))                                          
                                        :superclasses 
                                          ( ("fusion::sequence_base" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [3321 4187]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1608 4193])
                            ("result_of" type
                               (:members 
                                  ( ("flatten" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("flatten" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4233 4325])
                                    ("flatten" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::flat_view" type
                                                     (:template-specifier 
                                                        ( ("Expr" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [4412 4449]))                                          
                                        :template-specifier 
                                          ( ("Expr" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [4335 4460]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [4199 4466])
                            ("functional" type
                               (:members 
                                  ( ("flatten" type
                                       (:members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [5322 5371])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr" type (:type "class") nil nil))                                                  
                                                :type ("proto::detail::flat_view" type
                                                     (:template-specifier 
                                                        ( ("Expr" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [5813 5821]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [5716 5913])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr" type (:type "class") nil nil))                                                  
                                                :type ("proto::detail::flat_view" type
                                                     (:template-specifier 
                                                        ( ("Expr" type (:constant-flag t) nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [6030 6044]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [5927 6142]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [5249 6153]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [4472 6159])
                            ("flatten" function
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type ("proto::detail::flat_view" type
                                     (:template-specifier 
                                        ( ("Expr" type nil nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6813 6821]))                                  )
                                (reparse-symbol namespacesubparts) [6736 6883])
                            ("flatten" function
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type ("proto::detail::flat_view" type
                                     (:template-specifier 
                                        ( ("Expr" type (:constant-flag t) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6998 7012]))                                  )
                                (reparse-symbol namespacesubparts) [6915 7080])
                            ("eval_fun" type
                               (:template 
                                  ( ("Context" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("eval_fun" function
                                       (:constructor-flag t
                                        :arguments 
                                          ( ("ctx" variable
                                               (:reference 1
                                                :type ("Context" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7219 7232]))                                          
                                        :type ("eval_fun" type (:type "struct") nil nil))
                                        (reparse-symbol classsubparts) [7210 7265])
                                    ("result" type
                                       (:template 
                                          ( ("Sig" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol classsubparts) [7275 7320])
                                    ("proto::result_of::eval" variable (:type "int") (reparse-symbol classsubparts) [7550 7599])
                                    ("()" function
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7714 7722]))                                          
                                        :typemodifiers ("typename")
                                        :operator-flag t)
                                        (reparse-symbol classsubparts) [7609 7795])
                                    ("()" function
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type ("proto::result_of::eval::type" type (:type "class") nil nil)
                                        :arguments 
                                          ( ("e" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("Expr" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [7916 7930]))                                          
                                        :typemodifiers ("typename")
                                        :operator-flag t)
                                        (reparse-symbol classsubparts) [7805 8003])
                                    ("private" label nil (reparse-symbol classsubparts) [8009 8017])
                                    ("ctx_" variable (:type ("Context" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8026 8040]))                                  
                                :superclasses 
                                  ( ("proto::callable" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [7116 8047])
                            ("is_callable" type
                               (:template 
                                  ( ("Context" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("eval_fun" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [8083 8179]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1586 8181]))                  
                :type "namespace")
                nil [1568 8182])
            ("boost" type
               (:members 
                  ( ("fusion" type
                       (:members 
                          ( ("extension" type
                               (:members 
                                  ( ("is_sequence_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [8259 8314])
                                    ("is_sequence_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :superclasses 
                                                  ( ("mpl::true_" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  )
                                                (reparse-symbol classsubparts) [8461 8556]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_flat_view" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [8324 8567])
                                    ("is_sequence_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :superclasses 
                                                  ( ("mpl::true_" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  )
                                                (reparse-symbol classsubparts) [8709 8804]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [8577 8815])
                                    ("is_view_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [8825 8876])
                                    ("is_view_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :superclasses 
                                                  ( ("mpl::true_" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  )
                                                (reparse-symbol classsubparts) [9019 9114]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_flat_view" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [8886 9125])
                                    ("is_view_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :superclasses 
                                                  ( ("mpl::false_" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  )
                                                (reparse-symbol classsubparts) [9263 9359]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9135 9370])
                                    ("value_of_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [9380 9432])
                                    ("value_of_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:members 
                                                  ( ("type" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9955 9987]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [9732 10002])
                                            ("apply" type
                                               (:template 
                                                  ( ("Iterator" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable (:type ("value_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10250 10282]))                                                  
                                                :template-specifier 
                                                  ( ("Iterator" type nil nil nil)
                                                    ("0"))                                                  )
                                                (reparse-symbol classsubparts) [10016 10297]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr_iterator" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9442 10308])
                                    ("deref_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [10318 10367])
                                    ("deref_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:members 
                                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [10889 10915])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("iter" variable
                                                               (:reference 1
                                                                :constant-flag t
                                                                :type ("Iterator" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [10950 10971]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [10933 11078]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [10664 11093])
                                            ("apply" type
                                               (:template 
                                                  ( ("Iterator" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [11343 11369])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("iter" variable
                                                               (:reference 1
                                                                :constant-flag t
                                                                :type ("Iterator" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [11404 11425]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [11387 11513]))                                                  
                                                :template-specifier 
                                                  ( ("Iterator" type nil nil nil)
                                                    ("0"))                                                  )
                                                (reparse-symbol classsubparts) [11107 11528]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr_iterator" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [10377 11539])
                                    ("advance_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [11549 11600])
                                    ("advance_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Iterator" type (:type "class") nil nil)
                                                    ("N" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [12042 12047])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("iter" variable
                                                               (:reference 1
                                                                :constant-flag t
                                                                :type ("Iterator" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [12082 12103]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [12065 12183]))                                                  )
                                                (reparse-symbol classsubparts) [11747 12198]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr_iterator" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [11610 12209])
                                    ("distance_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [12219 12271])
                                    ("distance_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr_iterator" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [12281 12591])
                                    ("next_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [12601 12649])
                                    ("next_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" variable (:type "int") (reparse-symbol classsubparts) [12932 12979]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr_iterator" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [12659 12990])
                                    ("prior_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13000 13049])
                                    ("prior_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr_iterator" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13059 13392])
                                    ("category_of_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13402 13457])
                                    ("category_of_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("random_access_traversal_tag" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [13682 13723]))                                                  )
                                                (reparse-symbol classsubparts) [13599 13738]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13467 13749])
                                    ("size_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [13759 13807])
                                    ("size_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13817 14108])
                                    ("begin_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [14118 14167])
                                    ("begin_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("proto::detail::expr_iterator" type
                                                             (:template-specifier 
                                                                ( ("Sequence" type nil nil nil)
                                                                  ("0"))                                                                
                                                              :type "class")
                                                              nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [14386 14441])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("seq" variable
                                                               (:reference 1
                                                                :type ("Sequence" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [14476 14490]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [14459 14564]))                                                  )
                                                (reparse-symbol classsubparts) [14303 14579]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [14177 14590])
                                    ("end_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [14600 14647])
                                    ("end_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable (:type "int") (reparse-symbol classsubparts) [15076 15081])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("seq" variable
                                                               (:reference 1
                                                                :type ("Sequence" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [15116 15130]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [15099 15204]))                                                  )
                                                (reparse-symbol classsubparts) [14781 15219]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [14657 15230])
                                    ("value_at_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [15240 15292])
                                    ("value_at_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:members 
                                                  ( ("type" type
                                                       (:typedef ("proto::result_of::child_c::value_type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [15637 15826]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [15594 15841])
                                            ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil)
                                                    ("Index" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("proto::result_of::value::value_type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [15974 16124]))                                                  
                                                :template-specifier 
                                                  ( ("Sequence" type nil nil nil)
                                                    ("Index" type nil nil nil)
                                                    ("0"))                                                  )
                                                (reparse-symbol classsubparts) [15855 16139]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [15302 16150])
                                    ("at_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [16160 16206])
                                    ("at_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:members 
                                                  ( ("type" type
                                                       (:typedef ("proto::result_of::child_c::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [16545 16730])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("seq" variable
                                                               (:reference 1
                                                                :type ("Sequence" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [16765 16779]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [16748 16877]))                                                  
                                                :type "struct")
                                                (reparse-symbol classsubparts) [16502 16892])
                                            ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil)
                                                    ("Index" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("proto::result_of::value::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [17025 17171])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("seq" variable
                                                               (:reference 1
                                                                :type ("Sequence" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [17206 17220]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [17189 17302]))                                                  
                                                :template-specifier 
                                                  ( ("Sequence" type nil nil nil)
                                                    ("Index" type nil nil nil)
                                                    ("0"))                                                  )
                                                (reparse-symbol classsubparts) [16906 17317]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [16216 17328])
                                    ("convert_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [17338 17389])
                                    ("convert_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("proto::result_of::unpack_expr::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [17610 17819])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("seq" variable
                                                               (:reference 1
                                                                :type ("Sequence" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [17854 17868]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [17837 17969]))                                                  )
                                                (reparse-symbol classsubparts) [17527 17984]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [17399 17995])
                                    ("convert_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("proto::result_of::unpack_expr::type" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [18221 18430])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("seq" variable
                                                               (:reference 1
                                                                :type ("Sequence" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [18465 18479]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [18448 18580]))                                                  )
                                                (reparse-symbol classsubparts) [18138 18595]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_flat_view" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [18005 18606])
                                    ("is_segmented_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18616 18672])
                                    ("is_segmented_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Iterator" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :superclasses 
                                                  ( ("mpl::true_" type
                                                       (:protection "unspecified"
                                                        :type "class")
                                                        nil nil))                                                  )
                                                (reparse-symbol classsubparts) [18820 18915]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_flat_view" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [18682 18926])
                                    ("segments_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [18936 18988])
                                    ("segments_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("Sequence::segments_type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [19223 19268])
                                                    ("call" function
                                                       (:typemodifiers ("static")
                                                        :arguments 
                                                          ( ("sequence" variable
                                                               (:reference 1
                                                                :type ("Sequence" type (:type "class") nil nil))
                                                                (reparse-symbol arg-sub-list) [19331 19350]))                                                          
                                                        :type ("type" type (:type "class") nil nil))
                                                        (reparse-symbol classsubparts) [19314 19429]))                                                  )
                                                (reparse-symbol classsubparts) [19132 19444]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_flat_view" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [18998 19455])
                                    ("category_of_impl" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("apply" type
                                               (:template 
                                                  ( ("Sequence" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :members 
                                                  ( ("type" type
                                                       (:typedef ("forward_traversal_tag" type (:type "class") nil nil)
                                                        :type "typedef")
                                                        (reparse-symbol classsubparts) [19685 19720]))                                                  )
                                                (reparse-symbol classsubparts) [19602 19735]))                                          
                                        :template-specifier 
                                          ( ("proto::tag::proto_flat_view" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [19465 19746]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [8225 19752])
                            ("traits" type
                               (:members 
                                  ( ("mpl::false_" variable (:type "int") (reparse-symbol namespacesubparts) [20105 20128])
                                    ("mpl::false_" variable (:type "int") (reparse-symbol namespacesubparts) [20454 20477]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [19758 20483]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [8202 20485]))                  
                :type "namespace")
                nil [8184 20486])
            ("boost" type
               (:members 
                  ( ("mpl" type
                       (:members 
                          ( ("sequence_tag" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("Args" type (:type "class") nil nil)
                                    ("long" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("fusion::fusion_sequence_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [20647 20688]))                                  
                                :template-specifier 
                                  ( ("proto::expr" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [20526 20695])
                            ("sequence_tag" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("Args" type (:type "class") nil nil)
                                    ("long" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("type" type
                                       (:typedef ("fusion::fusion_sequence_tag" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [20828 20869]))                                  
                                :template-specifier 
                                  ( ("proto::basic_expr" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [20701 20876]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [20506 20878]))                  
                :type "namespace")
                nil [20488 20879]))          
      :file "fusion.hpp"
      :pointmax 20935
      :fsize 20934
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((punctuation 20452 . 20453) (punctuation 20440 . 20441) (symbol 20427 . 20431) (punctuation 20426 . 20427) (punctuation 20425 . 20426) (punctuation 20424 . 20425) (symbol 20406 . 20411) (punctuation 20405 . 20406) (punctuation 20404 . 20405) (punctuation 20403 . 20404) (punctuation 20385 . 20386) (symbol 20381 . 20385) (punctuation 20380 . 20381) (symbol 20373 . 20380) (punctuation 20372 . 20373) (punctuation 20371 . 20372) (symbol 20366 . 20371) (punctuation 20364 . 20365) (punctuation 20344 . 20345) (symbol 20340 . 20344) (punctuation 20339 . 20340) (symbol 20332 . 20339) (punctuation 20331 . 20332) (punctuation 20330 . 20331) (symbol 20325 . 20330) (punctuation 20303 . 20304) (symbol 20300 . 20303) (punctuation 20299 . 20300) (punctuation 20298 . 20299) (symbol 20295 . 20298) (punctuation 20277 . 20278) (symbol 20266 . 20277) (TYPENAME 20257 . 20265) (punctuation 20255 . 20256) (symbol 20240 . 20244) (punctuation 20238 . 20239) (symbol 20223 . 20227) (punctuation 20209 . 20210) (symbol 20192 . 20209) (STRUCT 20185 . 20191) (punctuation 20175 . 20176) (symbol 20171 . 20175) (TYPENAME 20162 . 20170) (punctuation 20160 . 20161) (symbol 20156 . 20160) (TYPENAME 20147 . 20155) (punctuation 20146 . 20147) (TEMPLATE 20138 . 20146) (punctuation 20103 . 20104) (punctuation 20089 . 20090) (symbol 20076 . 20080) (punctuation 20075 . 20076) (punctuation 20074 . 20075) (punctuation 20073 . 20074) (symbol 20055 . 20060) (punctuation 20054 . 20055) (punctuation 20053 . 20054) (punctuation 20052 . 20053) (punctuation 20034 . 20035) (symbol 20030 . 20034) (punctuation 20029 . 20030) (symbol 20022 . 20029) (punctuation 20021 . 20022) (punctuation 20020 . 20021) (symbol 20015 . 20020) (punctuation 20013 . 20014) (punctuation 19993 . 19994) (symbol 19989 . 19993) (punctuation 19988 . 19989) (symbol 19981 . 19988) (punctuation 19980 . 19981) (punctuation 19979 . 19980) (symbol 19974 . 19979) (punctuation 19952 . 19953) (symbol 19949 . 19952) (punctuation 19948 . 19949) (punctuation 19947 . 19948) (symbol 19944 . 19947) (punctuation 19926 . 19927) (symbol 19915 . 19926) (TYPENAME 19906 . 19914) (punctuation 19904 . 19905) (symbol 19889 . 19893) (punctuation 19887 . 19888) (symbol 19872 . 19876) (punctuation 19858 . 19859) (symbol 19843 . 19858) (STRUCT 19836 . 19842) (punctuation 19826 . 19827) (symbol 19822 . 19826) (TYPENAME 19813 . 19821) (punctuation 19811 . 19812) (symbol 19807 . 19811) (TYPENAME 19798 . 19806) (punctuation 19797 . 19798) (TEMPLATE 19789 . 19797) (TYPEDEF 19215 . 19222) (punctuation 16488 . 16489) (symbol 16470 . 16475) (punctuation 16469 . 16470) (punctuation 16468 . 16469) (punctuation 16467 . 16468) (symbol 16459 . 16467) (punctuation 16458 . 16459) (symbol 16450 . 16458) (punctuation 16449 . 16450) (punctuation 16448 . 16449) (symbol 16443 . 16448) (punctuation 16441 . 16442) (symbol 16435 . 16440) (LONG 16430 . 16434) (punctuation 16428 . 16429) (symbol 16408 . 16413) (TYPENAME 16399 . 16407) (punctuation 16397 . 16398) (symbol 16374 . 16382) (TYPENAME 16365 . 16373) (punctuation 16347 . 16348) (TEMPLATE 16339 . 16347) (punctuation 15580 . 15581) (symbol 15562 . 15567) (punctuation 15561 . 15562) (punctuation 15560 . 15561) (punctuation 15559 . 15560) (symbol 15551 . 15559) (punctuation 15550 . 15551) (symbol 15542 . 15550) (punctuation 15541 . 15542) (punctuation 15540 . 15541) (symbol 15535 . 15540) (punctuation 15533 . 15534) (symbol 15527 . 15532) (LONG 15522 . 15526) (punctuation 15520 . 15521) (symbol 15500 . 15505) (TYPENAME 15491 . 15499) (punctuation 15489 . 15490) (symbol 15466 . 15474) (TYPENAME 15457 . 15465) (punctuation 15439 . 15440) (TEMPLATE 15431 . 15439) (punctuation 15058 . 15059) (symbol 15024 . 15037) (punctuation 15023 . 15024) (punctuation 15022 . 15023) (symbol 15014 . 15022) (punctuation 15012 . 15013) (number 15010 . 15011) (punctuation 15008 . 15009) (symbol 14994 . 15007) (punctuation 14993 . 14994) (punctuation 14992 . 14993) (symbol 14984 . 14992) (punctuation 14982 . 14983) (punctuation 14981 . 14982) (number 14979 . 14980) (punctuation 14977 . 14978) (symbol 14946 . 14954) (punctuation 14920 . 14921) (symbol 14907 . 14920) (punctuation 14906 . 14907) (punctuation 14905 . 14906) (symbol 14899 . 14905) (punctuation 14898 . 14899) (punctuation 14897 . 14898) (symbol 14892 . 14897) (TYPEDEF 14864 . 14871) (punctuation 14096 . 14097) (semantic-list 14094 . 14096) (punctuation 14080 . 14081) (symbol 14067 . 14080) (punctuation 14066 . 14067) (punctuation 14065 . 14066) (symbol 14057 . 14065) (punctuation 14055 . 14056) (number 14053 . 14054) (punctuation 14051 . 14052) (symbol 14037 . 14050) (punctuation 14036 . 14037) (punctuation 14035 . 14036) (symbol 14027 . 14035) (punctuation 14025 . 14026) (punctuation 14024 . 14025) (number 14022 . 14023) (punctuation 14021 . 14022) (symbol 14016 . 14021) (punctuation 14015 . 14016) (punctuation 14014 . 14015) (symbol 14011 . 14014) (punctuation 14009 . 14010) (symbol 13989 . 13994) (STRUCT 13982 . 13988) (punctuation 13968 . 13969) (symbol 13960 . 13968) (TYPENAME 13951 . 13959) (punctuation 13950 . 13951) (TEMPLATE 13942 . 13950) (punctuation 13380 . 13381) (semantic-list 13378 . 13380) (punctuation 13364 . 13365) (punctuation 13362 . 13363) (number 13361 . 13362) (punctuation 13360 . 13361) (punctuation 13359 . 13360) (symbol 13354 . 13359) (punctuation 13353 . 13354) (punctuation 13352 . 13353) (symbol 13349 . 13352) (punctuation 13347 . 13348) (symbol 13339 . 13347) (punctuation 13338 . 13339) (symbol 13333 . 13338) (TEMPLATE 13324 . 13332) (punctuation 13323 . 13324) (punctuation 13322 . 13323) (punctuation 13321 . 13322) (punctuation 13319 . 13320) (symbol 13313 . 13319) (punctuation 13311 . 13312) (symbol 13308 . 13311) (punctuation 13307 . 13308) (symbol 13288 . 13307) (punctuation 13287 . 13288) (punctuation 13286 . 13287) (symbol 13283 . 13286) (punctuation 13282 . 13283) (punctuation 13281 . 13282) (symbol 13276 . 13281) (punctuation 13275 . 13276) (symbol 13263 . 13275) (punctuation 13261 . 13262) (symbol 13241 . 13246) (STRUCT 13234 . 13240) (punctuation 13220 . 13221) (symbol 13212 . 13220) (TYPENAME 13203 . 13211) (punctuation 13202 . 13203) (TEMPLATE 13194 . 13202) (TEMPLATE 12923 . 12931) (punctuation 12922 . 12923) (punctuation 12921 . 12922) (punctuation 12920 . 12921) (punctuation 12918 . 12919) (symbol 12912 . 12918) (punctuation 12910 . 12911) (symbol 12907 . 12910) (punctuation 12906 . 12907) (symbol 12887 . 12906) (punctuation 12886 . 12887) (punctuation 12885 . 12886) (symbol 12882 . 12885) (punctuation 12881 . 12882) (punctuation 12880 . 12881) (symbol 12875 . 12880) (punctuation 12874 . 12875) (symbol 12862 . 12874) (punctuation 12860 . 12861) (symbol 12840 . 12845) (STRUCT 12833 . 12839) (punctuation 12819 . 12820) (symbol 12811 . 12819) (TYPENAME 12802 . 12810) (punctuation 12801 . 12802) (TEMPLATE 12793 . 12801) (punctuation 12579 . 12580) (semantic-list 12577 . 12579) (punctuation 12563 . 12564) (symbol 12558 . 12563) (punctuation 12557 . 12558) (punctuation 12556 . 12557) (symbol 12544 . 12556) (punctuation 12542 . 12543) (symbol 12536 . 12541) (punctuation 12535 . 12536) (punctuation 12534 . 12535) (symbol 12524 . 12534) (punctuation 12523 . 12524) (symbol 12518 . 12523) (punctuation 12517 . 12518) (punctuation 12516 . 12517) (symbol 12513 . 12516) (punctuation 12511 . 12512) (symbol 12491 . 12496) (STRUCT 12484 . 12490) (punctuation 12470 . 12471) (symbol 12460 . 12470) (TYPENAME 12451 . 12459) (punctuation 12449 . 12450) (symbol 12437 . 12449) (TYPENAME 12428 . 12436) (punctuation 12427 . 12428) (TEMPLATE 12419 . 12427) (punctuation 12024 . 12025) (symbol 11998 . 12003) (punctuation 11997 . 11998) (punctuation 11996 . 11997) (symbol 11995 . 11996) (punctuation 11993 . 11994) (symbol 11987 . 11992) (punctuation 11986 . 11987) (punctuation 11985 . 11986) (symbol 11977 . 11985) (punctuation 11975 . 11976) (symbol 11943 . 11952) (punctuation 11942 . 11943) (punctuation 11941 . 11942) (symbol 11933 . 11941) (TYPENAME 11924 . 11932) (punctuation 11898 . 11899) (symbol 11885 . 11898) (punctuation 11884 . 11885) (punctuation 11883 . 11884) (symbol 11877 . 11883) (punctuation 11876 . 11877) (punctuation 11875 . 11876) (symbol 11870 . 11875) (TYPEDEF 11842 . 11849) (punctuation 11342 . 11343) (punctuation 11341 . 11342) (punctuation 11340 . 11341) (punctuation 11318 . 11319) (symbol 11308 . 11317) (punctuation 11307 . 11308) (punctuation 11306 . 11307) (symbol 11298 . 11306) (TYPENAME 11289 . 11297) (punctuation 11263 . 11264) (symbol 11258 . 11263) (punctuation 11257 . 11258) (punctuation 11256 . 11257) (symbol 11247 . 11256) (punctuation 11246 . 11247) (punctuation 11245 . 11246) (symbol 11240 . 11245) (TYPENAME 11231 . 11239) (TYPEDEF 11203 . 11210) (punctuation 10888 . 10889) (punctuation 10887 . 10888) (punctuation 10886 . 10887) (symbol 10860 . 10865) (punctuation 10859 . 10860) (punctuation 10858 . 10859) (symbol 10850 . 10858) (punctuation 10848 . 10849) (punctuation 10824 . 10825) (symbol 10814 . 10823) (punctuation 10813 . 10814) (punctuation 10812 . 10813) (symbol 10804 . 10812) (TYPENAME 10795 . 10803) (punctuation 10769 . 10770) (symbol 10762 . 10769) (punctuation 10761 . 10762) (punctuation 10760 . 10761) (symbol 10751 . 10760) (punctuation 10750 . 10751) (punctuation 10749 . 10750) (symbol 10744 . 10749) (TYPENAME 10735 . 10743) (TYPEDEF 10707 . 10714) (punctuation 10888 . 10889) (punctuation 10887 . 10888) (punctuation 10886 . 10887) (symbol 10860 . 10865) (punctuation 10859 . 10860) (punctuation 10858 . 10859) (symbol 10850 . 10858) (punctuation 10848 . 10849) (punctuation 10824 . 10825) (symbol 10814 . 10823) (punctuation 10813 . 10814) (punctuation 10812 . 10813) (symbol 10804 . 10812) (TYPENAME 10795 . 10803) (punctuation 10769 . 10770) (symbol 10762 . 10769) (punctuation 10761 . 10762) (punctuation 10760 . 10761) (symbol 10751 . 10760) (punctuation 10750 . 10751) (punctuation 10749 . 10750) (symbol 10744 . 10749) (TYPENAME 10735 . 10743) (TYPEDEF 10707 . 10714) (punctuation 10650 . 10651) (symbol 10632 . 10637) (punctuation 10631 . 10632) (punctuation 10630 . 10631) (punctuation 10629 . 10630) (symbol 10620 . 10629) (punctuation 10619 . 10620) (punctuation 10618 . 10619) (symbol 10610 . 10618) (TYPENAME 10601 . 10609) (punctuation 10600 . 10601) (symbol 10592 . 10600) (punctuation 10591 . 10592) (punctuation 10590 . 10591) (symbol 10585 . 10590) (punctuation 10583 . 10584) (symbol 10577 . 10582) (LONG 10572 . 10576) (punctuation 10570 . 10571) (symbol 10547 . 10555) (TYPENAME 10538 . 10546) (punctuation 10520 . 10521) (TEMPLATE 10512 . 10520) (punctuation 10249 . 10250) (punctuation 10248 . 10249) (punctuation 10247 . 10248) (symbol 10217 . 10226) (punctuation 10216 . 10217) (punctuation 10215 . 10216) (symbol 10207 . 10215) (TYPENAME 10198 . 10206) (punctuation 10172 . 10173) (symbol 10167 . 10172) (punctuation 10166 . 10167) (punctuation 10165 . 10166) (symbol 10156 . 10165) (punctuation 10155 . 10156) (punctuation 10154 . 10155) (symbol 10149 . 10154) (TYPENAME 10140 . 10148) (TYPEDEF 10112 . 10119) (punctuation 9954 . 9955) (punctuation 9953 . 9954) (punctuation 9952 . 9953) (symbol 9926 . 9931) (punctuation 9925 . 9926) (punctuation 9924 . 9925) (symbol 9916 . 9924) (punctuation 9914 . 9915) (symbol 9882 . 9891) (punctuation 9881 . 9882) (punctuation 9880 . 9881) (symbol 9872 . 9880) (TYPENAME 9863 . 9871) (punctuation 9837 . 9838) (symbol 9830 . 9837) (punctuation 9829 . 9830) (punctuation 9828 . 9829) (symbol 9819 . 9828) (punctuation 9818 . 9819) (punctuation 9817 . 9818) (symbol 9812 . 9817) (TYPENAME 9803 . 9811) (TYPEDEF 9775 . 9782) (punctuation 9954 . 9955) (punctuation 9953 . 9954) (punctuation 9952 . 9953) (symbol 9926 . 9931) (punctuation 9925 . 9926) (punctuation 9924 . 9925) (symbol 9916 . 9924) (punctuation 9914 . 9915) (symbol 9882 . 9891) (punctuation 9881 . 9882) (punctuation 9880 . 9881) (symbol 9872 . 9880) (TYPENAME 9863 . 9871) (punctuation 9837 . 9838) (symbol 9830 . 9837) (punctuation 9829 . 9830) (punctuation 9828 . 9829) (symbol 9819 . 9828) (punctuation 9818 . 9819) (punctuation 9817 . 9818) (symbol 9812 . 9817) (TYPENAME 9803 . 9811) (TYPEDEF 9775 . 9782) (punctuation 9718 . 9719) (symbol 9700 . 9705) (punctuation 9699 . 9700) (punctuation 9698 . 9699) (punctuation 9697 . 9698) (symbol 9688 . 9697) (punctuation 9687 . 9688) (punctuation 9686 . 9687) (symbol 9678 . 9686) (TYPENAME 9669 . 9677) (punctuation 9668 . 9669) (symbol 9660 . 9668) (punctuation 9659 . 9660) (punctuation 9658 . 9659) (symbol 9653 . 9658) (punctuation 9651 . 9652) (symbol 9645 . 9650) (LONG 9640 . 9644) (punctuation 9638 . 9639) (symbol 9615 . 9623) (TYPENAME 9606 . 9614) (punctuation 9588 . 9589) (TEMPLATE 9580 . 9588) (punctuation 7548 . 7549) (punctuation 7536 . 7537) (semantic-list 7528 . 7536) (symbol 7524 . 7528) (punctuation 7523 . 7524) (symbol 7517 . 7523) (STRUCT 7510 . 7516) (punctuation 7500 . 7501) (symbol 7496 . 7500) (TYPENAME 7487 . 7495) (punctuation 7485 . 7486) (symbol 7481 . 7485) (TYPENAME 7472 . 7480) (punctuation 7471 . 7472) (TEMPLATE 7463 . 7471) (punctuation 7452 . 7453) (semantic-list 7450 . 7452) (punctuation 7440 . 7441) (semantic-list 7426 . 7440) (symbol 7422 . 7426) (punctuation 7421 . 7422) (symbol 7415 . 7421) (punctuation 7413 . 7414) (punctuation 7401 . 7402) (semantic-list 7395 . 7401) (symbol 7391 . 7395) (punctuation 7390 . 7391) (symbol 7384 . 7390) (STRUCT 7377 . 7383) (punctuation 7367 . 7368) (symbol 7363 . 7367) (TYPENAME 7354 . 7362) (punctuation 7352 . 7353) (symbol 7348 . 7352) (TYPENAME 7339 . 7347) (punctuation 7338 . 7339) (TEMPLATE 7330 . 7338) (EXPLICIT 7201 . 7209) (punctuation 5701 . 5702) (semantic-list 5625 . 5701) (punctuation 5611 . 5612) (semantic-list 5603 . 5611) (symbol 5599 . 5603) (punctuation 5598 . 5599) (symbol 5592 . 5598) (STRUCT 5585 . 5591) (punctuation 5571 . 5572) (symbol 5567 . 5571) (TYPENAME 5558 . 5566) (punctuation 5556 . 5557) (symbol 5552 . 5556) (TYPENAME 5543 . 5551) (punctuation 5542 . 5543) (TEMPLATE 5534 . 5542) (punctuation 5519 . 5520) (semantic-list 5517 . 5519) (punctuation 5503 . 5504) (semantic-list 5489 . 5503) (symbol 5485 . 5489) (punctuation 5484 . 5485) (symbol 5478 . 5484) (punctuation 5476 . 5477) (punctuation 5460 . 5461) (semantic-list 5454 . 5460) (symbol 5450 . 5454) (punctuation 5449 . 5450) (symbol 5443 . 5449) (STRUCT 5436 . 5442) (punctuation 5422 . 5423) (symbol 5418 . 5422) (TYPENAME 5409 . 5417) (punctuation 5407 . 5408) (symbol 5403 . 5407) (TYPENAME 5394 . 5402) (punctuation 5393 . 5394) (TEMPLATE 5385 . 5393) (semantic-list 5306 . 5308) (symbol 5286 . 5306) (EXPLICIT 3999 . 4007) (punctuation 3953 . 3954) (punctuation 3952 . 3953) (punctuation 3951 . 3952) (symbol 3930 . 3934) (punctuation 3929 . 3930) (punctuation 3928 . 3929) (punctuation 3927 . 3928) (punctuation 3905 . 3906) (symbol 3896 . 3905) (punctuation 3895 . 3896) (punctuation 3894 . 3895) (symbol 3890 . 3894) (TYPENAME 3881 . 3889) (punctuation 3880 . 3881) (symbol 3870 . 3880) (punctuation 3868 . 3869) (symbol 3841 . 3845) (punctuation 3815 . 3816) (symbol 3806 . 3815) (punctuation 3805 . 3806) (punctuation 3804 . 3805) (symbol 3795 . 3804) (punctuation 3794 . 3795) (punctuation 3793 . 3794) (symbol 3787 . 3793) (TYPENAME 3778 . 3786) (punctuation 3756 . 3757) (symbol 3749 . 3756) (punctuation 3748 . 3749) (punctuation 3747 . 3748) (symbol 3738 . 3747) (punctuation 3737 . 3738) (punctuation 3736 . 3737) (symbol 3730 . 3736) (TYPENAME 3721 . 3729) (TYPEDEF 3697 . 3704) (punctuation 3659 . 3660) (symbol 3630 . 3642) (punctuation 3629 . 3630) (punctuation 3628 . 3629) (symbol 3624 . 3628) (TYPENAME 3615 . 3623) (punctuation 3613 . 3614) (symbol 3585 . 3594) (punctuation 3584 . 3585) (punctuation 3583 . 3584) (symbol 3579 . 3583) (TYPENAME 3570 . 3578) (punctuation 3548 . 3549) (symbol 3533 . 3548) (punctuation 3532 . 3533) (punctuation 3531 . 3532) (symbol 3528 . 3531) (TYPEDEF 3504 . 3511) (punctuation 3141 . 3142) (punctuation 3140 . 3141) (punctuation 3139 . 3140) (semantic-list 3125 . 3139) (symbol 3115 . 3125) (punctuation 3114 . 3115) (symbol 3108 . 3114) (TYPENAME 3099 . 3107) (punctuation 3085 . 3086) (symbol 3081 . 3085) (TYPENAME 3072 . 3080) (punctuation 3071 . 3072) (TEMPLATE 3063 . 3071) (punctuation 2902 . 2903) (punctuation 2901 . 2902) (punctuation 2900 . 2901) (semantic-list 2892 . 2900) (symbol 2882 . 2892) (punctuation 2881 . 2882) (symbol 2875 . 2881) (TYPENAME 2866 . 2874) (punctuation 2852 . 2853) (symbol 2848 . 2852) (TYPENAME 2839 . 2847) (punctuation 2838 . 2839) (TEMPLATE 2830 . 2838) (punctuation 2815 . 2816) (semantic-list 2813 . 2815) (punctuation 2799 . 2800) (punctuation 2781 . 2782) (punctuation 2780 . 2781) (symbol 2775 . 2779) (punctuation 2774 . 2775) (symbol 2763 . 2774) (punctuation 2762 . 2763) (punctuation 2761 . 2762) (symbol 2755 . 2761) (punctuation 2753 . 2754) (punctuation 2733 . 2734) (symbol 2729 . 2733) (punctuation 2728 . 2729) (symbol 2719 . 2728) (punctuation 2717 . 2718) (symbol 2693 . 2698) (punctuation 2692 . 2693) (punctuation 2691 . 2692) (punctuation 2690 . 2691) (symbol 2681 . 2690) (punctuation 2680 . 2681) (punctuation 2679 . 2680) (symbol 2675 . 2679) (TYPENAME 2666 . 2674) (punctuation 2664 . 2665) (symbol 2661 . 2664) (punctuation 2660 . 2661) (symbol 2653 . 2660) (punctuation 2631 . 2632) (symbol 2627 . 2631) (punctuation 2626 . 2627) (punctuation 2625 . 2626) (symbol 2622 . 2625) (punctuation 2620 . 2621) (punctuation 2604 . 2605) (semantic-list 2596 . 2604) (symbol 2592 . 2596) (punctuation 2591 . 2592) (symbol 2585 . 2591) (STRUCT 2578 . 2584) (punctuation 2564 . 2565) (symbol 2560 . 2564) (TYPENAME 2551 . 2559) (punctuation 2549 . 2550) (symbol 2545 . 2549) (TYPENAME 2536 . 2544) (punctuation 2535 . 2536) (TEMPLATE 2527 . 2535) (punctuation 2512 . 2513) (semantic-list 2510 . 2512) (punctuation 2496 . 2497) (semantic-list 2482 . 2496) (symbol 2478 . 2482) (punctuation 2477 . 2478) (symbol 2471 . 2477) (punctuation 2469 . 2470) (punctuation 2453 . 2454) (semantic-list 2447 . 2453) (symbol 2443 . 2447) (punctuation 2442 . 2443) (symbol 2436 . 2442) (STRUCT 2429 . 2435) (punctuation 2415 . 2416) (symbol 2411 . 2415) (TYPENAME 2402 . 2410) (punctuation 2400 . 2401) (symbol 2396 . 2400) (TYPENAME 2387 . 2395) (punctuation 2386 . 2387) (TEMPLATE 2378 . 2386) (EXPLICIT 2128 . 2136) (punctuation 2089 . 2090) (symbol 2060 . 2072) (punctuation 2059 . 2060) (punctuation 2058 . 2059) (symbol 2054 . 2058) (TYPENAME 2045 . 2053) (punctuation 2043 . 2044) (symbol 2015 . 2024) (punctuation 2014 . 2015) (punctuation 2013 . 2014) (symbol 2009 . 2013) (TYPENAME 2000 . 2008) (punctuation 1978 . 1979) (symbol 1959 . 1978) (punctuation 1958 . 1959) (punctuation 1957 . 1958) (symbol 1954 . 1957) (TYPEDEF 1930 . 1937))
      :lexical-table 
        '(("BOOST_PROTO_FUSION_HPP_EAN_11_04_2006")
          )
)
    (semanticdb-table "matches.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_MATCHES_HPP_EAN_11_03_2006" variable (:constant-flag t) nil [469 507])
            ("boost/config.hpp" include (:system-flag t) nil [509 536])
            ("boost/detail/workaround.hpp" include (:system-flag t) nil [537 575])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [576 613])
            ("boost/preprocessor/arithmetic/dec.hpp" include (:system-flag t) nil [614 662])
            ("boost/preprocessor/arithmetic/sub.hpp" include (:system-flag t) nil [663 711])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [712 763])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [764 818])
            ("boost/preprocessor/punctuation/comma_if.hpp" include (:system-flag t) nil [819 873])
            ("boost/preprocessor/repetition/enum.hpp" include (:system-flag t) nil [874 923])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [924 980])
            ("boost/preprocessor/repetition/enum_shifted.hpp" include (:system-flag t) nil [981 1038])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [1039 1102])
            ("boost/preprocessor/repetition/enum_shifted_params.hpp" include (:system-flag t) nil [1103 1167])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [1168 1233])
            ("boost/preprocessor/repetition/enum_params_with_a_default.hpp" include (:system-flag t) nil [1234 1305])
            ("boost/preprocessor/repetition/repeat.hpp" include (:system-flag t) nil [1306 1357])
            ("boost/config.hpp" include (:system-flag t) nil [1358 1385])
            ("boost/mpl/logical.hpp" include (:system-flag t) nil [1386 1418])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [1419 1451])
            ("boost/proto/detail/template_arity.hpp" include (:system-flag t) nil [1452 1500])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [1501 1539])
            ("boost/type_traits/is_const.hpp" include (:system-flag t) nil [1631 1672])
            ("boost/type_traits/is_convertible.hpp" include (:system-flag t) nil [1673 1720])
            ("boost/type_traits/is_reference.hpp" include (:system-flag t) nil [1721 1766])
            ("boost/type_traits/is_pointer.hpp" include (:system-flag t) nil [1767 1810])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [1811 1847])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [1848 1881])
            ("boost/proto/transform/when.hpp" include (:system-flag t) nil [1882 1923])
            ("boost/proto/transform/impl.hpp" include (:system-flag t) nil [1924 1965])
            ("BOOST_PROTO_LOGICAL_typename_G" variable (:constant-flag t) nil [2119 2149])
            ("BOOST_PROTO_LOGICAL_G" variable (:constant-flag t) nil [2223 2244])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("matches_" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("BasicExpr" type (:type "class") nil nil)
                                            ("Grammar" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [2383 2469])
                                    ("and_2" type
                                       (:template 
                                          ( ("bool" type nil nil nil)
                                            ("Pred" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [2479 2532])
                                    ("_and_impl" type
                                       (:template 
                                          ( ("And" type (:type "class") nil nil)
                                            ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [2542 2636])
                                    ("array_matches" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2646 2743])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [2841 2863])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [2967 2989])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [3095 3117])
                                    ("lambda_matches" type
                                       (:superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [3269 3326])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [3449 3471])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [3587 3609])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [3923 3945])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [4082 4104])
                                    ("lambda_matches" variable (:type "int") (reparse-symbol namespacesubparts) [4288 4331])
                                    ("vararg_matches_impl" type
                                       (:template 
                                          ( ("Args1" type (:type "class") nil nil)
                                            ("Back" type (:type "class") nil nil)
                                            ("long" type nil nil nil)
                                            ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :prototype t)
                                        (reparse-symbol namespacesubparts) [4372 4467])
                                    ("vararg_matches" type
                                       (:superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [4625 4682])
                                    ("matches_" variable (:type "int") (reparse-symbol namespacesubparts) [4876 5058])
                                    ("is_cv_ref_compatible" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6260 6363])
                                    ("is_cv_ref_compatible" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("U" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [6373 6485])
                                    ("T" function (:type "int") (reparse-symbol namespacesubparts) [8402 8409])
                                    ("T" function (:type "int") (reparse-symbol namespacesubparts) [8411 8425])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [8439 8461])
                                    ("T" function (:type "int") (reparse-symbol namespacesubparts) [8539 8546])
                                    ("mpl::true_" variable (:type "int") (reparse-symbol namespacesubparts) [8565 8587])
                                    ("terminal_matches" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("T" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [8869 8962])
                                    ("terminal_matches" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("T" type (:reference 1) nil nil)
                                            ("T" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [8972 9067])
                                    ("terminal_matches" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("T" type
                                               (:reference 1
                                                :constant-flag t)
                                                nil nil)
                                            ("T" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9077 9178])
                                    ("terminal_matches" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("proto::_" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9188 9288])
                                    ("terminal_matches" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("exact" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9298 9399])
                                    ("terminal_matches" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("U" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("is_convertible" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("T" type nil nil nil)
                                            ("proto::convertible_to" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9409 9548])
                                    ("matches_" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("BasicExpr" type (:type "class") nil nil)
                                            ("Grammar" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9578 9699])
                                    ("matches_" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("BasicExpr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("Expr" type nil nil nil)
                                            ("BasicExpr" type nil nil nil)
                                            ("proto::_" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [9709 9840])
                                    ("matches_" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil)
                                            ("Args1" type (:type "class") nil nil)
                                            ("Args2" type (:type "class") nil nil)
                                            ("long" type nil nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("Expr" type nil nil nil)
                                            ("proto::basic_expr" type nil nil nil)
                                            ("proto::basic_expr" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [10737 10957])
                                    ("type" variable (:type "int") (reparse-symbol namespacesubparts) [13154 13563])
                                    ("matches_" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("BasicExpr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("which" type
                                               (:typedef ("not_" type
                                                     (:template-specifier 
                                                        ( ("_" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [13761 13783]))                                          
                                        :superclasses 
                                          ( ("mpl::false_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("Expr" type nil nil nil)
                                            ("BasicExpr" type nil nil nil)
                                            ("or_" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [13622 13794])
                                    ("matches_" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("BasicExpr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("mpl::true_" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("Expr" type nil nil nil)
                                            ("BasicExpr" type nil nil nil)
                                            ("and_" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [14088 14216]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [2352 15939])
                            ("_" type
                               (:superclasses 
                                  ( ("transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :members 
                                  ( ("proto_grammar" type
                                       (:typedef ("_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [21279 21303])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [21446 21471])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::expr_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [21673 21716])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::state_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [21717 21759])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::data_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [21760 21799]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [21645 21859]))                                          
                                        :superclasses 
                                          ( ("transform_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [21313 21870]))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [21241 21877])
                            ("detail" type
                               (:members 
                                  ( ("_and_impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("proto::_::impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("proto::and_" type nil nil nil)
                                            ("Expr" type nil nil nil)
                                            ("State" type nil nil nil)
                                            ("Data" type nil nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [21914 22085])
                                    ("impl" variable (:type "int") (reparse-symbol namespacesubparts) [22272 22307]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [21883 22313])
                            ("not_" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("proto_grammar" type
                                       (:typedef ("not_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [22776 22803])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result_type" type
                                               (:typedef ("Expr" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [22946 22971])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::expr_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [23240 23283])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::state_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [23284 23326])
                                                    ("" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::data_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [23327 23366]))                                                  
                                                :type "int")
                                                (reparse-symbol classsubparts) [23212 23426]))                                          
                                        :superclasses 
                                          ( ("transform_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [22813 23437]))                                  
                                :superclasses 
                                  ( ("transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [22691 23444])
                            ("if_" type
                               (:template 
                                  ( ("If" type (:type "class") nil nil)
                                    ("Then" type (:type "class") nil nil)
                                    ("Else" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("proto_grammar" type
                                       (:typedef ("if_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [25687 25713])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("condition" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [25936 25970])
                                            ("which" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26195 26218])
                                            ("result_type" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [26290 26314])
                                            ("()" function
                                               (:operator-flag t
                                                :arguments 
                                                  ( ("e" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::expr_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [26576 26619])
                                                    ("s" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::state_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [26620 26664])
                                                    ("d" variable
                                                       (:typemodifiers ("typename")
                                                        :type ("impl::data_param" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [26665 26706]))                                                  
                                                :type ("result_type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [26535 26824]))                                          
                                        :superclasses 
                                          ( ("transform_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [25723 26835]))                                  
                                :superclasses 
                                  ( ("transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [25520 26842])
                            ("or_" type
                               (:template 
                                  ( ("BOOST_PROTO_LOGICAL_typename_G" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("proto_grammar" type
                                       (:typedef ("or_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [27644 27670])
                                    ("impl" variable (:type "int") (reparse-symbol classsubparts) [28244 28279])
                                    ("impl" variable (:type "int") (reparse-symbol classsubparts) [28561 28598]))                                  
                                :superclasses 
                                  ( ("transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [27533 28605])
                            ("and_" type
                               (:template 
                                  ( ("BOOST_PROTO_LOGICAL_typename_G" type nil nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("proto_grammar" type
                                       (:typedef ("and_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [29293 29320])
                                    ("impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil)
                                            ("State" type (:type "class") nil nil)
                                            ("Data" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("detail::_and_impl" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol classsubparts) [29330 29471]))                                  
                                :superclasses 
                                  ( ("transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [29180 29478])
                            ("switch_" type
                               (:template 
                                  ( ("Cases" type (:type "class") nil nil)
                                    ("Transform" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("proto_grammar" type
                                       (:typedef ("switch_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [30856 30886])
                                    ("impl" variable (:type "int") (reparse-symbol classsubparts) [31121 31156]))                                  
                                :superclasses 
                                  ( ("transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [30738 31163])
                            ("switch_" type
                               (:template 
                                  ( ("Cases" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("proto_grammar" type
                                       (:typedef ("switch_" type (:type "class") nil nil)
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [31358 31388])
                                    ("impl" variable (:type "int") (reparse-symbol classsubparts) [31543 31578])
                                    ("impl" variable (:type "int") (reparse-symbol classsubparts) [31754 31791]))                                  
                                :superclasses 
                                  ( ("transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("Cases" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [31264 31798])
                            ("exact" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [32307 32352])
                            ("convertible_to" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [32817 32871])
                            ("vararg" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil))                                  
                                :type "struct"
                                :members 
                                  ( ("proto_is_vararg_" type
                                       (:typedef ("void")
                                        :type "typedef")
                                        (reparse-symbol classsubparts) [33746 33776]))                                  
                                :superclasses 
                                  ( ("Grammar" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [33645 33783])
                            ("is_callable" type
                               (:template 
                                  ( ("BOOST_PROTO_LOGICAL_typename_G" type nil nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("or_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [33819 33938])
                            ("is_callable" type
                               (:template 
                                  ( ("BOOST_PROTO_LOGICAL_typename_G" type nil nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("and_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [33974 34094])
                            ("is_callable" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("not_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [34130 34222])
                            ("is_callable" type
                               (:template 
                                  ( ("If" type (:type "class") nil nil)
                                    ("Then" type (:type "class") nil nil)
                                    ("Else" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("if_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [34258 34381])
                            ("is_callable" type
                               (:template 
                                  ( ("Grammar" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("vararg" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [34417 34511])
                            ("is_callable" type
                               (:template 
                                  ( ("Cases" type (:type "class") nil nil)
                                    ("Transform" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("switch_" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [34547 34669]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2329 34672]))                  
                :type "namespace")
                nil [2311 34673]))          
      :file "matches.hpp"
      :pointmax 34802
      :fsize 34801
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((TEMPLATE 31745 . 31753) (punctuation 31744 . 31745) (punctuation 31743 . 31744) (punctuation 31742 . 31743) (symbol 31733 . 31742) (punctuation 31732 . 31733) (punctuation 31731 . 31732) (symbol 31727 . 31731) (TYPENAME 31718 . 31726) (punctuation 31717 . 31718) (symbol 31712 . 31717) (TEMPLATE 31703 . 31711) (punctuation 31702 . 31703) (punctuation 31701 . 31702) (symbol 31696 . 31701) (punctuation 31694 . 31695) (punctuation 31682 . 31683) (symbol 31678 . 31682) (punctuation 31676 . 31677) (symbol 31671 . 31676) (punctuation 31669 . 31670) (punctuation 31668 . 31669) (symbol 31663 . 31667) (punctuation 31662 . 31663) (symbol 31658 . 31662) (STRUCT 31651 . 31657) (punctuation 31641 . 31642) (symbol 31637 . 31641) (TYPENAME 31628 . 31636) (punctuation 31626 . 31627) (symbol 31621 . 31626) (TYPENAME 31612 . 31620) (punctuation 31610 . 31611) (symbol 31606 . 31610) (TYPENAME 31597 . 31605) (punctuation 31596 . 31597) (TEMPLATE 31588 . 31596) (TEMPLATE 31534 . 31542) (punctuation 31533 . 31534) (punctuation 31532 . 31533) (punctuation 31531 . 31532) (symbol 31522 . 31531) (punctuation 31521 . 31522) (punctuation 31520 . 31521) (symbol 31516 . 31520) (TYPENAME 31507 . 31515) (punctuation 31506 . 31507) (symbol 31501 . 31506) (TEMPLATE 31492 . 31500) (punctuation 31491 . 31492) (punctuation 31490 . 31491) (symbol 31485 . 31490) (punctuation 31483 . 31484) (symbol 31468 . 31472) (STRUCT 31461 . 31467) (punctuation 31451 . 31452) (symbol 31447 . 31451) (TYPENAME 31438 . 31446) (punctuation 31436 . 31437) (symbol 31431 . 31436) (TYPENAME 31422 . 31430) (punctuation 31420 . 31421) (symbol 31416 . 31420) (TYPENAME 31407 . 31415) (punctuation 31406 . 31407) (TEMPLATE 31398 . 31406) (TEMPLATE 31112 . 31120) (punctuation 31111 . 31112) (punctuation 31110 . 31111) (punctuation 31109 . 31110) (symbol 31085 . 31096) (punctuation 31084 . 31085) (punctuation 31083 . 31084) (punctuation 31082 . 31083) (symbol 31078 . 31082) (punctuation 31076 . 31077) (symbol 31071 . 31076) (punctuation 31069 . 31070) (symbol 31065 . 31069) (punctuation 31064 . 31065) (symbol 31060 . 31064) (TEMPLATE 31051 . 31059) (punctuation 31050 . 31051) (punctuation 31049 . 31050) (punctuation 31048 . 31049) (symbol 31039 . 31048) (punctuation 31037 . 31038) (symbol 31036 . 31037) (punctuation 31035 . 31036) (symbol 31031 . 31035) (TYPENAME 31022 . 31030) (punctuation 31004 . 31005) (symbol 30999 . 31004) (TEMPLATE 30990 . 30998) (punctuation 30989 . 30990) (punctuation 30988 . 30989) (symbol 30983 . 30988) (punctuation 30981 . 30982) (symbol 30966 . 30970) (STRUCT 30959 . 30965) (punctuation 30949 . 30950) (symbol 30945 . 30949) (TYPENAME 30936 . 30944) (punctuation 30934 . 30935) (symbol 30929 . 30934) (TYPENAME 30920 . 30928) (punctuation 30918 . 30919) (symbol 30914 . 30918) (TYPENAME 30905 . 30913) (punctuation 30904 . 30905) (TEMPLATE 30896 . 30904) (TEMPLATE 28552 . 28560) (punctuation 28551 . 28552) (punctuation 28550 . 28551) (symbol 28545 . 28550) (punctuation 28544 . 28545) (punctuation 28543 . 28544) (punctuation 28542 . 28543) (symbol 28526 . 28529) (punctuation 28524 . 28525) (symbol 28496 . 28509) (punctuation 28495 . 28496) (punctuation 28494 . 28495) (symbol 28490 . 28494) (TYPENAME 28481 . 28489) (punctuation 28479 . 28480) (symbol 28446 . 28464) (punctuation 28445 . 28446) (punctuation 28444 . 28445) (symbol 28440 . 28444) (TYPENAME 28431 . 28439) (punctuation 28413 . 28414) (symbol 28405 . 28413) (punctuation 28404 . 28405) (punctuation 28403 . 28404) (symbol 28397 . 28403) (punctuation 28395 . 28396) (punctuation 28383 . 28384) (symbol 28379 . 28383) (punctuation 28377 . 28378) (symbol 28372 . 28377) (punctuation 28370 . 28371) (punctuation 28369 . 28370) (symbol 28364 . 28368) (punctuation 28363 . 28364) (symbol 28359 . 28363) (STRUCT 28352 . 28358) (punctuation 28342 . 28343) (symbol 28338 . 28342) (TYPENAME 28329 . 28337) (punctuation 28327 . 28328) (symbol 28322 . 28327) (TYPENAME 28313 . 28321) (punctuation 28311 . 28312) (symbol 28307 . 28311) (TYPENAME 28298 . 28306) (punctuation 28297 . 28298) (TEMPLATE 28289 . 28297) (TEMPLATE 28235 . 28243) (punctuation 28234 . 28235) (punctuation 28233 . 28234) (symbol 28228 . 28233) (punctuation 28227 . 28228) (punctuation 28226 . 28227) (punctuation 28225 . 28226) (symbol 28209 . 28212) (punctuation 28207 . 28208) (symbol 28179 . 28192) (punctuation 28178 . 28179) (punctuation 28177 . 28178) (symbol 28173 . 28177) (TYPENAME 28164 . 28172) (punctuation 28162 . 28163) (symbol 28129 . 28147) (punctuation 28128 . 28129) (punctuation 28127 . 28128) (symbol 28123 . 28127) (TYPENAME 28114 . 28122) (punctuation 28096 . 28097) (symbol 28088 . 28096) (punctuation 28087 . 28088) (punctuation 28086 . 28087) (symbol 28080 . 28086) (punctuation 28078 . 28079) (symbol 28063 . 28067) (STRUCT 28056 . 28062) (punctuation 28046 . 28047) (symbol 28042 . 28046) (TYPENAME 28033 . 28041) (punctuation 28031 . 28032) (symbol 28026 . 28031) (TYPENAME 28017 . 28025) (punctuation 28015 . 28016) (symbol 28011 . 28015) (TYPENAME 28002 . 28010) (punctuation 28001 . 28002) (TEMPLATE 27993 . 28001) (punctuation 26289 . 26290) (punctuation 26288 . 26289) (punctuation 26287 . 26288) (symbol 26283 . 26287) (punctuation 26281 . 26282) (symbol 26276 . 26281) (punctuation 26274 . 26275) (symbol 26270 . 26274) (punctuation 26269 . 26270) (symbol 26265 . 26269) (TEMPLATE 26256 . 26264) (punctuation 26255 . 26256) (punctuation 26254 . 26255) (symbol 26249 . 26254) (TYPENAME 26240 . 26248) (TYPEDEF 26232 . 26239) (punctuation 26194 . 26195) (punctuation 26193 . 26194) (punctuation 26192 . 26193) (punctuation 26174 . 26175) (symbol 26170 . 26174) (punctuation 26168 . 26169) (symbol 26167 . 26168) (punctuation 26166 . 26167) (symbol 26162 . 26166) (punctuation 26160 . 26161) (punctuation 26140 . 26141) (symbol 26136 . 26140) (punctuation 26134 . 26135) (symbol 26133 . 26134) (punctuation 26132 . 26133) (symbol 26128 . 26132) (punctuation 26126 . 26127) (semantic-list 26065 . 26107) (punctuation 26064 . 26065) (BOOL 26060 . 26064) (punctuation 26059 . 26060) (symbol 26048 . 26059) (punctuation 26094 . 26095) (punctuation 26093 . 26094) (punctuation 26026 . 26027) (symbol 26022 . 26026) (punctuation 26021 . 26022) (punctuation 26020 . 26021) (symbol 26017 . 26020) (TYPENAME 26008 . 26016) (TYPEDEF 25984 . 25991) (punctuation 25935 . 25936) (punctuation 25934 . 25935) (punctuation 25933 . 25934) (symbol 25929 . 25933) (punctuation 25927 . 25928) (symbol 25922 . 25927) (punctuation 25920 . 25921) (symbol 25916 . 25920) (punctuation 25915 . 25916) (symbol 25911 . 25915) (TEMPLATE 25902 . 25910) (punctuation 25901 . 25902) (punctuation 25900 . 25901) (punctuation 25899 . 25900) (symbol 25897 . 25899) (punctuation 25895 . 25896) (symbol 25894 . 25895) (punctuation 25893 . 25894) (symbol 25889 . 25893) (TYPENAME 25880 . 25888) (TYPEDEF 25856 . 25863) (semantic-list 23159 . 23199) (symbol 23123 . 23159) (TEMPLATE 22263 . 22271) (punctuation 22262 . 22263) (punctuation 22261 . 22262) (punctuation 22260 . 22261) (symbol 22258 . 22260) (punctuation 22256 . 22257) (symbol 22255 . 22256) (punctuation 22254 . 22255) (punctuation 22253 . 22254) (symbol 22248 . 22253) (punctuation 22247 . 22248) (symbol 22243 . 22247) (punctuation 22242 . 22243) (punctuation 22241 . 22242) (symbol 22236 . 22241) (punctuation 22234 . 22235) (punctuation 22222 . 22223) (symbol 22218 . 22222) (punctuation 22216 . 22217) (symbol 22211 . 22216) (punctuation 22209 . 22210) (symbol 22205 . 22209) (punctuation 22203 . 22204) (punctuation 22202 . 22203) (symbol 22200 . 22202) (punctuation 22199 . 22200) (symbol 22195 . 22199) (punctuation 22194 . 22195) (punctuation 22193 . 22194) (symbol 22188 . 22193) (punctuation 22187 . 22188) (symbol 22178 . 22187) (STRUCT 22171 . 22177) (punctuation 22161 . 22162) (symbol 22157 . 22161) (TYPENAME 22148 . 22156) (punctuation 22146 . 22147) (symbol 22141 . 22146) (TYPENAME 22132 . 22140) (punctuation 22130 . 22131) (symbol 22126 . 22130) (TYPENAME 22117 . 22125) (punctuation 22115 . 22116) (symbol 22113 . 22115) (TYPENAME 22104 . 22112) (punctuation 22103 . 22104) (TEMPLATE 22095 . 22103) (semantic-list 21592 . 21632) (symbol 21556 . 21592) (punctuation 19749 . 19750) (semantic-list 19747 . 19749) (punctuation 19741 . 19742) (symbol 19719 . 19732) (punctuation 19718 . 19719) (punctuation 19717 . 19718) (symbol 19710 . 19717) (TYPENAME 19701 . 19709) (punctuation 19699 . 19700) (symbol 19675 . 19688) (punctuation 19674 . 19675) (punctuation 19673 . 19674) (symbol 19669 . 19673) (TYPENAME 19660 . 19668) (punctuation 19658 . 19659) (symbol 19629 . 19647) (punctuation 19628 . 19629) (punctuation 19627 . 19628) (symbol 19623 . 19627) (TYPENAME 19614 . 19622) (punctuation 19600 . 19601) (symbol 19592 . 19600) (punctuation 19591 . 19592) (punctuation 19590 . 19591) (symbol 19584 . 19590) (punctuation 19582 . 19583) (punctuation 19574 . 19575) (symbol 19567 . 19574) (punctuation 19565 . 19566) (punctuation 19564 . 19565) (symbol 19559 . 19563) (punctuation 19558 . 19559) (symbol 19551 . 19558) (STRUCT 19544 . 19550) (punctuation 19538 . 19539) (symbol 19531 . 19538) (TYPENAME 19522 . 19530) (punctuation 19520 . 19521) (symbol 19516 . 19520) (TYPENAME 19507 . 19515) (punctuation 19506 . 19507) (TEMPLATE 19498 . 19506) (punctuation 19461 . 19462) (semantic-list 19459 . 19461) (punctuation 19453 . 19454) (symbol 19431 . 19444) (punctuation 19430 . 19431) (punctuation 19429 . 19430) (symbol 19422 . 19429) (TYPENAME 19413 . 19421) (punctuation 19411 . 19412) (symbol 19387 . 19400) (punctuation 19386 . 19387) (punctuation 19385 . 19386) (symbol 19381 . 19385) (TYPENAME 19372 . 19380) (punctuation 19370 . 19371) (symbol 19341 . 19359) (punctuation 19340 . 19341) (punctuation 19339 . 19340) (symbol 19335 . 19339) (TYPENAME 19326 . 19334) (punctuation 19312 . 19313) (symbol 19304 . 19312) (punctuation 19303 . 19304) (punctuation 19302 . 19303) (symbol 19296 . 19302) (punctuation 19294 . 19295) (symbol 19280 . 19287) (STRUCT 19273 . 19279) (punctuation 19267 . 19268) (symbol 19260 . 19267) (TYPENAME 19251 . 19259) (punctuation 19249 . 19250) (symbol 19245 . 19249) (TYPENAME 19236 . 19244) (punctuation 19235 . 19236) (TEMPLATE 19227 . 19235) (punctuation 15932 . 15933) (semantic-list 15858 . 15932) (punctuation 15848 . 15849) (symbol 15822 . 15835) (punctuation 15821 . 15822) (punctuation 15820 . 15821) (punctuation 15819 . 15820) (symbol 15816 . 15819) (punctuation 15815 . 15816) (symbol 15810 . 15815) (TEMPLATE 15801 . 15809) (punctuation 15800 . 15801) (punctuation 15799 . 15800) (symbol 15794 . 15799) (TYPENAME 15785 . 15793) (punctuation 15783 . 15784) (punctuation 15767 . 15768) (symbol 15762 . 15767) (punctuation 15760 . 15761) (symbol 15756 . 15760) (punctuation 15754 . 15755) (symbol 15751 . 15754) (punctuation 15750 . 15751) (symbol 15740 . 15750) (punctuation 15739 . 15740) (punctuation 15738 . 15739) (symbol 15733 . 15738) (punctuation 15731 . 15732) (symbol 15712 . 15716) (punctuation 15694 . 15695) (symbol 15686 . 15694) (punctuation 15684 . 15685) (punctuation 15672 . 15673) (punctuation 15670 . 15671) (symbol 15665 . 15670) (punctuation 15664 . 15665) (symbol 15657 . 15664) (punctuation 15655 . 15656) (punctuation 15654 . 15655) (symbol 15649 . 15654) (punctuation 15647 . 15648) (symbol 15643 . 15647) (punctuation 15641 . 15642) (symbol 15638 . 15641) (punctuation 15637 . 15638) (symbol 15627 . 15637) (punctuation 15626 . 15627) (punctuation 15625 . 15626) (symbol 15620 . 15625) (punctuation 15618 . 15619) (symbol 15614 . 15618) (punctuation 15613 . 15614) (symbol 15605 . 15613) (STRUCT 15598 . 15604) (punctuation 15588 . 15589) (symbol 15583 . 15588) (TYPENAME 15574 . 15582) (punctuation 15572 . 15573) (symbol 15567 . 15572) (LONG 15562 . 15566) (punctuation 15560 . 15561) (symbol 15556 . 15560) (TYPENAME 15547 . 15555) (punctuation 15545 . 15546) (symbol 15542 . 15545) (TYPENAME 15533 . 15541) (punctuation 15531 . 15532) (symbol 15527 . 15531) (TYPENAME 15518 . 15526) (punctuation 15517 . 15518) (TEMPLATE 15509 . 15517) (punctuation 15399 . 15400) (semantic-list 15191 . 15399) (punctuation 15181 . 15182) (symbol 15155 . 15168) (punctuation 15154 . 15155) (punctuation 15153 . 15154) (punctuation 15152 . 15153) (symbol 15124 . 15135) (punctuation 15123 . 15124) (punctuation 15122 . 15123) (punctuation 15121 . 15122) (INT 15118 . 15121) (punctuation 15117 . 15118) (INT 15114 . 15117) (punctuation 15113 . 15114) (symbol 15109 . 15113) (punctuation 15108 . 15109) (symbol 15104 . 15108) (TEMPLATE 15095 . 15103) (punctuation 15094 . 15095) (punctuation 15093 . 15094) (punctuation 15092 . 15093) (symbol 15083 . 15092) (punctuation 15082 . 15083) (symbol 15081 . 15082) (punctuation 15080 . 15081) (symbol 15076 . 15080) (TYPENAME 15067 . 15075) (punctuation 15045 . 15046) (symbol 15040 . 15045) (TEMPLATE 15031 . 15039) (punctuation 15030 . 15031) (punctuation 15029 . 15030) (symbol 15024 . 15029) (TYPENAME 15015 . 15023) (punctuation 15013 . 15014) (punctuation 14997 . 14998) (symbol 14992 . 14997) (punctuation 14990 . 14991) (symbol 14986 . 14990) (punctuation 14984 . 14985) (symbol 14981 . 14984) (punctuation 14980 . 14981) (symbol 14970 . 14980) (punctuation 14969 . 14970) (punctuation 14968 . 14969) (symbol 14963 . 14968) (punctuation 14961 . 14962) (symbol 14942 . 14946) (punctuation 14924 . 14925) (symbol 14916 . 14924) (punctuation 14914 . 14915) (punctuation 14902 . 14903) (punctuation 14900 . 14901) (symbol 14891 . 14900) (punctuation 14889 . 14890) (symbol 14884 . 14889) (punctuation 14883 . 14884) (symbol 14876 . 14883) (punctuation 14874 . 14875) (punctuation 14873 . 14874) (symbol 14868 . 14873) (punctuation 14866 . 14867) (symbol 14862 . 14866) (punctuation 14860 . 14861) (symbol 14857 . 14860) (punctuation 14856 . 14857) (symbol 14846 . 14856) (punctuation 14845 . 14846) (punctuation 14844 . 14845) (symbol 14839 . 14844) (punctuation 14837 . 14838) (symbol 14833 . 14837) (punctuation 14832 . 14833) (symbol 14824 . 14832) (STRUCT 14817 . 14823) (punctuation 14807 . 14808) (symbol 14798 . 14807) (TYPENAME 14789 . 14797) (punctuation 14787 . 14788) (symbol 14782 . 14787) (TYPENAME 14773 . 14781) (punctuation 14771 . 14772) (symbol 14766 . 14771) (LONG 14761 . 14765) (punctuation 14759 . 14760) (symbol 14755 . 14759) (TYPENAME 14746 . 14754) (punctuation 14744 . 14745) (symbol 14741 . 14744) (TYPENAME 14732 . 14740) (punctuation 14730 . 14731) (symbol 14726 . 14730) (TYPENAME 14717 . 14725) (punctuation 14716 . 14717) (TEMPLATE 14708 . 14716) (punctuation 14664 . 14665) (semantic-list 14662 . 14664) (punctuation 14652 . 14653) (punctuation 14650 . 14651) (symbol 14637 . 14650) (punctuation 14636 . 14637) (punctuation 14635 . 14636) (symbol 14628 . 14635) (TYPENAME 14619 . 14627) (punctuation 14617 . 14618) (symbol 14608 . 14617) (punctuation 14606 . 14607) (symbol 14602 . 14606) (punctuation 14601 . 14602) (symbol 14593 . 14601) (punctuation 14592 . 14593) (symbol 14588 . 14592) (punctuation 14587 . 14588) (punctuation 14586 . 14587) (symbol 14583 . 14586) (punctuation 14581 . 14582) (punctuation 14569 . 14570) (punctuation 14567 . 14568) (symbol 14560 . 14567) (punctuation 14559 . 14560) (symbol 14555 . 14559) (punctuation 14553 . 14554) (symbol 14544 . 14553) (punctuation 14542 . 14543) (symbol 14538 . 14542) (punctuation 14537 . 14538) (symbol 14529 . 14537) (STRUCT 14522 . 14528) (punctuation 14512 . 14513) (symbol 14505 . 14512) (TYPENAME 14496 . 14504) (punctuation 14494 . 14495) (symbol 14485 . 14494) (TYPENAME 14476 . 14484) (punctuation 14474 . 14475) (symbol 14470 . 14474) (TYPENAME 14461 . 14469) (punctuation 14460 . 14461) (TEMPLATE 14452 . 14460) (punctuation 14411 . 14412) (semantic-list 14409 . 14411) (punctuation 14399 . 14400) (symbol 14386 . 14399) (punctuation 14385 . 14386) (punctuation 14384 . 14385) (symbol 14382 . 14384) (TYPENAME 14373 . 14381) (punctuation 14371 . 14372) (symbol 14362 . 14371) (punctuation 14360 . 14361) (symbol 14356 . 14360) (punctuation 14355 . 14356) (symbol 14347 . 14355) (punctuation 14345 . 14346) (punctuation 14333 . 14334) (punctuation 14331 . 14332) (symbol 14329 . 14331) (punctuation 14328 . 14329) (symbol 14324 . 14328) (punctuation 14322 . 14323) (symbol 14313 . 14322) (punctuation 14311 . 14312) (symbol 14307 . 14311) (punctuation 14306 . 14307) (symbol 14298 . 14306) (STRUCT 14291 . 14297) (punctuation 14281 . 14282) (symbol 14279 . 14281) (TYPENAME 14270 . 14278) (punctuation 14268 . 14269) (symbol 14259 . 14268) (TYPENAME 14250 . 14258) (punctuation 14248 . 14249) (symbol 14244 . 14248) (TYPENAME 14235 . 14243) (punctuation 14234 . 14235) (TEMPLATE 14226 . 14234) (punctuation 14027 . 14028) (semantic-list 13986 . 14027) (punctuation 13976 . 13977) (symbol 13963 . 13976) (punctuation 13962 . 13963) (punctuation 13961 . 13962) (symbol 13959 . 13961) (TYPENAME 13950 . 13958) (punctuation 13948 . 13949) (symbol 13939 . 13948) (punctuation 13937 . 13938) (symbol 13933 . 13937) (punctuation 13932 . 13933) (symbol 13924 . 13932) (punctuation 13922 . 13923) (punctuation 13910 . 13911) (punctuation 13908 . 13909) (symbol 13906 . 13908) (punctuation 13905 . 13906) (symbol 13902 . 13905) (punctuation 13900 . 13901) (symbol 13891 . 13900) (punctuation 13889 . 13890) (symbol 13885 . 13889) (punctuation 13884 . 13885) (symbol 13876 . 13884) (STRUCT 13869 . 13875) (punctuation 13859 . 13860) (symbol 13857 . 13859) (TYPENAME 13848 . 13856) (punctuation 13846 . 13847) (symbol 13837 . 13846) (TYPENAME 13828 . 13836) (punctuation 13826 . 13827) (symbol 13822 . 13826) (TYPENAME 13813 . 13821) (punctuation 13812 . 13813) (TEMPLATE 13804 . 13812) (punctuation 13153 . 13154) (punctuation 13152 . 13153) (punctuation 13151 . 13152) (punctuation 13137 . 13138) (symbol 13124 . 13137) (punctuation 13123 . 13124) (punctuation 13122 . 13123) (symbol 13118 . 13122) (TYPENAME 13109 . 13117) (punctuation 13107 . 13108) (punctuation 13106 . 13107) (symbol 13101 . 13106) (punctuation 13099 . 13100) (symbol 13095 . 13099) (punctuation 13093 . 13094) (symbol 13090 . 13093) (punctuation 13089 . 13090) (symbol 13079 . 13089) (punctuation 13078 . 13079) (punctuation 13077 . 13078) (symbol 13072 . 13077) (punctuation 13070 . 13071) (symbol 13066 . 13070) (punctuation 13065 . 13066) (symbol 13057 . 13065) (punctuation 13055 . 13056) (punctuation 13039 . 13040) (symbol 13026 . 13039) (punctuation 13025 . 13026) (punctuation 13024 . 13025) (symbol 13020 . 13024) (TYPENAME 13011 . 13019) (punctuation 13009 . 13010) (punctuation 13008 . 13009) (symbol 13003 . 13008) (punctuation 13001 . 13002) (symbol 12997 . 13001) (punctuation 12995 . 12996) (symbol 12992 . 12995) (punctuation 12991 . 12992) (symbol 12981 . 12991) (punctuation 12980 . 12981) (punctuation 12979 . 12980) (symbol 12974 . 12979) (punctuation 12972 . 12973) (symbol 12968 . 12972) (punctuation 12967 . 12968) (symbol 12959 . 12967) (punctuation 12957 . 12958) (semantic-list 12761 . 12942) (punctuation 12760 . 12761) (BOOL 12756 . 12760) (punctuation 12755 . 12756) (symbol 12744 . 12755) (punctuation 12912 . 12913) (punctuation 12911 . 12912) (punctuation 12910 . 12911) (punctuation 12877 . 12878) (punctuation 12876 . 12877) (TEMPLATE 12847 . 12855) (punctuation 12846 . 12847) (punctuation 12845 . 12846) (punctuation 12799 . 12800) (punctuation 12726 . 12727) (symbol 12717 . 12726) (punctuation 12716 . 12717) (punctuation 12715 . 12716) (symbol 12712 . 12715) (punctuation 12710 . 12711) (punctuation 12698 . 12699) (punctuation 12696 . 12697) (symbol 12692 . 12696) (punctuation 12690 . 12691) (symbol 12686 . 12690) (punctuation 12684 . 12685) (symbol 12682 . 12684) (punctuation 12681 . 12682) (symbol 12678 . 12681) (punctuation 12677 . 12678) (punctuation 12676 . 12677) (symbol 12671 . 12676) (punctuation 12669 . 12670) (punctuation 12668 . 12669) (symbol 12663 . 12668) (punctuation 12661 . 12662) (symbol 12657 . 12661) (punctuation 12655 . 12656) (symbol 12652 . 12655) (punctuation 12651 . 12652) (symbol 12641 . 12651) (punctuation 12640 . 12641) (punctuation 12639 . 12640) (symbol 12634 . 12639) (punctuation 12632 . 12633) (symbol 12628 . 12632) (punctuation 12627 . 12628) (symbol 12619 . 12627) (STRUCT 12612 . 12618) (punctuation 12602 . 12603) (symbol 12598 . 12602) (TYPENAME 12589 . 12597) (punctuation 12587 . 12588) (symbol 12583 . 12587) (TYPENAME 12574 . 12582) (punctuation 12572 . 12573) (symbol 12570 . 12572) (TYPENAME 12561 . 12569) (punctuation 12559 . 12560) (symbol 12554 . 12559) (LONG 12549 . 12553) (punctuation 12547 . 12548) (symbol 12543 . 12547) (TYPENAME 12534 . 12542) (punctuation 12532 . 12533) (symbol 12529 . 12532) (TYPENAME 12520 . 12528) (punctuation 12518 . 12519) (symbol 12514 . 12518) (TYPENAME 12505 . 12513) (punctuation 12504 . 12505) (TEMPLATE 12496 . 12504) (spp-system-include "boost/proto/detail/lambda_matches.hpp" 12401 . 12457) (spp-system-include "boost/proto/detail/vararg_matches_impl.hpp" 12339 . 12400) (spp-system-include "boost/proto/detail/matches_.hpp" 12288 . 12338) (spp-system-include "boost/proto/detail/or_n.hpp" 12241 . 12287) (spp-system-include "boost/proto/detail/and_n.hpp" 12193 . 12240) (punctuation 12190 . 12191) (semantic-list 12188 . 12190) (punctuation 12178 . 12179) (symbol 12152 . 12165) (punctuation 12151 . 12152) (punctuation 12150 . 12151) (symbol 12144 . 12150) (punctuation 12143 . 12144) (punctuation 12142 . 12143) (symbol 12137 . 12142) (TYPENAME 12128 . 12136) (punctuation 12126 . 12127) (symbol 12098 . 12111) (punctuation 12097 . 12098) (punctuation 12096 . 12097) (symbol 12086 . 12096) (punctuation 12085 . 12086) (punctuation 12084 . 12085) (punctuation 12083 . 12084) (symbol 12077 . 12083) (punctuation 12076 . 12077) (punctuation 12075 . 12076) (symbol 12070 . 12075) (TYPENAME 12061 . 12069) (punctuation 12060 . 12061) (symbol 12049 . 12060) (punctuation 12048 . 12049) (punctuation 12047 . 12048) (symbol 12041 . 12047) (TYPENAME 12032 . 12040) (punctuation 12030 . 12031) (symbol 11997 . 12015) (punctuation 11996 . 11997) (punctuation 11995 . 11996) (symbol 11985 . 11995) (punctuation 11984 . 11985) (punctuation 11983 . 11984) (punctuation 11982 . 11983) (symbol 11976 . 11982) (punctuation 11975 . 11976) (punctuation 11974 . 11975) (symbol 11969 . 11974) (TYPENAME 11960 . 11968) (punctuation 11959 . 11960) (symbol 11948 . 11959) (punctuation 11947 . 11948) (punctuation 11946 . 11947) (symbol 11940 . 11946) (TYPENAME 11931 . 11939) (punctuation 11913 . 11914) (symbol 11905 . 11913) (punctuation 11903 . 11904) (punctuation 11891 . 11892) (punctuation 11889 . 11890) (number 11888 . 11889) (punctuation 11886 . 11887) (symbol 11881 . 11886) (punctuation 11879 . 11880) (symbol 11878 . 11879) (punctuation 11877 . 11878) (punctuation 11876 . 11877) (symbol 11871 . 11876) (punctuation 11870 . 11871) (symbol 11860 . 11870) (punctuation 11859 . 11860) (punctuation 11858 . 11859) (symbol 11853 . 11858) (punctuation 11851 . 11852) (punctuation 11850 . 11851) (number 11849 . 11850) (punctuation 11847 . 11848) (symbol 11842 . 11847) (punctuation 11840 . 11841) (symbol 11837 . 11840) (punctuation 11836 . 11837) (symbol 11826 . 11836) (punctuation 11825 . 11826) (punctuation 11824 . 11825) (symbol 11819 . 11824) (punctuation 11817 . 11818) (symbol 11813 . 11817) (punctuation 11811 . 11812) (symbol 11803 . 11811) (STRUCT 11796 . 11802) (punctuation 11786 . 11787) (symbol 11781 . 11786) (TYPENAME 11772 . 11780) (punctuation 11770 . 11771) (symbol 11765 . 11770) (TYPENAME 11756 . 11764) (punctuation 11754 . 11755) (symbol 11751 . 11754) (TYPENAME 11742 . 11750) (punctuation 11740 . 11741) (symbol 11736 . 11740) (TYPENAME 11727 . 11735) (punctuation 11726 . 11727) (TEMPLATE 11718 . 11726) (punctuation 11707 . 11708) (semantic-list 11705 . 11707) (punctuation 11695 . 11696) (symbol 11669 . 11682) (punctuation 11668 . 11669) (punctuation 11667 . 11668) (symbol 11661 . 11667) (punctuation 11660 . 11661) (punctuation 11659 . 11660) (symbol 11654 . 11659) (TYPENAME 11645 . 11653) (punctuation 11643 . 11644) (symbol 11615 . 11628) (punctuation 11614 . 11615) (punctuation 11613 . 11614) (symbol 11603 . 11613) (punctuation 11602 . 11603) (punctuation 11601 . 11602) (punctuation 11600 . 11601) (symbol 11594 . 11600) (punctuation 11593 . 11594) (punctuation 11592 . 11593) (symbol 11587 . 11592) (TYPENAME 11578 . 11586) (punctuation 11577 . 11578) (symbol 11566 . 11577) (punctuation 11565 . 11566) (punctuation 11564 . 11565) (symbol 11558 . 11564) (TYPENAME 11549 . 11557) (punctuation 11547 . 11548) (symbol 11514 . 11532) (punctuation 11513 . 11514) (punctuation 11512 . 11513) (symbol 11502 . 11512) (punctuation 11501 . 11502) (punctuation 11500 . 11501) (punctuation 11499 . 11500) (symbol 11493 . 11499) (punctuation 11492 . 11493) (punctuation 11491 . 11492) (symbol 11486 . 11491) (TYPENAME 11477 . 11485) (punctuation 11476 . 11477) (symbol 11465 . 11476) (punctuation 11464 . 11465) (punctuation 11463 . 11464) (symbol 11457 . 11463) (TYPENAME 11448 . 11456) (punctuation 11430 . 11431) (symbol 11422 . 11430) (punctuation 11420 . 11421) (punctuation 11408 . 11409) (punctuation 11406 . 11407) (number 11405 . 11406) (punctuation 11403 . 11404) (symbol 11398 . 11403) (punctuation 11396 . 11397) (symbol 11393 . 11396) (punctuation 11392 . 11393) (symbol 11382 . 11392) (punctuation 11381 . 11382) (punctuation 11380 . 11381) (symbol 11375 . 11380) (punctuation 11373 . 11374) (punctuation 11372 . 11373) (number 11371 . 11372) (punctuation 11369 . 11370) (symbol 11364 . 11369) (punctuation 11362 . 11363) (symbol 11359 . 11362) (punctuation 11358 . 11359) (symbol 11348 . 11358) (punctuation 11347 . 11348) (punctuation 11346 . 11347) (symbol 11341 . 11346) (punctuation 11339 . 11340) (symbol 11335 . 11339) (punctuation 11333 . 11334) (symbol 11325 . 11333) (STRUCT 11318 . 11324) (punctuation 11308 . 11309) (symbol 11303 . 11308) (TYPENAME 11294 . 11302) (punctuation 11292 . 11293) (symbol 11287 . 11292) (TYPENAME 11278 . 11286) (punctuation 11276 . 11277) (symbol 11273 . 11276) (TYPENAME 11264 . 11272) (punctuation 11262 . 11263) (symbol 11258 . 11262) (TYPENAME 11249 . 11257) (punctuation 11248 . 11249) (TEMPLATE 11240 . 11248) (punctuation 11229 . 11230) (semantic-list 11227 . 11229) (punctuation 11217 . 11218) (symbol 11211 . 11217) (punctuation 11210 . 11211) (punctuation 11209 . 11210) (symbol 11204 . 11209) (TYPENAME 11195 . 11203) (punctuation 11193 . 11194) (symbol 11187 . 11193) (punctuation 11186 . 11187) (punctuation 11185 . 11186) (symbol 11180 . 11185) (TYPENAME 11171 . 11179) (punctuation 11170 . 11171) (symbol 11154 . 11170) (punctuation 11152 . 11153) (punctuation 11140 . 11141) (punctuation 11138 . 11139) (number 11137 . 11138) (punctuation 11135 . 11136) (symbol 11130 . 11135) (punctuation 11128 . 11129) (symbol 11127 . 11128) (punctuation 11126 . 11127) (punctuation 11125 . 11126) (symbol 11120 . 11125) (punctuation 11119 . 11120) (symbol 11109 . 11119) (punctuation 11108 . 11109) (punctuation 11107 . 11108) (symbol 11102 . 11107) (punctuation 11100 . 11101) (punctuation 11099 . 11100) (number 11098 . 11099) (punctuation 11096 . 11097) (symbol 11091 . 11096) (punctuation 11089 . 11090) (symbol 11086 . 11089) (punctuation 11085 . 11086) (symbol 11075 . 11085) (punctuation 11074 . 11075) (punctuation 11073 . 11074) (symbol 11068 . 11073) (punctuation 11066 . 11067) (symbol 11062 . 11066) (punctuation 11060 . 11061) (symbol 11052 . 11060) (STRUCT 11045 . 11051) (punctuation 11035 . 11036) (symbol 11030 . 11035) (TYPENAME 11021 . 11029) (punctuation 11019 . 11020) (symbol 11014 . 11019) (TYPENAME 11005 . 11013) (punctuation 11003 . 11004) (symbol 11000 . 11003) (TYPENAME 10991 . 10999) (punctuation 10989 . 10990) (symbol 10985 . 10989) (TYPENAME 10976 . 10984) (punctuation 10975 . 10976) (TEMPLATE 10967 . 10975) (punctuation 10726 . 10727) (semantic-list 10724 . 10726) (punctuation 10714 . 10715) (symbol 10708 . 10714) (punctuation 10707 . 10708) (punctuation 10706 . 10707) (symbol 10701 . 10706) (TYPENAME 10692 . 10700) (punctuation 10690 . 10691) (symbol 10684 . 10690) (punctuation 10683 . 10684) (punctuation 10682 . 10683) (symbol 10677 . 10682) (TYPENAME 10668 . 10676) (punctuation 10667 . 10668) (symbol 10651 . 10667) (punctuation 10649 . 10650) (punctuation 10637 . 10638) (punctuation 10635 . 10636) (number 10634 . 10635) (punctuation 10632 . 10633) (symbol 10627 . 10632) (punctuation 10625 . 10626) (symbol 10622 . 10625) (punctuation 10621 . 10622) (symbol 10611 . 10621) (punctuation 10610 . 10611) (punctuation 10609 . 10610) (symbol 10604 . 10609) (punctuation 10602 . 10603) (punctuation 10601 . 10602) (number 10600 . 10601) (punctuation 10598 . 10599) (symbol 10593 . 10598) (punctuation 10591 . 10592) (symbol 10588 . 10591) (punctuation 10587 . 10588) (symbol 10577 . 10587) (punctuation 10576 . 10577) (punctuation 10575 . 10576) (symbol 10570 . 10575) (punctuation 10568 . 10569) (symbol 10564 . 10568) (punctuation 10562 . 10563) (symbol 10554 . 10562) (STRUCT 10547 . 10553) (punctuation 10537 . 10538) (symbol 10532 . 10537) (TYPENAME 10523 . 10531) (punctuation 10521 . 10522) (symbol 10516 . 10521) (TYPENAME 10507 . 10515) (punctuation 10505 . 10506) (symbol 10502 . 10505) (TYPENAME 10493 . 10501) (punctuation 10491 . 10492) (symbol 10487 . 10491) (TYPENAME 10478 . 10486) (punctuation 10477 . 10478) (TEMPLATE 10469 . 10477) (punctuation 10458 . 10459) (semantic-list 10456 . 10458) (punctuation 10446 . 10447) (semantic-list 10436 . 10445) (punctuation 10434 . 10435) (semantic-list 10423 . 10434) (punctuation 10421 . 10422) (symbol 10416 . 10421) (punctuation 10415 . 10416) (punctuation 10414 . 10415) (symbol 10409 . 10414) (TYPENAME 10400 . 10408) (punctuation 10398 . 10399) (symbol 10393 . 10398) (punctuation 10391 . 10392) (symbol 10386 . 10391) (punctuation 10384 . 10385) (symbol 10380 . 10384) (punctuation 10378 . 10379) (symbol 10364 . 10378) (punctuation 10362 . 10363) (punctuation 10350 . 10351) (punctuation 10348 . 10349) (symbol 10346 . 10348) (punctuation 10344 . 10345) (symbol 10339 . 10344) (punctuation 10337 . 10338) (symbol 10336 . 10337) (punctuation 10335 . 10336) (punctuation 10334 . 10335) (symbol 10329 . 10334) (punctuation 10328 . 10329) (symbol 10318 . 10328) (punctuation 10317 . 10318) (punctuation 10316 . 10317) (symbol 10311 . 10316) (punctuation 10309 . 10310) (punctuation 10308 . 10309) (symbol 10306 . 10308) (punctuation 10304 . 10305) (symbol 10299 . 10304) (punctuation 10297 . 10298) (symbol 10294 . 10297) (punctuation 10293 . 10294) (symbol 10283 . 10293) (punctuation 10282 . 10283) (punctuation 10281 . 10282) (symbol 10276 . 10281) (punctuation 10274 . 10275) (symbol 10270 . 10274) (punctuation 10268 . 10269) (symbol 10260 . 10268) (STRUCT 10253 . 10259) (punctuation 10243 . 10244) (symbol 10241 . 10243) (LONG 10236 . 10240) (punctuation 10234 . 10235) (symbol 10229 . 10234) (TYPENAME 10220 . 10228) (punctuation 10218 . 10219) (symbol 10216 . 10218) (LONG 10211 . 10215) (punctuation 10209 . 10210) (symbol 10204 . 10209) (TYPENAME 10195 . 10203) (punctuation 10193 . 10194) (symbol 10190 . 10193) (TYPENAME 10181 . 10189) (punctuation 10179 . 10180) (symbol 10175 . 10179) (TYPENAME 10166 . 10174) (punctuation 10165 . 10166) (TEMPLATE 10157 . 10165) (punctuation 10146 . 10147) (semantic-list 10144 . 10146) (punctuation 10134 . 10135) (semantic-list 10124 . 10133) (punctuation 10122 . 10123) (semantic-list 10111 . 10122) (punctuation 10109 . 10110) (symbol 10104 . 10109) (punctuation 10103 . 10104) (punctuation 10102 . 10103) (symbol 10097 . 10102) (TYPENAME 10088 . 10096) (punctuation 10086 . 10087) (symbol 10081 . 10086) (punctuation 10079 . 10080) (symbol 10074 . 10079) (punctuation 10072 . 10073) (symbol 10068 . 10072) (punctuation 10066 . 10067) (symbol 10052 . 10066) (punctuation 10050 . 10051) (punctuation 10038 . 10039) (punctuation 10036 . 10037) (symbol 10034 . 10036) (punctuation 10032 . 10033) (symbol 10027 . 10032) (punctuation 10025 . 10026) (symbol 10022 . 10025) (punctuation 10021 . 10022) (symbol 10011 . 10021) (punctuation 10010 . 10011) (punctuation 10009 . 10010) (symbol 10004 . 10009) (punctuation 10002 . 10003) (punctuation 10001 . 10002) (symbol 9999 . 10001) (punctuation 9997 . 9998) (symbol 9992 . 9997) (punctuation 9990 . 9991) (symbol 9987 . 9990) (punctuation 9986 . 9987) (symbol 9976 . 9986) (punctuation 9975 . 9976) (punctuation 9974 . 9975) (symbol 9969 . 9974) (punctuation 9967 . 9968) (symbol 9963 . 9967) (punctuation 9961 . 9962) (symbol 9953 . 9961) (STRUCT 9946 . 9952) (punctuation 9936 . 9937) (symbol 9934 . 9936) (LONG 9929 . 9933) (punctuation 9927 . 9928) (symbol 9922 . 9927) (TYPENAME 9913 . 9921) (punctuation 9911 . 9912) (symbol 9909 . 9911) (LONG 9904 . 9908) (punctuation 9902 . 9903) (symbol 9897 . 9902) (TYPENAME 9888 . 9896) (punctuation 9886 . 9887) (symbol 9883 . 9886) (TYPENAME 9874 . 9882) (punctuation 9872 . 9873) (symbol 9868 . 9872) (TYPENAME 9859 . 9867) (punctuation 9858 . 9859) (TEMPLATE 9850 . 9858) (punctuation 8563 . 8564) (punctuation 8551 . 8552) (punctuation 8550 . 8551) (symbol 8548 . 8549) (punctuation 8546 . 8547) (punctuation 8541 . 8542) (punctuation 8538 . 8539) (symbol 8522 . 8538) (STRUCT 8515 . 8521) (punctuation 8505 . 8506) (symbol 8504 . 8505) (symbol 8497 . 8503) (punctuation 8496 . 8497) (punctuation 8495 . 8496) (symbol 8492 . 8495) (punctuation 8490 . 8491) (symbol 8489 . 8490) (TYPENAME 8480 . 8488) (punctuation 8479 . 8480) (TEMPLATE 8471 . 8479) (punctuation 8437 . 8438) (punctuation 8425 . 8426) (punctuation 8413 . 8414) (punctuation 8409 . 8410) (punctuation 8404 . 8405) (punctuation 8401 . 8402) (symbol 8385 . 8401) (STRUCT 8378 . 8384) (punctuation 8368 . 8369) (symbol 8367 . 8368) (symbol 8360 . 8366) (punctuation 8359 . 8360) (punctuation 8358 . 8359) (symbol 8355 . 8358) (punctuation 8353 . 8354) (symbol 8352 . 8353) (TYPENAME 8343 . 8351) (punctuation 8342 . 8343) (TEMPLATE 8334 . 8342) (punctuation 8323 . 8324) (semantic-list 8321 . 8323) (punctuation 8311 . 8312) (punctuation 8297 . 8298) (semantic-list 8277 . 8280) (symbol 8258 . 8277) (punctuation 8256 . 8257) (semantic-list 8234 . 8237) (symbol 8215 . 8234) (punctuation 8193 . 8194) (symbol 8179 . 8193) (punctuation 8177 . 8178) (punctuation 8161 . 8162) (symbol 8160 . 8161) (punctuation 8158 . 8159) (symbol 8157 . 8158) (punctuation 8156 . 8157) (symbol 8136 . 8156) (punctuation 8118 . 8119) (symbol 8114 . 8118) (punctuation 8113 . 8114) (punctuation 8112 . 8113) (symbol 8109 . 8112) (punctuation 8107 . 8108) (symbol 8080 . 8096) (STRUCT 8073 . 8079) (punctuation 8063 . 8064) (symbol 8062 . 8063) (TYPENAME 8053 . 8061) (punctuation 8051 . 8052) (symbol 8050 . 8051) (TYPENAME 8041 . 8049) (punctuation 8040 . 8041) (TEMPLATE 8032 . 8040) (punctuation 6649 . 6650) (semantic-list 6647 . 6649) (punctuation 6637 . 6638) (symbol 6632 . 6637) (punctuation 6631 . 6632) (punctuation 6630 . 6631) (punctuation 6629 . 6630) (symbol 6628 . 6629) (punctuation 6627 . 6628) (symbol 6619 . 6627) (punctuation 6617 . 6618) (punctuation 6616 . 6617) (symbol 6610 . 6615) (punctuation 6609 . 6610) (punctuation 6608 . 6609) (punctuation 6607 . 6608) (symbol 6606 . 6607) (punctuation 6605 . 6606) (symbol 6597 . 6605) (punctuation 6596 . 6597) (symbol 6591 . 6596) (punctuation 6590 . 6591) (punctuation 6589 . 6590) (symbol 6586 . 6589) (punctuation 6584 . 6585) (punctuation 6572 . 6573) (punctuation 6571 . 6572) (symbol 6569 . 6570) (punctuation 6567 . 6568) (punctuation 6566 . 6567) (symbol 6564 . 6565) (punctuation 6563 . 6564) (symbol 6543 . 6563) (STRUCT 6536 . 6542) (punctuation 6526 . 6527) (symbol 6525 . 6526) (TYPENAME 6516 . 6524) (punctuation 6514 . 6515) (symbol 6513 . 6514) (TYPENAME 6504 . 6512) (punctuation 6503 . 6504) (TEMPLATE 6495 . 6503) (punctuation 5599 . 5600) (semantic-list 5597 . 5599) (punctuation 5587 . 5588) (punctuation 5573 . 5574) (symbol 5568 . 5573) (punctuation 5567 . 5568) (punctuation 5566 . 5567) (symbol 5561 . 5566) (punctuation 5559 . 5560) (number 5558 . 5559) (punctuation 5556 . 5557) (symbol 5550 . 5555) (punctuation 5549 . 5550) (punctuation 5548 . 5549) (symbol 5543 . 5548) (punctuation 5541 . 5542) (symbol 5528 . 5541) (punctuation 5527 . 5528) (punctuation 5526 . 5527) (symbol 5522 . 5526) (TYPENAME 5513 . 5521) (punctuation 5511 . 5512) (symbol 5506 . 5511) (punctuation 5505 . 5506) (symbol 5486 . 5505) (punctuation 5484 . 5485) (symbol 5464 . 5469) (punctuation 5463 . 5464) (punctuation 5462 . 5463) (punctuation 5461 . 5462) (punctuation 5443 . 5444) (symbol 5438 . 5443) (punctuation 5437 . 5438) (punctuation 5436 . 5437) (symbol 5431 . 5436) (punctuation 5429 . 5430) (symbol 5424 . 5429) (punctuation 5422 . 5423) (symbol 5416 . 5422) (punctuation 5415 . 5416) (symbol 5405 . 5415) (punctuation 5404 . 5405) (punctuation 5403 . 5404) (symbol 5398 . 5403) (punctuation 5396 . 5397) (punctuation 5376 . 5377) (symbol 5371 . 5376) (punctuation 5370 . 5371) (punctuation 5369 . 5370) (symbol 5364 . 5369) (punctuation 5362 . 5363) (symbol 5357 . 5362) (punctuation 5355 . 5356) (symbol 5349 . 5355) (punctuation 5348 . 5349) (symbol 5338 . 5348) (punctuation 5337 . 5338) (punctuation 5336 . 5337) (symbol 5331 . 5336) (punctuation 5329 . 5330) (symbol 5306 . 5310) (punctuation 5284 . 5285) (symbol 5276 . 5284) (punctuation 5258 . 5259) (symbol 5253 . 5258) (punctuation 5251 . 5252) (punctuation 5239 . 5240) (symbol 5223 . 5239) (punctuation 5222 . 5223) (punctuation 5221 . 5222) (symbol 5217 . 5221) (TYPENAME 5208 . 5216) (punctuation 5206 . 5207) (symbol 5201 . 5206) (punctuation 5199 . 5200) (symbol 5195 . 5199) (punctuation 5193 . 5194) (symbol 5189 . 5193) (punctuation 5187 . 5188) (symbol 5182 . 5187) (punctuation 5180 . 5181) (symbol 5175 . 5180) (punctuation 5173 . 5174) (symbol 5169 . 5173) (punctuation 5168 . 5169) (symbol 5154 . 5168) (STRUCT 5147 . 5153) (punctuation 5137 . 5138) (symbol 5133 . 5137) (TYPENAME 5124 . 5132) (punctuation 5122 . 5123) (symbol 5117 . 5122) (TYPENAME 5108 . 5116) (punctuation 5106 . 5107) (symbol 5101 . 5106) (TYPENAME 5092 . 5100) (punctuation 5090 . 5091) (symbol 5086 . 5090) (TYPENAME 5077 . 5085) (punctuation 5076 . 5077) (TEMPLATE 5068 . 5076) (punctuation 4874 . 4875) (punctuation 4862 . 4863) (symbol 4846 . 4862) (punctuation 4845 . 4846) (punctuation 4844 . 4845) (symbol 4840 . 4844) (TYPENAME 4831 . 4839) (punctuation 4829 . 4830) (symbol 4825 . 4829) (punctuation 4823 . 4824) (symbol 4819 . 4823) (punctuation 4817 . 4818) (symbol 4813 . 4817) (punctuation 4811 . 4812) (symbol 4806 . 4811) (punctuation 4804 . 4805) (symbol 4799 . 4804) (punctuation 4797 . 4798) (symbol 4793 . 4797) (punctuation 4792 . 4793) (symbol 4778 . 4792) (STRUCT 4771 . 4777) (punctuation 4761 . 4762) (symbol 4757 . 4761) (TYPENAME 4748 . 4756) (punctuation 4746 . 4747) (symbol 4741 . 4746) (TYPENAME 4732 . 4740) (punctuation 4730 . 4731) (symbol 4725 . 4730) (TYPENAME 4716 . 4724) (punctuation 4714 . 4715) (symbol 4710 . 4714) (TYPENAME 4701 . 4709) (punctuation 4700 . 4701) (TEMPLATE 4692 . 4700) (punctuation 4615 . 4616) (VOID 4611 . 4615) (punctuation 4609 . 4610) (symbol 4604 . 4608) (TYPENAME 4595 . 4603) (punctuation 4593 . 4594) (symbol 4589 . 4593) (BOOL 4584 . 4588) (punctuation 4582 . 4583) (symbol 4579 . 4582) (BOOL 4574 . 4578) (punctuation 4572 . 4573) (symbol 4568 . 4572) (TYPENAME 4559 . 4567) (punctuation 4557 . 4558) (symbol 4552 . 4557) (TYPENAME 4543 . 4551) (punctuation 4541 . 4542) (symbol 4536 . 4541) (TYPENAME 4527 . 4535) (punctuation 4525 . 4526) (symbol 4521 . 4525) (TYPENAME 4512 . 4520) (punctuation 4511 . 4512) (TEMPLATE 4503 . 4511) (punctuation 4286 . 4287) (punctuation 4274 . 4275) (semantic-list 4270 . 4273) (symbol 4238 . 4270) (number 4271 . 4272) (punctuation 4236 . 4237) (symbol 4228 . 4236) (punctuation 4227 . 4228) (symbol 4226 . 4227) (number 4271 . 4272) (punctuation 4224 . 4225) (punctuation 4223 . 4224) (symbol 4218 . 4223) (punctuation 4217 . 4218) (symbol 4216 . 4217) (punctuation 4215 . 4216) (symbol 4201 . 4215) (STRUCT 4194 . 4200) (punctuation 4184 . 4185) (symbol 4176 . 4184) (TYPENAME 4167 . 4175) (punctuation 4165 . 4166) (symbol 4160 . 4165) (TYPENAME 4151 . 4159) (punctuation 4149 . 4150) (symbol 4148 . 4149) (CLASS 4142 . 4147) (punctuation 4140 . 4141) (TYPENAME 4132 . 4140) (punctuation 4131 . 4132) (TEMPLATE 4123 . 4131) (punctuation 4122 . 4123) (TEMPLATE 4114 . 4122) (punctuation 4080 . 4081) (punctuation 4068 . 4069) (semantic-list 4064 . 4068) (symbol 4032 . 4064) (number 4066 . 4067) (punctuation 4065 . 4066) (semantic-list 4028 . 4031) (symbol 4027 . 4028) (punctuation 4025 . 4026) (semantic-list 4022 . 4025) (symbol 4021 . 4022) (punctuation 4020 . 4021) (symbol 4006 . 4020) (STRUCT 3999 . 4005) (punctuation 3989 . 3990) (symbol 3988 . 3989) (symbol 3981 . 3987) (punctuation 3980 . 3981) (punctuation 3979 . 3980) (symbol 3976 . 3979) (punctuation 3974 . 3975) (symbol 3973 . 3974) (TYPENAME 3964 . 3972) (punctuation 3963 . 3964) (TEMPLATE 3955 . 3963) (punctuation 3921 . 3922) (punctuation 3909 . 3910) (semantic-list 3905 . 3909) (symbol 3873 . 3905) (number 3907 . 3908) (punctuation 3906 . 3907) (symbol 3871 . 3872) (number 3907 . 3908) (punctuation 3906 . 3907) (punctuation 3869 . 3870) (semantic-list 3866 . 3869) (symbol 3865 . 3866) (punctuation 3864 . 3865) (symbol 3850 . 3864) (STRUCT 3843 . 3849) (punctuation 3833 . 3834) (symbol 3832 . 3833) (symbol 3825 . 3831) (punctuation 3824 . 3825) (punctuation 3823 . 3824) (symbol 3820 . 3823) (punctuation 3818 . 3819) (symbol 3817 . 3818) (TYPENAME 3808 . 3816) (punctuation 3807 . 3808) (TEMPLATE 3799 . 3807) (punctuation 3788 . 3789) (semantic-list 3786 . 3788) (punctuation 3776 . 3777) (symbol 3775 . 3776) (punctuation 3773 . 3774) (semantic-list 3770 . 3773) (symbol 3769 . 3770) (punctuation 3768 . 3769) (symbol 3755 . 3768) (punctuation 3753 . 3754) (punctuation 3741 . 3742) (semantic-list 3737 . 3741) (symbol 3705 . 3737) (number 3739 . 3740) (punctuation 3738 . 3739) (symbol 3703 . 3704) (number 3739 . 3740) (punctuation 3738 . 3739) (punctuation 3701 . 3702) (semantic-list 3698 . 3701) (symbol 3697 . 3698) (punctuation 3696 . 3697) (symbol 3682 . 3696) (STRUCT 3675 . 3681) (punctuation 3665 . 3666) (symbol 3664 . 3665) (TYPENAME 3655 . 3663) (punctuation 3653 . 3654) (symbol 3652 . 3653) (symbol 3645 . 3651) (punctuation 3644 . 3645) (punctuation 3643 . 3644) (symbol 3640 . 3643) (punctuation 3638 . 3639) (symbol 3637 . 3638) (TYPENAME 3628 . 3636) (punctuation 3627 . 3628) (TEMPLATE 3619 . 3627) (punctuation 3585 . 3586) (punctuation 3573 . 3574) (semantic-list 3569 . 3573) (symbol 3537 . 3569) (number 3571 . 3572) (punctuation 3570 . 3571) (symbol 3535 . 3536) (number 3571 . 3572) (punctuation 3570 . 3571) (punctuation 3533 . 3534) (symbol 3532 . 3533) (punctuation 3531 . 3532) (symbol 3517 . 3531) (STRUCT 3510 . 3516) (punctuation 3500 . 3501) (symbol 3499 . 3500) (TYPENAME 3490 . 3498) (punctuation 3489 . 3490) (TEMPLATE 3481 . 3489) (punctuation 3447 . 3448) (punctuation 3435 . 3436) (semantic-list 3431 . 3435) (symbol 3399 . 3431) (number 3433 . 3434) (punctuation 3432 . 3433) (symbol 3397 . 3398) (number 3433 . 3434) (punctuation 3432 . 3433) (punctuation 3396 . 3397) (punctuation 3395 . 3396) (symbol 3390 . 3395) (number 3433 . 3434) (punctuation 3432 . 3433) (punctuation 3388 . 3389) (symbol 3387 . 3388) (punctuation 3386 . 3387) (symbol 3372 . 3386) (STRUCT 3365 . 3371) (punctuation 3355 . 3356) (symbol 3354 . 3355) (TYPENAME 3345 . 3353) (punctuation 3344 . 3345) (TEMPLATE 3336 . 3344) (punctuation 3259 . 3260) (semantic-list 3203 . 3250) (symbol 3171 . 3203) (punctuation 3243 . 3244) (punctuation 3242 . 3243) (punctuation 3224 . 3225) (punctuation 3223 . 3224) (symbol 3157 . 3158) (punctuation 3243 . 3244) (punctuation 3242 . 3243) (punctuation 3224 . 3225) (punctuation 3223 . 3224) (TYPENAME 3148 . 3156) (punctuation 3243 . 3244) (punctuation 3242 . 3243) (punctuation 3224 . 3225) (punctuation 3223 . 3224) (punctuation 3146 . 3147) (symbol 3145 . 3146) (TYPENAME 3136 . 3144) (punctuation 3135 . 3136) (TEMPLATE 3127 . 3135) (punctuation 3093 . 3094) (punctuation 3081 . 3082) (semantic-list 3071 . 3081) (symbol 3070 . 3071) (punctuation 3068 . 3069) (semantic-list 3065 . 3068) (symbol 3064 . 3065) (punctuation 3063 . 3064) (symbol 3050 . 3063) (STRUCT 3043 . 3049) (punctuation 3033 . 3034) (symbol 3032 . 3033) (symbol 3025 . 3031) (punctuation 3024 . 3025) (punctuation 3023 . 3024) (symbol 3020 . 3023) (punctuation 3018 . 3019) (symbol 3017 . 3018) (TYPENAME 3008 . 3016) (punctuation 3007 . 3008) (TEMPLATE 2999 . 3007) (punctuation 2965 . 2966) (punctuation 2953 . 2954) (punctuation 2952 . 2953) (CONST 2946 . 2951) (symbol 2944 . 2945) (punctuation 2942 . 2943) (semantic-list 2939 . 2942) (symbol 2938 . 2939) (punctuation 2937 . 2938) (symbol 2924 . 2937) (STRUCT 2917 . 2923) (punctuation 2907 . 2908) (symbol 2906 . 2907) (symbol 2899 . 2905) (punctuation 2898 . 2899) (punctuation 2897 . 2898) (symbol 2894 . 2897) (punctuation 2892 . 2893) (symbol 2891 . 2892) (TYPENAME 2882 . 2890) (punctuation 2881 . 2882) (TEMPLATE 2873 . 2881) (punctuation 2839 . 2840) (punctuation 2827 . 2828) (punctuation 2826 . 2827) (symbol 2824 . 2825) (punctuation 2822 . 2823) (semantic-list 2819 . 2822) (symbol 2818 . 2819) (punctuation 2817 . 2818) (symbol 2804 . 2817) (STRUCT 2797 . 2803) (punctuation 2787 . 2788) (symbol 2786 . 2787) (symbol 2779 . 2785) (punctuation 2778 . 2779) (punctuation 2777 . 2778) (symbol 2774 . 2777) (punctuation 2772 . 2773) (symbol 2771 . 2772) (TYPENAME 2762 . 2770) (punctuation 2761 . 2762) (TEMPLATE 2753 . 2761))
      :lexical-table 
        '(("BOOST_PROTO_MATCHES_HPP_EAN_11_03_2006")
          )
)
    (semanticdb-table "literal.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_LITERAL_HPP_EAN_01_03_2007" variable (:constant-flag t) nil [457 495])
            ("boost/config.hpp" include (:system-flag t) nil [497 524])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [525 561])
            ("boost/proto/expr.hpp" include (:system-flag t) nil [562 593])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [594 627])
            ("boost/proto/extends.hpp" include (:system-flag t) nil [628 662])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("utility" type
                               (:members 
                                  ( ("literal" type
                                       (:template 
                                          ( ("T" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("private" label nil (reparse-symbol classsubparts) [1357 1365])
                                            ("terminal_type" type
                                               (:typedef ("basic_expr" type
                                                     (:template-specifier 
                                                        ( ("tag::terminal" type nil nil nil)
                                                          ("term" type nil nil nil)
                                                          ("0"))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1378 1438])
                                            ("base_type" type
                                               (:typedef ("extends" type
                                                     (:template-specifier 
                                                        ( ("terminal_type" type nil nil nil)
                                                          ("literal" type nil nil nil)
                                                          ("Domain" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1451 1520])
                                            ("literal_t" type
                                               (:typedef ("literal" type
                                                     (:template-specifier 
                                                        ( ("T" type nil nil nil)
                                                          ("Domain" type nil nil nil))                                                        
                                                      :type "class")
                                                      nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1533 1570])
                                            ("public" label nil (reparse-symbol classsubparts) [1580 1587])
                                            ("value_type" type
                                               (:typedef ("detail::term_traits::value_type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1600 1669])
                                            ("reference" type
                                               (:typedef ("detail::term_traits::reference" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1682 1750])
                                            ("const_reference" type
                                               (:typedef ("detail::term_traits::const_reference" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1763 1837])
                                            ("literal" function
                                               (:constructor-flag t
                                                :type ("literal" type (:type "struct") nil nil))
                                                (reparse-symbol classsubparts) [1851 1927])
                                            ("literal" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("literal" type (:type "struct") nil nil)
                                                :arguments 
                                                  ( ("u" variable
                                                       (:reference 1
                                                        :type ("U" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1982 1987]))                                                  
                                                :constructor-flag t)
                                                (reparse-symbol classsubparts) [1941 2052])
                                            ("literal" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("literal" type (:type "struct") nil nil)
                                                :arguments 
                                                  ( ("u" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("U" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [2107 2118]))                                                  
                                                :constructor-flag t)
                                                (reparse-symbol classsubparts) [2066 2183])
                                            ("literal" function
                                               (:template 
                                                  ( ("U" type (:type "class") nil nil))                                                  
                                                :type ("literal" type (:type "struct") nil nil)
                                                :arguments 
                                                  ( ("u" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("literal" type
                                                             (:template-specifier 
                                                                ( ("U" type nil nil nil)
                                                                  ("Domain" type nil nil nil))                                                                
                                                              :type "class")
                                                              nil nil))
                                                        (reparse-symbol arg-sub-list) [2238 2266]))                                                  
                                                :constructor-flag t)
                                                (reparse-symbol classsubparts) [2197 2337])
                                            ("get" function (:type ("reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2408 2495])
                                            ("get" function (:type ("const_reference" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2509 2608]))                                          
                                        :superclasses 
                                          ( ("extends" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1138 2619]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [704 2625])
                            ("lit" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("literal" type
                                     (:template-specifier 
                                        ( ("T" type (:reference 1) nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2923 2928]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [2868 2972])
                            ("lit" function
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type ("literal" type
                                     (:template-specifier 
                                        ( ("T" type
                                             (:reference 1
                                              :constant-flag t)
                                              nil nil))                                        
                                      :type "class")
                                      nil nil)
                                :arguments 
                                  ( ("t" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("T" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3065 3076]))                                  
                                :typemodifiers ("inline"))
                                (reparse-symbol namespacesubparts) [3004 3385]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [682 3388]))                  
                :type "namespace")
                nil [664 3389]))          
      :file "literal.hpp"
      :pointmax 3398
      :fsize 3397
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((semantic-list 2383 . 2394) (symbol 2351 . 2383))
      :lexical-table 
        '(("BOOST_PROTO_LITERAL_HPP_EAN_01_03_2007")
          )
)
    (semanticdb-table "operators.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_OPERATORS_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [455 495])
            ("boost/config.hpp" include (:system-flag t) nil [497 524])
            ("boost/preprocessor/punctuation/comma.hpp" include (:system-flag t) nil [525 576])
            ("boost/mpl/logical.hpp" include (:system-flag t) nil [577 609])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [610 648])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [649 685])
            ("boost/proto/tags.hpp" include (:system-flag t) nil [686 717])
            ("boost/proto/domain.hpp" include (:system-flag t) nil [718 751])
            ("boost/proto/matches.hpp" include (:system-flag t) nil [752 786])
            ("boost/proto/generate.hpp" include (:system-flag t) nil [787 822])
            ("boost/proto/make_expr.hpp" include (:system-flag t) nil [823 859])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("enable_unary" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil)
                                            ("Grammar" type (:type "class") nil nil)
                                            ("Trait" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::lazy_enable_if_c" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1228 1642])
                                    ("enable_unary" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil)
                                            ("Trait" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil)
                                            ("Arg" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::lazy_enable_if_c" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("Domain" type nil nil nil)
                                            ("proto::_" type nil nil nil)
                                            ("Trait" type nil nil nil)
                                            ("Tag" type nil nil nil)
                                            ("Arg" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [1652 1935])
                                    ("enable_binary" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil)
                                            ("Grammar" type (:type "class") nil nil)
                                            ("Trait" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil)
                                            ("Left" type (:type "class") nil nil)
                                            ("Right" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::lazy_enable_if_c" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2307 2755])
                                    ("enable_binary" type
                                       (:template 
                                          ( ("Domain" type (:type "class") nil nil)
                                            ("Trait" type (:type "class") nil nil)
                                            ("Tag" type (:type "class") nil nil)
                                            ("Left" type (:type "class") nil nil)
                                            ("Right" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :superclasses 
                                          ( ("boost::lazy_enable_if_c" type
                                               (:protection "unspecified"
                                                :type "class")
                                                nil nil))                                          
                                        :template-specifier 
                                          ( ("Domain" type nil nil nil)
                                            ("proto::_" type nil nil nil)
                                            ("Trait" type nil nil nil)
                                            ("Tag" type nil nil nil)
                                            ("Left" type (:reference 1) nil nil)
                                            ("Right" type (:reference 1) nil nil))                                          )
                                        (reparse-symbol namespacesubparts) [2765 3086]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1041 3535])
                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_0" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3555 3588])
                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_1" variable (:constant-flag t) (reparse-symbol namespacesubparts) [3597 3630])
                            ("BOOST_PROTO_DEFINE_UNARY_OPERATOR" variable (:constant-flag t) (reparse-symbol namespacesubparts) [12695 12728])
                            ("BOOST_PROTO_DEFINE_BINARY_OPERATOR" variable (:constant-flag t) (reparse-symbol namespacesubparts) [14133 14167])
                            ("BOOST_PROTO_DEFINE_OPERATORS" variable (:constant-flag t) (reparse-symbol namespacesubparts) [15686 15714])
                            ("is_extension" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_expr" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  )
                                (reparse-symbol namespacesubparts) [19928 19999])
                            ("is_extension" type
                               (:template 
                                  ( ("T" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("is_expr" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("T" type (:reference 1) nil nil))                                  )
                                (reparse-symbol namespacesubparts) [20005 20081])
                            ("BOOST_PROTO_APPLY_UNARY_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [20095 20119])
                            ("BOOST_PROTO_APPLY_BINARY_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [20155 20180])
                            ("exprns_" type
                               (:members 
                                  ( ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Arg" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_" variable (:type ("arg" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("is_extension" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("BOOST_PP_COMMA" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("boost" function
                                       (:arguments 
                                          ( ("" variable
                                               (:reference 1
                                                :type ("Left" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("left" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil)
                                            ("" variable
                                               (:reference 1
                                                :type ("Right" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) nil)
                                            ("" variable (:type ("right" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) nil))                                          
                                        :type "int")
                                        (reparse-symbol namespacesubparts) [20354 20411])
                                    ("if_else" function
                                       (:typemodifiers ("typename")
                                        :arguments 
                                          ( ("a0" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A0" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20770 20783])
                                            ("a1" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A1" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20784 20797])
                                            ("a2" variable
                                               (:reference 1
                                                :constant-flag t
                                                :type ("A2" type (:type "class") nil nil))
                                                (reparse-symbol arg-sub-list) [20798 20811]))                                          
                                        :type ("result_of::make_expr::type" type (:type "class") nil nil))
                                        (reparse-symbol namespacesubparts) [20580 21047]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [20250 21053])
                            ("exprns_::if_else" using (:type ("exprns_::if_else" type
                                 (:prototype t
                                  :type "class")
                                  nil nil)) (reparse-symbol namespacesubparts) [21059 21082])
                            ("BOOST_PROTO_APPLY_UNARY_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [22993 23017])
                            ("BOOST_PROTO_APPLY_BINARY_" variable (:constant-flag t) (reparse-symbol namespacesubparts) [23517 23542]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [1019 24548]))                  
                :type "namespace")
                nil [1001 24549]))          
      :file "operators.hpp"
      :pointmax 24610
      :fsize 24609
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((symbol 20554 . 20571) (punctuation 20544 . 20545) (symbol 20542 . 20544) (TYPENAME 20533 . 20541) (punctuation 20531 . 20532) (symbol 20529 . 20531) (TYPENAME 20520 . 20528) (punctuation 20518 . 20519) (symbol 20516 . 20518) (TYPENAME 20507 . 20515) (punctuation 20506 . 20507) (TEMPLATE 20498 . 20506) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "bitwise_xor_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "bitwise_xor_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "bitwise_or_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "bitwise_or_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "bitwise_and_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "bitwise_and_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "minus_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "minus_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "plus_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "plus_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "modulus_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "modulus_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "divides_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "divides_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "multiplies_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "multiplies_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "shift_right_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "shift_right_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "shift_left_assign" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "shift_left_assign" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mem_ptr" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "mem_ptr" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (semantic-list "()" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "boost" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "boost" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "bitwise_xor" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "bitwise_xor" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "bitwise_or" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "bitwise_or" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "bitwise_and" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "bitwise_and" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "logical_and" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "logical_and" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "logical_or" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "logical_or" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "not_equal_to" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "not_equal_to" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "equal_to" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "equal_to" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "greater_equal" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "greater_equal" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "less_equal" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "less_equal" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "greater" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "greater" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "less" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "less" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "minus" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "minus" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "plus" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "plus" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "modulus" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "modulus" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "divides" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "divides" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "multiplies" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "multiplies" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "shift_right" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "shift_right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(RIGHT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(LEFT)" 0 1 (macros (("RIGHT" symbol "Right" 14 . 19) ("LEFT" symbol "Left" 8 . 12) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "or_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "shift_left" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "shift_left" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_binary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Right" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "Left" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "post_dec" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "post_dec" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "post_inc" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "post_inc" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "pre_dec" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "pre_dec" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "pre_inc" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "pre_inc" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "logical_not" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "logical_not" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "address_of" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "address_of" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "complement" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "complement" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "dereference" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "dereference" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "negate" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "negate" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (OPERATOR "operator" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "type" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation "&" 20354 . 20411) (CONST "const" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "is_extension" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "not_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (punctuation ">" 20354 . 20411) (semantic-list #("(ARG)" 0 1 (macros (("ARG" symbol "Arg" 8 . 11) ("TRAIT" symbol "tag" 1 . 6)))) 20354 . 20411) (symbol "BOOST_PROTO_UNCVREF" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "tag" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "and_" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "mpl" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "proto_grammar" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "unary_plus" 20354 . 20411) (punctuation "," 20354 . 20411) (symbol "unary_plus" 20354 . 20411) (punctuation "<" 20354 . 20411) (symbol "enable_unary" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "detail" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "proto" 20354 . 20411) (punctuation ":" 20354 . 20411) (punctuation ":" 20354 . 20411) (symbol "boost" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (symbol "BOOST_FORCEINLINE" 20354 . 20411) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 20354 . 20411) (punctuation ">" 20354 . 20411) (symbol "Arg" 20354 . 20411) (TYPENAME "typename" 20354 . 20411) (punctuation "<" 20354 . 20411) (TEMPLATE "template" 20354 . 20411) (punctuation 3527 . 3528) (semantic-list 3525 . 3527) (punctuation 3515 . 3516) (punctuation 3501 . 3502) (symbol 3495 . 3500) (punctuation 3493 . 3494) (punctuation 3477 . 3478) (symbol 3472 . 3476) (punctuation 3470 . 3471) (symbol 3452 . 3455) (punctuation 3450 . 3451) (symbol 3430 . 3435) (punctuation 3428 . 3429) (symbol 3400 . 3413) (punctuation 3399 . 3400) (punctuation 3398 . 3399) (symbol 3394 . 3398) (punctuation 3393 . 3394) (punctuation 3392 . 3393) (punctuation 3391 . 3392) (symbol 3386 . 3391) (punctuation 3384 . 3385) (symbol 3380 . 3384) (punctuation 3379 . 3380) (symbol 3365 . 3379) (TYPENAME 3356 . 3364) (punctuation 3354 . 3355) (symbol 3335 . 3339) (punctuation 3334 . 3335) (punctuation 3333 . 3334) (punctuation 3332 . 3333) (symbol 3327 . 3332) (punctuation 3325 . 3326) (symbol 3321 . 3325) (punctuation 3320 . 3321) (symbol 3306 . 3320) (TYPENAME 3297 . 3305) (punctuation 3279 . 3280) (symbol 3266 . 3279) (punctuation 3264 . 3265) (punctuation 3252 . 3253) (punctuation 3251 . 3252) (symbol 3245 . 3250) (punctuation 3243 . 3244) (punctuation 3242 . 3243) (symbol 3237 . 3241) (punctuation 3235 . 3236) (symbol 3232 . 3235) (punctuation 3230 . 3231) (symbol 3225 . 3230) (punctuation 3223 . 3224) (symbol 3210 . 3223) (punctuation 3208 . 3209) (symbol 3195 . 3208) (punctuation 3194 . 3195) (symbol 3181 . 3194) (STRUCT 3174 . 3180) (punctuation 3164 . 3165) (symbol 3159 . 3164) (TYPENAME 3150 . 3158) (punctuation 3148 . 3149) (symbol 3144 . 3148) (TYPENAME 3135 . 3143) (punctuation 3133 . 3134) (symbol 3130 . 3133) (TYPENAME 3121 . 3129) (punctuation 3119 . 3120) (symbol 3114 . 3119) (TYPENAME 3105 . 3113) (punctuation 3104 . 3105) (TEMPLATE 3096 . 3104) (punctuation 2296 . 2297) (semantic-list 2294 . 2296) (punctuation 2284 . 2285) (punctuation 2270 . 2271) (symbol 2266 . 2269) (punctuation 2264 . 2265) (symbol 2246 . 2249) (punctuation 2244 . 2245) (symbol 2224 . 2229) (punctuation 2222 . 2223) (symbol 2194 . 2207) (punctuation 2193 . 2194) (punctuation 2192 . 2193) (symbol 2188 . 2192) (punctuation 2187 . 2188) (punctuation 2186 . 2187) (punctuation 2185 . 2186) (symbol 2182 . 2185) (punctuation 2181 . 2182) (symbol 2172 . 2181) (TYPENAME 2163 . 2171) (punctuation 2161 . 2162) (symbol 2142 . 2146) (punctuation 2141 . 2142) (punctuation 2140 . 2141) (punctuation 2139 . 2140) (symbol 2136 . 2139) (punctuation 2135 . 2136) (symbol 2126 . 2135) (TYPENAME 2117 . 2125) (punctuation 2099 . 2100) (symbol 2087 . 2099) (punctuation 2085 . 2086) (punctuation 2073 . 2074) (punctuation 2072 . 2073) (symbol 2068 . 2071) (punctuation 2066 . 2067) (symbol 2063 . 2066) (punctuation 2061 . 2062) (symbol 2056 . 2061) (punctuation 2054 . 2055) (symbol 2041 . 2054) (punctuation 2039 . 2040) (symbol 2026 . 2039) (punctuation 2025 . 2026) (symbol 2013 . 2025) (STRUCT 2006 . 2012) (punctuation 1996 . 1997) (symbol 1993 . 1996) (TYPENAME 1984 . 1992) (punctuation 1982 . 1983) (symbol 1979 . 1982) (TYPENAME 1970 . 1978) (punctuation 1968 . 1969) (symbol 1963 . 1968) (TYPENAME 1954 . 1962) (punctuation 1953 . 1954) (TEMPLATE 1945 . 1953) (punctuation 1217 . 1218) (semantic-list 1215 . 1217) (punctuation 1205 . 1206) (symbol 1198 . 1205) (punctuation 1196 . 1197) (symbol 1192 . 1196) (punctuation 1191 . 1192) (punctuation 1190 . 1191) (symbol 1182 . 1190) (TYPENAME 1173 . 1181) (punctuation 1172 . 1173) (symbol 1165 . 1172) (punctuation 1164 . 1165) (punctuation 1163 . 1164) (symbol 1158 . 1163) (punctuation 1156 . 1157) (symbol 1133 . 1145) (STRUCT 1126 . 1132) (punctuation 1116 . 1117) (symbol 1109 . 1116) (TYPENAME 1100 . 1108) (punctuation 1098 . 1099) (symbol 1090 . 1098) (TYPENAME 1081 . 1089) (punctuation 1080 . 1081) (TEMPLATE 1072 . 1080))
      :lexical-table 
        '(("BOOST_PROTO_DEFINE_BINARY_OPERATOR" (spp-arg-list ("OP" "TAG" "TRAIT" "DOMAIN") 14167 . 14191) . 
              ((TEMPLATE "template" 14231 . 14239) (punctuation "<" 14239 . 14240) (TYPENAME "typename" 14240 . 14248) (symbol "Left" 14249 . 14253) (punctuation "," 14253 . 14254) (TYPENAME "typename" 14255 . 14263) (symbol "Right" 14264 . 14269) (punctuation ">" 14269 . 14270) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 14333 . 14363) (symbol "BOOST_FORCEINLINE" 14364 . 14381) (TYPENAME "typename" 14435 . 14443) (symbol "boost" 14444 . 14449) (punctuation ":" 14449 . 14450) (punctuation ":" 14450 . 14451) (symbol "proto" 14451 . 14456) (punctuation ":" 14456 . 14457) (punctuation ":" 14457 . 14458) (symbol "detail" 14458 . 14464) (punctuation ":" 14464 . 14465) (punctuation ":" 14465 . 14466) (symbol "enable_binary" 14466 . 14479) (punctuation "<" 14479 . 14480) (symbol "DOMAIN" 14541 . 14547) (punctuation "," 14641 . 14642) (symbol "DOMAIN" 14643 . 14649) (punctuation ":" 14649 . 14650) (punctuation ":" 14650 . 14651) (symbol "proto_grammar" 14651 . 14664) (punctuation "," 14743 . 14744) (symbol "BOOST_PROTO_APPLY_BINARY_" 14745 . 14770) (semantic-list "(TRAIT, Left, Right)" 14770 . 14790) (punctuation "," 14845 . 14846) (symbol "TAG" 14847 . 14850) (punctuation "," 14947 . 14948) (symbol "Left" 14949 . 14953) (CONST "const" 14954 . 14959) (punctuation "&" 14960 . 14961) (punctuation "," 15049 . 15050) (symbol "Right" 15051 . 15056) (CONST "const" 15057 . 15062) (punctuation "&" 15063 . 15064) (punctuation ">" 15149 . 15150) (punctuation ":" 15150 . 15151) (punctuation ":" 15151 . 15152) (symbol "type" 15152 . 15156) (CONST "const" 15157 . 15162) (OPERATOR "operator" 15251 . 15259) (symbol "OP" 15260 . 15262) (semantic-list "(Left &&left, Right &&right)" 15262 . 15290) (semantic-list "{                                                                                               \\
        return boost::proto::detail::make_expr_<TAG, DOMAIN, Left const &, Right const &>()(left, right);\\
    }" 15353 . 15563)))
          ("BOOST_PROTO_DEFINE_OPERATORS" (spp-arg-list ("TRAIT" "DOMAIN") 15714 . 15729) . 
              ((symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 15784 . 15817) (semantic-list "(+, boost::proto::tag::unary_plus, TRAIT, DOMAIN, 0)" 15817 . 15869) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 15886 . 15919) (semantic-list "(-, boost::proto::tag::negate, TRAIT, DOMAIN, 0)" 15919 . 15967) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 15988 . 16021) (semantic-list "(*, boost::proto::tag::dereference, TRAIT, DOMAIN, 0)" 16021 . 16074) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 16090 . 16123) (semantic-list "(~, boost::proto::tag::complement, TRAIT, DOMAIN, 0)" 16123 . 16175) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 16192 . 16225) (semantic-list "(&, boost::proto::tag::address_of, TRAIT, DOMAIN, 0)" 16225 . 16277) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 16294 . 16327) (semantic-list "(!, boost::proto::tag::logical_not, TRAIT, DOMAIN, 0)" 16327 . 16380) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 16396 . 16429) (semantic-list "(++, boost::proto::tag::pre_inc, TRAIT, DOMAIN, 0)" 16429 . 16479) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 16498 . 16531) (semantic-list "(--, boost::proto::tag::pre_dec, TRAIT, DOMAIN, 0)" 16531 . 16581) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 16600 . 16633) (semantic-list "(++, boost::proto::tag::post_inc, TRAIT, DOMAIN, 1)" 16633 . 16684) (symbol "BOOST_PROTO_DEFINE_UNARY_OPERATOR" 16702 . 16735) (semantic-list "(--, boost::proto::tag::post_dec, TRAIT, DOMAIN, 1)" 16735 . 16786) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 16804 . 16838) (semantic-list "(<<, boost::proto::tag::shift_left, TRAIT, DOMAIN)" 16838 . 16888) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 16906 . 16940) (semantic-list "(>>, boost::proto::tag::shift_right, TRAIT, DOMAIN)" 16940 . 16991) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17008 . 17042) (semantic-list "(*, boost::proto::tag::multiplies, TRAIT, DOMAIN)" 17042 . 17091) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17110 . 17144) (semantic-list "(/, boost::proto::tag::divides, TRAIT, DOMAIN)" 17144 . 17190) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17212 . 17246) (semantic-list "(%, boost::proto::tag::modulus, TRAIT, DOMAIN)" 17246 . 17292) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17314 . 17348) (semantic-list "(+, boost::proto::tag::plus, TRAIT, DOMAIN)" 17348 . 17391) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17416 . 17450) (semantic-list "(-, boost::proto::tag::minus, TRAIT, DOMAIN)" 17450 . 17494) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17518 . 17552) (semantic-list "(<, boost::proto::tag::less, TRAIT, DOMAIN)" 17552 . 17595) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17620 . 17654) (semantic-list "(>, boost::proto::tag::greater, TRAIT, DOMAIN)" 17654 . 17700) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17722 . 17756) (semantic-list "(<=, boost::proto::tag::less_equal, TRAIT, DOMAIN)" 17756 . 17806) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17824 . 17858) (semantic-list "(>=, boost::proto::tag::greater_equal, TRAIT, DOMAIN)" 17858 . 17911) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 17926 . 17960) (semantic-list "(==, boost::proto::tag::equal_to, TRAIT, DOMAIN)" 17960 . 18008) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18028 . 18062) (semantic-list "(!=, boost::proto::tag::not_equal_to, TRAIT, DOMAIN)" 18062 . 18114) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18130 . 18164) (semantic-list "(||, boost::proto::tag::logical_or, TRAIT, DOMAIN)" 18164 . 18214) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18232 . 18266) (semantic-list "(&&, boost::proto::tag::logical_and, TRAIT, DOMAIN)" 18266 . 18317) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18334 . 18368) (semantic-list "(&, boost::proto::tag::bitwise_and, TRAIT, DOMAIN)" 18368 . 18418) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18436 . 18470) (semantic-list "(|, boost::proto::tag::bitwise_or, TRAIT, DOMAIN)" 18470 . 18519) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18538 . 18572) (semantic-list "(^, boost::proto::tag::bitwise_xor, TRAIT, DOMAIN)" 18572 . 18622) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18640 . 18674) (semantic-list "(BOOST_PP_COMMA(), boost::proto::tag::comma, TRAIT, DOMAIN)" 18674 . 18733) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18742 . 18776) (semantic-list "(->*, boost::proto::tag::mem_ptr, TRAIT, DOMAIN)" 18776 . 18824) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18844 . 18878) (semantic-list "(<<=, boost::proto::tag::shift_left_assign, TRAIT, DOMAIN)" 18878 . 18936) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 18946 . 18980) (semantic-list "(>>=, boost::proto::tag::shift_right_assign, TRAIT, DOMAIN)" 18980 . 19039) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19048 . 19082) (semantic-list "(*=, boost::proto::tag::multiplies_assign, TRAIT, DOMAIN)" 19082 . 19139) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19150 . 19184) (semantic-list "(/=, boost::proto::tag::divides_assign, TRAIT, DOMAIN)" 19184 . 19238) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19252 . 19286) (semantic-list "(%=, boost::proto::tag::modulus_assign, TRAIT, DOMAIN)" 19286 . 19340) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19354 . 19388) (semantic-list "(+=, boost::proto::tag::plus_assign, TRAIT, DOMAIN)" 19388 . 19439) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19456 . 19490) (semantic-list "(-=, boost::proto::tag::minus_assign, TRAIT, DOMAIN)" 19490 . 19542) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19558 . 19592) (semantic-list "(&=, boost::proto::tag::bitwise_and_assign, TRAIT, DOMAIN)" 19592 . 19650) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19660 . 19694) (semantic-list "(|=, boost::proto::tag::bitwise_or_assign, TRAIT, DOMAIN)" 19694 . 19751) (symbol "BOOST_PROTO_DEFINE_BINARY_OPERATOR" 19762 . 19796) (semantic-list "(^=, boost::proto::tag::bitwise_xor_assign, TRAIT, DOMAIN)" 19796 . 19854)))
          ("BOOST_PROTO_APPLY_BINARY_" (spp-arg-list ("TRAIT" "LEFT" "RIGHT") 23542 . 23562) . 
              ((symbol "boost" 23615 . 23620) (punctuation ":" 23620 . 23621) (punctuation ":" 23621 . 23622) (symbol "mpl" 23622 . 23625) (punctuation ":" 23625 . 23626) (punctuation ":" 23626 . 23627) (symbol "and_" 23627 . 23631) (punctuation "<" 23631 . 23632) (symbol "boost" 23721 . 23726) (punctuation ":" 23726 . 23727) (punctuation ":" 23727 . 23728) (symbol "mpl" 23728 . 23731) (punctuation ":" 23731 . 23732) (punctuation ":" 23732 . 23733) (symbol "or_" 23733 . 23736) (punctuation "<" 23736 . 23737) (symbol "TRAIT" 23737 . 23742) (punctuation "<" 23742 . 23743) (symbol "BOOST_PROTO_UNCVREF" 23743 . 23762) (semantic-list "(LEFT)" 23762 . 23768) (punctuation ">" 23769 . 23770) (punctuation "," 23770 . 23771) (symbol "TRAIT" 23772 . 23777) (punctuation "<" 23777 . 23778) (symbol "BOOST_PROTO_UNCVREF" 23778 . 23797) (semantic-list "(RIGHT)" 23797 . 23804) (punctuation ">" 23805 . 23806) (punctuation ">" 23807 . 23808) (punctuation "," 23821 . 23822) (symbol "boost" 23823 . 23828) (punctuation ":" 23828 . 23829) (punctuation ":" 23829 . 23830) (symbol "mpl" 23830 . 23833) (punctuation ":" 23833 . 23834) (punctuation ":" 23834 . 23835) (symbol "not_" 23835 . 23839) (punctuation "<" 23839 . 23840) (symbol "boost" 23929 . 23934) (punctuation ":" 23934 . 23935) (punctuation ":" 23935 . 23936) (symbol "mpl" 23936 . 23939) (punctuation ":" 23939 . 23940) (punctuation ":" 23940 . 23941) (symbol "or_" 23941 . 23944) (punctuation "<" 23944 . 23945) (symbol "boost" 24035 . 24040) (punctuation ":" 24040 . 24041) (punctuation ":" 24041 . 24042) (symbol "proto" 24042 . 24047) (punctuation ":" 24047 . 24048) (punctuation ":" 24048 . 24049) (symbol "is_extension" 24049 . 24061) (punctuation "<" 24061 . 24062) (symbol "LEFT" 24062 . 24066) (punctuation ">" 24066 . 24067) (punctuation "," 24135 . 24136) (symbol "boost" 24137 . 24142) (punctuation ":" 24142 . 24143) (punctuation ":" 24143 . 24144) (symbol "proto" 24144 . 24149) (punctuation ":" 24149 . 24150) (punctuation ":" 24150 . 24151) (symbol "is_extension" 24151 . 24163) (punctuation "<" 24163 . 24164) (symbol "RIGHT" 24164 . 24169) (punctuation ">" 24169 . 24170) (punctuation ">" 24235 . 24236) (punctuation ">" 24333 . 24334) (punctuation ">" 24431 . 24432)))
          ("BOOST_PROTO_APPLY_UNARY_" (spp-arg-list ("TRAIT" "ARG") 23017 . 23029) . 
              ((symbol "boost" 23091 . 23096) (punctuation ":" 23096 . 23097) (punctuation ":" 23097 . 23098) (symbol "mpl" 23098 . 23101) (punctuation ":" 23101 . 23102) (punctuation ":" 23102 . 23103) (symbol "and_" 23103 . 23107) (punctuation "<" 23107 . 23108) (symbol "TRAIT" 23197 . 23202) (punctuation "<" 23202 . 23203) (symbol "BOOST_PROTO_UNCVREF" 23203 . 23222) (semantic-list "(ARG)" 23222 . 23227) (punctuation ">" 23228 . 23229) (punctuation "," 23297 . 23298) (symbol "boost" 23299 . 23304) (punctuation ":" 23304 . 23305) (punctuation ":" 23305 . 23306) (symbol "mpl" 23306 . 23309) (punctuation ":" 23309 . 23310) (punctuation ":" 23310 . 23311) (symbol "not_" 23311 . 23315) (punctuation "<" 23315 . 23316) (symbol "boost" 23316 . 23321) (punctuation ":" 23321 . 23322) (punctuation ":" 23322 . 23323) (symbol "proto" 23323 . 23328) (punctuation ":" 23328 . 23329) (punctuation ":" 23329 . 23330) (symbol "is_extension" 23330 . 23342) (punctuation "<" 23342 . 23343) (symbol "ARG" 23343 . 23346) (punctuation ">" 23346 . 23347) (punctuation ">" 23348 . 23349) (punctuation ">" 23397 . 23398)))
          ("BOOST_PROTO_OPERATORS_HPP_EAN_04_01_2005")
          ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_0")
          ("BOOST_PROTO_DEFINE_UNARY_OPERATOR" (spp-arg-list ("OP" "TAG" "TRAIT" "DOMAIN" "POST") 12728 . 12758) . 
              ((TEMPLATE "template" 12793 . 12801) (punctuation "<" 12801 . 12802) (TYPENAME "typename" 12802 . 12810) (symbol "Arg" 12811 . 12814) (punctuation ">" 12814 . 12815) (symbol "BOOST_PROTO_DISABLE_MSVC_C4714" 12895 . 12925) (symbol "BOOST_FORCEINLINE" 12926 . 12943) (TYPENAME "typename" 12997 . 13005) (symbol "boost" 13006 . 13011) (punctuation ":" 13011 . 13012) (punctuation ":" 13012 . 13013) (symbol "proto" 13013 . 13018) (punctuation ":" 13018 . 13019) (punctuation ":" 13019 . 13020) (symbol "detail" 13020 . 13026) (punctuation ":" 13026 . 13027) (punctuation ":" 13027 . 13028) (symbol "enable_unary" 13028 . 13040) (punctuation "<" 13040 . 13041) (symbol "DOMAIN" 13103 . 13109) (punctuation "," 13203 . 13204) (symbol "DOMAIN" 13205 . 13211) (punctuation ":" 13211 . 13212) (punctuation ":" 13212 . 13213) (symbol "proto_grammar" 13213 . 13226) (punctuation "," 13305 . 13306) (symbol "BOOST_PROTO_APPLY_UNARY_" 13307 . 13331) (semantic-list "(TRAIT, Arg)" 13331 . 13343) (punctuation "," 13407 . 13408) (symbol "TAG" 13409 . 13412) (punctuation "," 13509 . 13510) (symbol "Arg" 13511 . 13514) (CONST "const" 13515 . 13520) (punctuation "&" 13521 . 13522) (punctuation ">" 13609 . 13610) (punctuation ":" 13610 . 13611) (punctuation ":" 13611 . 13612) (symbol "type" 13612 . 13616) (CONST "const" 13617 . 13622) (OPERATOR "operator" 13711 . 13719) (symbol "OP" 13720 . 13722) (semantic-list "(Arg &&arg BOOST_PROTO_UNARY_OP_IS_POSTFIX_ ## POST)" 13722 . 13774) (semantic-list "{                                                                                               \\
        return boost::proto::detail::make_expr_<TAG, DOMAIN, Arg const &>()(arg);                   \\
    }" 13813 . 14018)))
          ("BOOST_PROTO_UNARY_OP_IS_POSTFIX_1" . ((punctuation "," 3631 . 3632) (INT "int" 3633 . 3636)))
          )
)
    (semanticdb-table "deep_copy.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_DEEP_COPY_HPP_EAN_11_21_2006" variable (:constant-flag t) nil [422 462])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [464 501])
            ("boost/preprocessor/repetition/enum.hpp" include (:system-flag t) nil [502 551])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [552 603])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [604 631])
            ("boost/type_traits/remove_reference.hpp" include (:system-flag t) nil [632 681])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [682 718])
            ("boost/proto/args.hpp" include (:system-flag t) nil [719 750])
            ("boost/proto/expr.hpp" include (:system-flag t) nil [751 782])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("detail" type
                               (:members 
                                  ( ("deep_copy_impl" type
                                       (:prototype t
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [921 943])
                                    ("deep_copy_impl" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("expr_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1271 1298])
                                            ("proto_generator" type
                                               (:typedef ("Expr::proto_generator" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [1312 1367])
                                            ("result_type" variable (:type ("type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1459 1476])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr2" type (:type "class") nil nil)
                                                    ("S" type (:type "class") nil nil)
                                                    ("D" type (:type "class") nil nil))                                                  
                                                :type ("result_type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr2" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1574 1589])
                                                    ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("S" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1590 1600])
                                                    ("" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("D" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [1601 1611]))                                                  
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [1490 1727]))                                          
                                        :template-specifier 
                                          ( ("Expr" type nil nil nil)
                                            ("0"))                                          )
                                        (reparse-symbol namespacesubparts) [953 1738]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [824 1744])
                            ("result_of" type
                               (:members 
                                  ( ("deep_copy" type
                                       (:template 
                                          ( ("Expr" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2366 2395]))                                          )
                                        (reparse-symbol namespacesubparts) [2173 2406]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [1750 2412])
                            ("functional" type
                               (:members 
                                  ( ("deep_copy" type
                                       (:members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [3153 3202])
                                            ("()" function
                                               (:template 
                                                  ( ("Expr" type (:type "class") nil nil))                                                  
                                                :type ("result_of::deep_copy::type" type (:type "class") nil nil)
                                                :arguments 
                                                  ( ("e" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Expr" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [3787 3801]))                                                  
                                                :typemodifiers ("typename")
                                                :operator-flag t)
                                                (reparse-symbol classsubparts) [3686 3906]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [3078 3917]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [2418 3923])
                            ("deep_copy" function
                               (:template 
                                  ( ("Expr" type (:type "class") nil nil))                                  
                                :type ("proto::result_of::deep_copy::type" type (:type "class") nil nil)
                                :arguments 
                                  ( ("e" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Expr" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4443 4457]))                                  
                                :typemodifiers ("typename"))
                                (reparse-symbol namespacesubparts) [4352 4532])
                            ("_deep_copy" type
                               (:superclasses 
                                  ( ("proto::transform" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :type "struct")
                                (reparse-symbol namespacesubparts) [4981 5192])
                            ("detail" type (:type "namespace") (reparse-symbol namespacesubparts) [5198 5330]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [802 5333]))                  
                :type "namespace")
                nil [784 5334]))          
      :file "deep_copy.hpp"
      :pointmax 5397
      :fsize 5396
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((spp-system-include "boost/proto/detail/deep_copy.hpp" 5273 . 5324) (punctuation 5184 . 5185) (semantic-list 5182 . 5184) (punctuation 5172 . 5173) (semantic-list 5169 . 5172) (symbol 5150 . 5169) (punctuation 5149 . 5150) (symbol 5135 . 5149) (punctuation 5134 . 5135) (punctuation 5133 . 5134) (symbol 5127 . 5133) (punctuation 5125 . 5126) (symbol 5110 . 5114) (STRUCT 5103 . 5109) (punctuation 5093 . 5094) (symbol 5092 . 5093) (TYPENAME 5083 . 5091) (punctuation 5081 . 5082) (symbol 5080 . 5081) (TYPENAME 5071 . 5079) (punctuation 5069 . 5070) (symbol 5068 . 5069) (TYPENAME 5059 . 5067) (punctuation 5058 . 5059) (TEMPLATE 5050 . 5058) (punctuation 3504 . 3505) (semantic-list 3305 . 3504) (punctuation 3291 . 3292) (semantic-list 3285 . 3291) (symbol 3281 . 3285) (punctuation 3280 . 3281) (symbol 3274 . 3280) (STRUCT 3267 . 3273) (punctuation 3253 . 3254) (symbol 3249 . 3253) (TYPENAME 3240 . 3248) (punctuation 3238 . 3239) (symbol 3234 . 3238) (TYPENAME 3225 . 3233) (punctuation 3224 . 3225) (TEMPLATE 3216 . 3224) (semantic-list 3137 . 3139) (symbol 3117 . 3137) (punctuation 2365 . 2366) (punctuation 2364 . 2365) (punctuation 2363 . 2364) (semantic-list 2340 . 2346) (symbol 2321 . 2340) (punctuation 2299 . 2300) (symbol 2285 . 2299) (punctuation 2284 . 2285) (punctuation 2283 . 2284) (symbol 2277 . 2283) (TYPENAME 2268 . 2276) (TYPEDEF 2244 . 2251) (punctuation 1458 . 1459) (punctuation 1457 . 1458) (punctuation 1456 . 1457) (semantic-list 1445 . 1456) (symbol 1430 . 1445) (punctuation 1429 . 1430) (symbol 1423 . 1429) (TEMPLATE 1414 . 1422) (punctuation 1413 . 1414) (punctuation 1412 . 1413) (symbol 1397 . 1412) (TYPENAME 1388 . 1396) (TYPEDEF 1380 . 1387) (punctuation 1270 . 1271) (punctuation 1269 . 1270) (punctuation 1268 . 1269) (punctuation 1250 . 1251) (symbol 1240 . 1250) (punctuation 1239 . 1240) (punctuation 1238 . 1239) (punctuation 1237 . 1238) (symbol 1225 . 1237) (punctuation 1224 . 1225) (punctuation 1223 . 1224) (symbol 1219 . 1223) (TYPENAME 1210 . 1218) (punctuation 1209 . 1210) (symbol 1198 . 1209) (TYPENAME 1189 . 1197) (punctuation 1188 . 1189) (symbol 1184 . 1188) (punctuation 1182 . 1183) (symbol 1155 . 1163) (punctuation 1154 . 1155) (punctuation 1153 . 1154) (symbol 1150 . 1153) (punctuation 1148 . 1149) (symbol 1117 . 1129) (punctuation 1116 . 1117) (punctuation 1115 . 1116) (symbol 1111 . 1115) (TYPENAME 1102 . 1110) (punctuation 1080 . 1081) (symbol 1071 . 1080) (TYPENAME 1062 . 1070) (TYPEDEF 1038 . 1045) (punctuation 911 . 912) (symbol 898 . 911) (punctuation 897 . 898) (punctuation 896 . 897) (symbol 892 . 896) (punctuation 890 . 891) (symbol 884 . 889) (LONG 879 . 883) (punctuation 877 . 878) (symbol 873 . 877) (TYPENAME 864 . 872) (punctuation 863 . 864) (TEMPLATE 855 . 863))
      :lexical-table 
        '(("BOOST_PROTO_DEEP_COPY_HPP_EAN_11_21_2006")
          )
)
    (semanticdb-table "make_expr.hpp"
      :major-mode 'c++-mode
      :tags 
        '( ("BOOST_PROTO_MAKE_EXPR_HPP_EAN_04_01_2005" variable (:constant-flag t) nil [539 579])
            ("boost/preprocessor/cat.hpp" include (:system-flag t) nil [581 618])
            ("boost/preprocessor/arithmetic/inc.hpp" include (:system-flag t) nil [619 667])
            ("boost/preprocessor/arithmetic/dec.hpp" include (:system-flag t) nil [668 716])
            ("boost/preprocessor/arithmetic/sub.hpp" include (:system-flag t) nil [717 765])
            ("boost/preprocessor/punctuation/comma_if.hpp" include (:system-flag t) nil [766 820])
            ("boost/preprocessor/iteration/iterate.hpp" include (:system-flag t) nil [821 872])
            ("boost/preprocessor/facilities/intercept.hpp" include (:system-flag t) nil [873 927])
            ("boost/preprocessor/repetition/enum.hpp" include (:system-flag t) nil [928 977])
            ("boost/preprocessor/repetition/enum_params.hpp" include (:system-flag t) nil [978 1034])
            ("boost/preprocessor/repetition/enum_binary_params.hpp" include (:system-flag t) nil [1035 1098])
            ("boost/preprocessor/repetition/enum_shifted_params.hpp" include (:system-flag t) nil [1099 1163])
            ("boost/preprocessor/repetition/enum_trailing_params.hpp" include (:system-flag t) nil [1164 1229])
            ("boost/preprocessor/repetition/enum_trailing_binary_params.hpp" include (:system-flag t) nil [1230 1302])
            ("boost/preprocessor/repetition/repeat.hpp" include (:system-flag t) nil [1303 1354])
            ("boost/ref.hpp" include (:system-flag t) nil [1355 1379])
            ("boost/mpl/if.hpp" include (:system-flag t) nil [1380 1407])
            ("boost/mpl/assert.hpp" include (:system-flag t) nil [1408 1439])
            ("boost/mpl/eval_if.hpp" include (:system-flag t) nil [1440 1472])
            ("boost/utility/enable_if.hpp" include (:system-flag t) nil [1473 1511])
            ("boost/type_traits/add_const.hpp" include (:system-flag t) nil [1512 1554])
            ("boost/type_traits/add_reference.hpp" include (:system-flag t) nil [1555 1601])
            ("boost/type_traits/remove_cv.hpp" include (:system-flag t) nil [1602 1644])
            ("boost/proto/proto_fwd.hpp" include (:system-flag t) nil [1645 1681])
            ("boost/proto/traits.hpp" include (:system-flag t) nil [1682 1715])
            ("boost/proto/domain.hpp" include (:system-flag t) nil [1716 1749])
            ("boost/proto/generate.hpp" include (:system-flag t) nil [1750 1785])
            ("boost/fusion/include/at_c.hpp" include (:system-flag t) nil [1786 1826])
            ("boost/fusion/include/begin.hpp" include (:system-flag t) nil [1827 1868])
            ("boost/fusion/include/next.hpp" include (:system-flag t) nil [1869 1909])
            ("boost/fusion/include/value_of.hpp" include (:system-flag t) nil [1910 1954])
            ("boost/fusion/include/size.hpp" include (:system-flag t) nil [1955 1995])
            ("boost/proto/detail/poly_function.hpp" include (:system-flag t) nil [1996 2043])
            ("boost/proto/detail/deprecated.hpp" include (:system-flag t) nil [2044 2088])
            ("boost" type
               (:members 
                  ( ("proto" type
                       (:members 
                          ( ("BOOST_PROTO_AS_CHILD_TYPE" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2391 2416])
                            ("BOOST_PROTO_AS_CHILD" variable (:constant-flag t) (reparse-symbol namespacesubparts) [2913 2933])
                            ("detail" type
                               (:members 
                                  ( ("as_expr" variable (:type "int") (reparse-symbol namespacesubparts) [3531 3553])
                                    ("as_child" variable (:type "int") (reparse-symbol namespacesubparts) [3667 3690])
                                    ("as_child" variable (:type "int") (reparse-symbol namespacesubparts) [3828 3851])
                                    ("as_child" variable (:type "int") (reparse-symbol namespacesubparts) [3995 4018]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [3409 4224])
                            ("result_of" type
                               (:members 
                                  ( ("make_expr" type
                                       (:members 
                                          ( ("type" variable (:type ("result_type" type (:type "class") nil nil)) (reparse-symbol classsubparts) [5733 5762]))                                          
                                        :type "struct")
                                        (reparse-symbol namespacesubparts) [5018 5773])
                                    ("unpack_expr" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Sequence" type (:type "class") nil nil)
                                            ("Void1" type (:type "class") nil nil)
                                            ("Void2" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("type" type
                                               (:typedef ("detail::unpack_expr_::type" type (:type "class") nil nil)
                                                :type "typedef")
                                                (reparse-symbol classsubparts) [9257 9507]))                                          )
                                        (reparse-symbol namespacesubparts) [8678 9518]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [4230 10628])
                            ("functional" type
                               (:members 
                                  ( ("make_expr" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [11294 11343])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("a0" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("A0" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [12098 12111]))                                                  
                                                :type ("result_of::make_expr::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [11949 12300]))                                          )
                                        (reparse-symbol namespacesubparts) [11109 12930])
                                    ("unpack_expr" type
                                       (:template 
                                          ( ("Tag" type (:type "class") nil nil)
                                            ("Domain" type (:type "class") nil nil))                                          
                                        :type "struct"
                                        :members 
                                          ( ("result" type
                                               (:template 
                                                  ( ("Sig" type (:type "class") nil nil))                                                  
                                                :type "struct"
                                                :prototype t)
                                                (reparse-symbol classsubparts) [13508 13557])
                                            ("()" function
                                               (:operator-flag t
                                                :typemodifiers ("typename")
                                                :arguments 
                                                  ( ("sequence" variable
                                                       (:reference 1
                                                        :constant-flag t
                                                        :type ("Sequence" type (:type "class") nil nil))
                                                        (reparse-symbol arg-sub-list) [14379 14404]))                                                  
                                                :type ("result_of::unpack_expr::type" type (:type "class") nil nil))
                                                (reparse-symbol classsubparts) [14282 14678]))                                          )
                                        (reparse-symbol namespacesubparts) [13362 14689]))                                  
                                :type "namespace")
                                (reparse-symbol namespacesubparts) [10634 14696])
                            ("make_expr" function
                               (:arguments 
                                  ( ("a0" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("A0" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15983 15996]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [15958 16130])
                            ("make_expr" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("c0" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("C0" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [16348 16361]))                                  
                                :type ("result_of::make_expr::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [16241 16488])
                            ("unpack_expr" function
                               (:arguments 
                                  ( ("sequence" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18193 18218]))                                  
                                :type ("type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [18166 18429])
                            ("unpack_expr" function
                               (:typemodifiers ("typename")
                                :arguments 
                                  ( ("sequence2" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("Sequence2" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [18637 18664]))                                  
                                :type ("result_of::unpack_expr::type" type (:type "class") nil nil))
                                (reparse-symbol namespacesubparts) [18547 18871])
                            ("is_callable" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("Domain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("functional::make_expr" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [18907 19033])
                            ("is_callable" type
                               (:template 
                                  ( ("Tag" type (:type "class") nil nil)
                                    ("Domain" type (:type "class") nil nil))                                  
                                :type "struct"
                                :superclasses 
                                  ( ("mpl::true_" type
                                       (:protection "unspecified"
                                        :type "class")
                                        nil nil))                                  
                                :template-specifier 
                                  ( ("functional::unpack_expr" type nil nil nil))                                  )
                                (reparse-symbol namespacesubparts) [19069 19197]))                          
                        :type "namespace")
                        (reparse-symbol namespacesubparts) [2343 19200]))                  
                :type "namespace")
                nil [2325 19201]))          
      :file "make_expr.hpp"
      :pointmax 19306
      :fsize 19305
      :lastmodtime '(21790 57544 0 0)
      :unmatched-syntax '((symbol 18525 . 18542) (punctuation 18519 . 18520) (symbol 18510 . 18519) (TYPENAME 18501 . 18509) (punctuation 18499 . 18500) (symbol 18493 . 18499) (TYPENAME 18484 . 18492) (punctuation 18482 . 18483) (symbol 18479 . 18482) (TYPENAME 18470 . 18478) (punctuation 18469 . 18470) (TEMPLATE 18461 . 18469) (punctuation 18165 . 18166) (punctuation 18164 . 18165) (punctuation 18163 . 18164) (punctuation 18157 . 18158) (CONST 18152 . 18157) (symbol 18143 . 18151) (punctuation 18141 . 18142) (symbol 18138 . 18141) (punctuation 18137 . 18138) (symbol 18126 . 18137) (punctuation 18125 . 18126) (punctuation 18124 . 18125) (symbol 18115 . 18124) (punctuation 18113 . 18114) (punctuation 18105 . 18106) (symbol 18097 . 18105) (punctuation 18096 . 18097) (symbol 18087 . 18096) (punctuation 18077 . 18078) (symbol 18062 . 18077) (TYPENAME 18053 . 18061) (symbol 18031 . 18048) (punctuation 18025 . 18026) (symbol 18017 . 18025) (TYPENAME 18008 . 18016) (punctuation 18006 . 18007) (symbol 18003 . 18006) (TYPENAME 17994 . 18002) (punctuation 17993 . 17994) (TEMPLATE 17985 . 17993) (spp-system-include "boost/proto/detail/make_expr.hpp" 16551 . 16598) (symbol 16219 . 16236) (punctuation 16213 . 16214) (symbol 16211 . 16213) (TYPENAME 16202 . 16210) (punctuation 16200 . 16201) (symbol 16194 . 16200) (TYPENAME 16185 . 16193) (punctuation 16183 . 16184) (symbol 16180 . 16183) (TYPENAME 16171 . 16179) (punctuation 16170 . 16171) (TEMPLATE 16162 . 16170) (punctuation 15957 . 15958) (punctuation 15956 . 15957) (punctuation 15955 . 15956) (punctuation 15949 . 15950) (CONST 15935 . 15940) (symbol 15932 . 15934) (punctuation 15930 . 15931) (symbol 15916 . 15919) (punctuation 15902 . 15903) (symbol 15893 . 15902) (punctuation 15892 . 15893) (punctuation 15891 . 15892) (symbol 15882 . 15891) (punctuation 15880 . 15881) (punctuation 15872 . 15873) (symbol 15870 . 15872) (punctuation 15869 . 15870) (symbol 15860 . 15869) (punctuation 15850 . 15851) (symbol 15835 . 15850) (TYPENAME 15826 . 15834) (symbol 15804 . 15821) (punctuation 15798 . 15799) (symbol 15796 . 15798) (TYPENAME 15787 . 15795) (punctuation 15785 . 15786) (symbol 15782 . 15785) (TYPENAME 15773 . 15781) (punctuation 15772 . 15773) (TEMPLATE 15764 . 15772) (symbol 14252 . 14269) (punctuation 14238 . 14239) (symbol 14230 . 14238) (TYPENAME 14221 . 14229) (punctuation 14220 . 14221) (TEMPLATE 14212 . 14220) (punctuation 13935 . 13936) (semantic-list 13668 . 13935) (punctuation 13654 . 13655) (semantic-list 13644 . 13654) (symbol 13640 . 13644) (punctuation 13639 . 13640) (symbol 13633 . 13639) (STRUCT 13626 . 13632) (punctuation 13612 . 13613) (symbol 13604 . 13612) (TYPENAME 13595 . 13603) (punctuation 13593 . 13594) (symbol 13589 . 13593) (TYPENAME 13580 . 13588) (punctuation 13579 . 13580) (TEMPLATE 13571 . 13579) (semantic-list 13492 . 13494) (symbol 13472 . 13492) (punctuation 12918 . 12919) (semantic-list 12916 . 12918) (punctuation 12902 . 12903) (semantic-list 12859 . 12885) (symbol 12830 . 12859) (symbol 12803 . 12809) (punctuation 12801 . 12802) (symbol 12779 . 12782) (punctuation 12757 . 12758) (symbol 12747 . 12757) (punctuation 12746 . 12747) (punctuation 12745 . 12746) (symbol 12739 . 12745) (punctuation 12737 . 12738) (symbol 12718 . 12722) (STRUCT 12711 . 12717) (punctuation 12697 . 12698) (semantic-list 12546 . 12684) (symbol 12519 . 12546) (punctuation 12641 . 12642) (punctuation 12501 . 12502) (TEMPLATE 12493 . 12501) (spp-system-include "boost/proto/detail/make_expr_funop.hpp" 12372 . 12433) (symbol 11919 . 11936) (punctuation 11905 . 11906) (symbol 11903 . 11905) (TYPENAME 11894 . 11902) (punctuation 11893 . 11894) (TEMPLATE 11885 . 11893) (punctuation 11668 . 11669) (semantic-list 11442 . 11668) (punctuation 11428 . 11429) (semantic-list 11424 . 11428) (symbol 11420 . 11424) (punctuation 11419 . 11420) (symbol 11413 . 11419) (STRUCT 11406 . 11412) (punctuation 11392 . 11393) (symbol 11390 . 11392) (TYPENAME 11381 . 11389) (punctuation 11379 . 11380) (symbol 11375 . 11379) (TYPENAME 11366 . 11374) (punctuation 11365 . 11366) (TEMPLATE 11357 . 11365) (semantic-list 11278 . 11280) (symbol 11253 . 11278) (semantic-list 11238 . 11240) (symbol 11218 . 11238) (punctuation 10621 . 10622) (semantic-list 9967 . 10621) (punctuation 9957 . 9958) (symbol 9941 . 9957) (punctuation 9940 . 9941) (punctuation 9939 . 9940) (symbol 9933 . 9939) (TYPENAME 9924 . 9932) (punctuation 9922 . 9923) (symbol 9914 . 9922) (punctuation 9912 . 9913) (symbol 9906 . 9912) (punctuation 9904 . 9905) (symbol 9901 . 9904) (punctuation 9900 . 9901) (symbol 9889 . 9900) (STRUCT 9882 . 9888) (punctuation 9872 . 9873) (symbol 9864 . 9872) (TYPENAME 9855 . 9863) (punctuation 9853 . 9854) (symbol 9847 . 9853) (TYPENAME 9838 . 9846) (punctuation 9836 . 9837) (symbol 9833 . 9836) (TYPENAME 9824 . 9832) (punctuation 9823 . 9824) (TEMPLATE 9815 . 9823) (punctuation 8033 . 8034) (semantic-list 6411 . 8033) (punctuation 6401 . 6402) (symbol 6376 . 6392) (punctuation 6375 . 6376) (punctuation 6374 . 6375) (symbol 6368 . 6374) (TYPENAME 6359 . 6367) (punctuation 6357 . 6358) (semantic-list 6320 . 6346) (symbol 6291 . 6320) (symbol 6272 . 6278) (punctuation 6270 . 6271) (symbol 6256 . 6259) (punctuation 6242 . 6243) (symbol 6233 . 6242) (STRUCT 6226 . 6232) (punctuation 6216 . 6217) (semantic-list 6172 . 6207) (symbol 6143 . 6172) (symbol 6124 . 6130) (TYPENAME 6115 . 6123) (punctuation 6113 . 6114) (symbol 6099 . 6102) (TYPENAME 6090 . 6098) (punctuation 6076 . 6077) (TEMPLATE 6068 . 6076) (punctuation 5732 . 5733) (punctuation 5731 . 5732) (punctuation 5730 . 5731) (semantic-list 5687 . 5713) (symbol 5658 . 5687) (symbol 5624 . 5637) (punctuation 5622 . 5623) (symbol 5600 . 5603) (punctuation 5578 . 5579) (symbol 5568 . 5578) (punctuation 5567 . 5568) (punctuation 5566 . 5567) (symbol 5560 . 5566) (TYPENAME 5551 . 5559) (TYPEDEF 5527 . 5534) (punctuation 5008 . 5009) (symbol 4983 . 4988) (TYPENAME 4974 . 4982) (punctuation 4972 . 4973) (symbol 4945 . 4950) (TYPENAME 4936 . 4944) (punctuation 4934 . 4935) (semantic-list 4888 . 4923) (symbol 4868 . 4888) (punctuation 4866 . 4867) (symbol 4852 . 4855) (TYPENAME 4843 . 4851) (punctuation 4829 . 4830) (TEMPLATE 4821 . 4829) (spp-system-include "boost/proto/detail/make_expr_.hpp" 4166 . 4218) (spp-system-include "boost/proto/detail/unpack_expr_.hpp" 4066 . 4120) (TEMPLATE 3986 . 3994) (punctuation 3985 . 3986) (punctuation 3984 . 3985) (symbol 3978 . 3984) (punctuation 3976 . 3977) (punctuation 3964 . 3965) (symbol 3958 . 3964) (punctuation 3956 . 3957) (CONST 3951 . 3956) (punctuation 3949 . 3950) (symbol 3948 . 3949) (punctuation 3947 . 3948) (symbol 3930 . 3947) (punctuation 3929 . 3930) (punctuation 3928 . 3929) (symbol 3923 . 3928) (punctuation 3922 . 3923) (symbol 3914 . 3922) (STRUCT 3907 . 3913) (punctuation 3897 . 3898) (symbol 3891 . 3897) (TYPENAME 3882 . 3890) (punctuation 3880 . 3881) (symbol 3879 . 3880) (TYPENAME 3870 . 3878) (punctuation 3869 . 3870) (TEMPLATE 3861 . 3869) (TEMPLATE 3819 . 3827) (punctuation 3818 . 3819) (punctuation 3817 . 3818) (symbol 3811 . 3817) (punctuation 3809 . 3810) (punctuation 3797 . 3798) (symbol 3791 . 3797) (punctuation 3789 . 3790) (punctuation 3788 . 3789) (symbol 3787 . 3788) (punctuation 3786 . 3787) (symbol 3769 . 3786) (punctuation 3768 . 3769) (punctuation 3767 . 3768) (symbol 3762 . 3767) (punctuation 3761 . 3762) (symbol 3753 . 3761) (STRUCT 3746 . 3752) (punctuation 3736 . 3737) (symbol 3730 . 3736) (TYPENAME 3721 . 3729) (punctuation 3719 . 3720) (symbol 3718 . 3719) (TYPENAME 3709 . 3717) (punctuation 3708 . 3709) (TEMPLATE 3700 . 3708) (TEMPLATE 3658 . 3666) (punctuation 3657 . 3658) (punctuation 3656 . 3657) (symbol 3650 . 3656) (punctuation 3648 . 3649) (punctuation 3636 . 3637) (symbol 3630 . 3636) (punctuation 3628 . 3629) (punctuation 3627 . 3628) (symbol 3625 . 3626) (punctuation 3624 . 3625) (symbol 3616 . 3624) (STRUCT 3609 . 3615) (punctuation 3599 . 3600) (symbol 3593 . 3599) (TYPENAME 3584 . 3592) (punctuation 3582 . 3583) (symbol 3581 . 3582) (TYPENAME 3572 . 3580) (punctuation 3571 . 3572) (TEMPLATE 3563 . 3571) (TEMPLATE 3522 . 3530) (punctuation 3521 . 3522) (punctuation 3520 . 3521) (symbol 3514 . 3520) (punctuation 3512 . 3513) (symbol 3493 . 3501) (STRUCT 3486 . 3492) (punctuation 3476 . 3477) (symbol 3470 . 3476) (TYPENAME 3461 . 3469) (punctuation 3459 . 3460) (symbol 3458 . 3459) (TYPENAME 3449 . 3457) (punctuation 3448 . 3449) (TEMPLATE 3440 . 3448))
      :lexical-table 
        '(("BOOST_PROTO_AS_CHILD" (spp-arg-list ("Z" "N" "DATA") 2933 . 2945) . 
              ((symbol "boost" 3007 . 3012) (punctuation ":" 3012 . 3013) (punctuation ":" 3013 . 3014) (symbol "proto" 3014 . 3019) (punctuation ":" 3019 . 3020) (punctuation ":" 3020 . 3021) (symbol "detail" 3021 . 3027) (punctuation ":" 3027 . 3028) (punctuation ":" 3028 . 3029) (symbol "protoify" 3029 . 3037) (punctuation "<" 3037 . 3038) (symbol "BOOST_PP_CAT" 3109 . 3121) (semantic-list "(BOOST_PP_TUPLE_ELEM(3, 0, DATA), N)" 3121 . 3157) (punctuation "," 3205 . 3206) (symbol "BOOST_PP_TUPLE_ELEM" 3207 . 3226) (semantic-list "(3, 2, DATA)" 3226 . 3238) (punctuation ">" 3301 . 3302) (semantic-list "()" 3302 . 3304) (semantic-list "(BOOST_PP_CAT(BOOST_PP_TUPLE_ELEM(3, 1, DATA), N))" 3304 . 3354)))
          ("BOOST_PROTO_AS_CHILD_TYPE" (spp-arg-list ("Z" "N" "DATA") 2416 . 2428) . 
              ((TYPENAME "typename" 2485 . 2493) (symbol "boost" 2494 . 2499) (punctuation ":" 2499 . 2500) (punctuation ":" 2500 . 2501) (symbol "proto" 2501 . 2506) (punctuation ":" 2506 . 2507) (punctuation ":" 2507 . 2508) (symbol "detail" 2508 . 2514) (punctuation ":" 2514 . 2515) (punctuation ":" 2515 . 2516) (symbol "protoify" 2516 . 2524) (punctuation "<" 2524 . 2525) (symbol "BOOST_PP_CAT" 2587 . 2599) (semantic-list "(BOOST_PP_TUPLE_ELEM(3, 0, DATA), N)" 2599 . 2635) (punctuation "," 2683 . 2684) (symbol "BOOST_PP_TUPLE_ELEM" 2685 . 2704) (semantic-list "(3, 2, DATA)" 2704 . 2716) (punctuation ">" 2779 . 2780) (punctuation ":" 2780 . 2781) (punctuation ":" 2781 . 2782) (symbol "result_type" 2782 . 2793)))
          ("BOOST_PROTO_MAKE_EXPR_HPP_EAN_04_01_2005")
          )
))
  :file "!usr!include!boost!proto!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
